{"id":401678039,"question_id":303,"lang":"cpp","lang_name":"C++","time":"4 years, 4 months","timestamp":1601269240,"status":10,"status_display":"Accepted","runtime":"28 ms","url":"/submissions/detail/401678039/","is_pending":"Not Pending","title":"Range Sum Query - Immutable","memory":"17.3 MB","code":"\nclass NumArray {\npublic:\n    NumArray(vector<int>& nums) {\n\t\tsums = nums;\n\t\tfor(int i=1; i<sums.size(); i++)\n\t\t\tsums[i] +=sums[i-1];\n    }\n    \n    int sumRange(int i, int j) {\n        return i==0? sums[j]: sums[j]-sums[i-1];\n    }\nprivate:\n\tvector<int> sums;\n};\n\n/**\n * Your NumArray object will be instantiated and called as such:\n * NumArray* obj = new NumArray(nums);\n * int param_1 = obj->sumRange(i,j);\n */","compare_result":"1111111111111111","title_slug":"range-sum-query-immutable","has_notes":false,"flag_type":1}