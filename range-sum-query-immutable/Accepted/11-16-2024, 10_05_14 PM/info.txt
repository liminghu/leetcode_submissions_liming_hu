{"id":1455015492,"question_id":303,"lang":"cpp","lang_name":"C++","time":"2 months, 3 weeks","timestamp":1731823514,"status":10,"status_display":"Accepted","runtime":"0 ms","url":"/submissions/detail/1455015492/","is_pending":"Not Pending","title":"Range Sum Query - Immutable","memory":"22.1 MB","code":"class NumArray {\nprivate:\n    vector<int> prefixSum;\npublic:\n    NumArray(vector<int>& nums) {\n        prefixSum = vector<int>(nums.size(), 0);\n        int sum = 0;\n        for(int i=0; i<nums.size(); i++) {\n            if(i>0)\n                prefixSum[i] = prefixSum[i-1]+nums[i];\n            else\n                prefixSum[i] = nums[i];\n        }\n    }\n    \n    int sumRange(int left, int right) {\n        if(left >0)\n            return prefixSum[right]-prefixSum[left-1];\n        else\n            return prefixSum[right];\n    }\n};\n\n/**\n * Your NumArray object will be instantiated and called as such:\n * NumArray* obj = new NumArray(nums);\n * int param_1 = obj->sumRange(left,right);\n */","compare_result":"111111111111111","title_slug":"range-sum-query-immutable","has_notes":false,"flag_type":1}