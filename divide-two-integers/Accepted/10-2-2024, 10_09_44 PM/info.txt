{"id":1410098755,"question_id":29,"lang":"cpp","lang_name":"C++","time":"4 months, 1 week","timestamp":1727932184,"status":10,"status_display":"Accepted","runtime":"0 ms","url":"/submissions/detail/1410098755/","is_pending":"Not Pending","title":"Divide Two Integers","memory":"8.5 MB","code":"/*\nGiven two integers dividend and divisor, divide two integers without using multiplication, division, and mod operator.\nThe integer division should truncate toward zero, which means losing its fractional part. For example, 8.345 would be \ntruncated to 8, and -2.7335 would be truncated to -2.\nReturn the quotient after dividing dividend by divisor.\nNote: Assume we are dealing with an environment that could only store integers within the 32-bit signed integer range: \n[−231, 231 − 1]. For this problem, if the quotient is strictly greater than 231 - 1, then return 231 - 1, and if the \nquotient is strictly less than -231, then return -231.\n-231 <= dividend, divisor <= 231 - 1\ndivisor != 0\n*/\nclass Solution {\npublic:\n    int divide(int dividend, int divisor) {\n        int sign = (dividend < 0) && (divisor < 0) || (dividend >= 0) && (divisor >= 0)? 1: -1;\n        long ldividend = abs( (long)dividend );\n        long ldivisor = abs( (long)divisor );\n\n        long res = 0;\n        while(ldivisor <= ldividend ) {//can be divided.\n            long temp = ldivisor;\n            long mul = 1;\n            while( (temp<<1) <= ldividend ) { //temp can become bigger.\n                temp <<= 1;\n                mul  <<= 1;\n            };\n\n            res += mul;\n            ldividend -= temp;\n        };\n\n        res *= sign;\n        if(res >= INT_MAX )\n            return INT_MAX;\n        else\n            return (int)res;\n    }\n};","compare_resulttitle_slug":"divide-two-integers","has_notes":false,"flag_type":1}