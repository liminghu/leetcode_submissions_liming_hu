{"id":1274585228,"question_id":259,"lang":"cpp","lang_name":"C++","time":"8 months, 1 week","timestamp":1717280176,"status":10,"status_display":"Accepted","runtime":"22 ms","url":"/submissions/detail/1274585228/","is_pending":"Not Pending","title":"3Sum Smaller","memory":"16.5 MB","code":"class Solution {\npublic:\n    int twoSumSmaller(vector<int>& nums, int start_index, int target) { \n        int ans=0;\n        int left = start_index;\n        int right = nums.size()-1;\n        while(left<right) {\n            if(nums[left]+nums[right]<target) {\n                ans+=right-left; //there are right-left pairs satisfy the condition.\n                left++;\n            }else {\n                right--;\n            }\n        }\n        return ans;\n    }\n\n    int threeSumSmaller(vector<int>& nums, int target) {\n        int ans = 0;\n        int n = nums.size();\n        if(n<3)\n            return ans;\n        sort(nums.begin(), nums.end()); //increasing\n\n        for(int i=0; i<n-2; i++) {\n            ans+= twoSumSmaller(nums, i+1, target-nums[i]);\n        };\n\n        return ans;\n    }\n};","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"3sum-smaller","has_notes":false,"flag_type":1}