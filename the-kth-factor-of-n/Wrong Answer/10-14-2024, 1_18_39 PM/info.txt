{"id":1422451886,"question_id":1585,"lang":"cpp","lang_name":"C++","time":"3 months, 3 weeks","timestamp":1728937119,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/1422451886/","is_pending":"Not Pending","title":"The kth Factor of n","memory":"N/A","code":"/*\nYou are given two positive integers n and k. A factor of an integer n is defined as an integer i where n % i == 0.\nConsider a list of all factors of n sorted in ascending order, return the kth factor in this list or return -1 if n has less than k factors.\n\nExample 1:\nInput: n = 12, k = 3\nOutput: 3\nExplanation: Factors list is [1, 2, 3, 4, 6, 12], the 3rd factor is 3.\n\nExample 2:\nInput: n = 7, k = 2\nOutput: 7\nExplanation: Factors list is [1, 7], the 2nd factor is 7.\n\nExample 3:\nInput: n = 4, k = 4\nOutput: -1\nExplanation: Factors list is [1, 2, 4], there is only 3 factors. We should return -1.\n \nConstraints:\n1 <= k <= n <= 1000\n \nFollow up:\nCould you solve this problem in less than O(n) complexity?\n*/\nclass Solution {\npublic:\n    int kthFactor(int n, int k) { // A factor of an integer n is defined as an integer i where n % i == 0.\n        int count = 0;\n        deque<int> q;\n        for(int i=1; i<=sqrt(n); i++) {\n            if (n % i == 0 ) {\n                q.push_front(i);\n                count++;\n                if(n/i != i)\n                    q.push_back(n/i); \n                if(count == k)\n                    return i;\n            }\n        }\n        if(k>q.size())\n            return -1;\n\n        while(q.size()>k) {\n            q.pop_back();\n        }\n        return q.back();\n    }\n};","compare_result":"11111111111110110111101011111101110110111010001011111110111111110111011000111111001110011101101011000011111000110110111111010001111111110111011100111110001111011111110110110110100111011110101010101101110110011","title_slug":"the-kth-factor-of-n","has_notes":false,"flag_type":1}