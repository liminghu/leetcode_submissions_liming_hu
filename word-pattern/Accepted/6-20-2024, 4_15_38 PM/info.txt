{"id":1295069569,"question_id":290,"lang":"cpp","lang_name":"C++","time":"7 months, 3 weeks","timestamp":1718925338,"status":10,"status_display":"Accepted","runtime":"3 ms","url":"/submissions/detail/1295069569/","is_pending":"Not Pending","title":"Word Pattern","memory":"7.7 MB","code":"class Solution {\npublic:\n    bool wordPattern(string pattern, string s) { \n    //s contains only lowercase English letters and spaces ' ';\n    // s does not contain any leading or trailing spaces.\n    //All the words in s are separated by a single space.\n\n    unordered_map<char, string> dict_p;\n     unordered_map<string, char> dict_s;\n    stringstream io(s);\n    string word_i;\n    vector<string> v_string;\n    while( io >> word_i) {\n        v_string.push_back(word_i);\n    }\n\n    if(v_string.size() != pattern.length())\n        return false;\n           \n    for(int i=0; i<pattern.length(); i++) {    \n         if(dict_p.find(pattern[i])== dict_p.end() && dict_s.find(v_string[i])== dict_s.end()) {\n            dict_p[pattern[i]] = v_string[i];\n            dict_s[v_string[i]] = pattern[i];\n        }\n    }\n\n    string pattern2 = \"\";\n    for(int i=0; i<v_string.size(); i++) {\n        if(dict_s.find(v_string[i])!=dict_s.end()) {\n            pattern2.push_back(dict_s[v_string[i]]);\n        }\n    }\n    return pattern == pattern2;\n        \n    }\n};","compare_result":"11111111111111111111111111111111111111111111","title_slug":"word-pattern","has_notes":false,"flag_type":1}