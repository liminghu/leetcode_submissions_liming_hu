{"id":1528303389,"question_id":793,"lang":"cpp","lang_name":"C++","time":"5 days, 11 hours","timestamp":1738475461,"status":10,"status_display":"Accepted","runtime":"2 ms","url":"/submissions/detail/1528303389/","is_pending":"Not Pending","title":"Swap Adjacent in LR String","memory":"9.5 MB","code":"class Solution {\npublic:\n    bool canTransform(string start, string result) {//Both start and result will only consist of characters in 'L', 'R', and 'X'.\n        int n = start.length();\n        //a move consists of either replacing one occurrence of \"XL\" with \"LX\", or replacing one occurrence of \"RX\" with \"XR\"\n        if(result.length()!=n)\n            return false;\n        int count = 0;\n        for(int i=0; i<n; i++) {\n            if(start[i]=='X')\n                count++;\n            if(result[i]=='X')\n                count--;\n        }\n        if(count!=0)\n            return false;\n        int i=0, j=0;\n        while(i<n && j<n) {\n            while(i<n && start[i]=='X')\n                i++;\n            while(j<n && result[j]=='X')\n                j++;\n            if(i==n || j==n)\n            return i==n && j==n;\n            if(start[i]!=result[j])\n                return false;\n            if(start[i]=='L' && i<j) //'L' can only move to left.\n                return false;\n           if(start[i]=='R' && i>j) //'R' can only move to right.\n                return false;            \n            i++;\n            j++;\n        }\n        return true;\n\n    }\n};","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"swap-adjacent-in-lr-string","has_notes":false,"flag_type":1}