{"id":1506980261,"question_id":2599,"lang":"cpp","lang_name":"C++","time":"3 weeks, 4 days","timestamp":1736751235,"status":10,"status_display":"Accepted","runtime":"6 ms","url":"/submissions/detail/1506980261/","is_pending":"Not Pending","title":"Take K of Each Character From Left and Right","memory":"13 MB","code":"class Solution {\npublic:\n    int takeCharacters(string s, int k) {\n        //s consisting of the characters 'a', 'b', and 'c' and a non-negative integer k\n        int ca=0, cb=0, cc=0;\n        int n=s.size();\n        for(int i=0; i<n; i++) {\n            if(s[i]=='a') \n                ca++;\n            if(s[i]=='b') \n                cb++;\n            if(s[i]=='c')\n                cc++;\n        }            \n        if(ca<k || cb<k || cc<k)\n            return -1;\n\n        int ret = 0;\n        int j=0; // i and j represents the characters we take from left and right respectively.\n        int a=0, b=0, c=0;\n        ca -=k;\n        cb -=k;\n        cc-= k;\n        for(int i=0; i<n; i++) {\n            while(a<=ca && b<=cb && c<=cc) { //we keep check of count of different alphabets and if any of these count becomes less than k, we start j pointer until the condition is satisfied.\n                ret = max(ret,j-i); //[i, j)\n                if(j==n)\n                    break;\n                if(s[j]=='a') a++;\n                if(s[j]=='b') b++;\n                if(s[j]=='c') c++;\n                j++;\n            }\n            if(s[i]=='a') a--;\n            if(s[i]=='b') b--;\n            if(s[i]=='c') c--;\n        }    \n        return n-ret;\n    }\n};","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"take-k-of-each-character-from-left-and-right","has_notes":false,"flag_type":1}