{"id":1407498823,"question_id":3444,"lang":"cpp","lang_name":"C++","time":"4 months, 1 week","timestamp":1727726201,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/1407498823/","is_pending":"Not Pending","title":"Find the Number of Good Pairs II","memory":"N/A","code":"/*\nYou are given 2 integer arrays nums1 and nums2 of lengths n and m respectively. You are also given a positive integer k.\nA pair (i, j) is called good if nums1[i] is divisible by nums2[j] * k (0 <= i <= n - 1, 0 <= j <= m - 1).\nReturn the total number of good pairs.\nConstraints:\n\n1 <= n, m <= 105\n1 <= nums1[i], nums2[j] <= 106\n1 <= k <= 103\n*/\nclass Solution {\npublic:\n    long long numberOfPairs(vector<int>& nums1, vector<int>& nums2, int k) {\n        long long ans = 0;\n        int n = nums1.size();\n        int m = nums2.size();\n        vector<int> new_nums1, new_nums2;\n\n        for(int i=0; i<n; i++) {\n            if  (nums1[i] % k == 0 )\n                new_nums1.push_back(nums1[i]/k);\n        }\n        sort(new_nums1.begin(), new_nums1.end());\n        new_nums2 = nums2;\n\n        sort(new_nums2.begin(), new_nums2.end());\n        unordered_map<long long, bool> dict;   //<nums_i,nums_j> checked before?  \n\n\n        for(int i=0; i<new_nums1.size(); i++) {\n            if(new_nums1[i] == 0) {\n                ans += nums2.size();\n                continue;\n            }\n            \n            for(int j=0; j<new_nums2.size(); j++) {\n                if(new_nums1[i] < new_nums2[j] || new_nums2[j] == 0)\n                    break;\n                if(new_nums2[j] == 1) {\n                    ans++;\n                    continue;\n                } \n                 \n                 //int mod_val = new_nums1[i] - new_nums1[i]/new_nums2[j] * new_nums2[j];\n                 long long key = new_nums1[i] * (long long)1000000 + new_nums2[j];\n                 if( dict.find(key) != dict.end() ) {\n                    if( dict[key] == 1) \n                        ans++;\n                 } \n                 int mod_val = new_nums1[i] - new_nums1[i] / new_nums2[j] * new_nums2[j];\n                 if(  mod_val == 0) {\n                    ans++;\n                    dict[key] = 1;  //true\n                 } else {\n                    dict[key] = 0;   //false\n                 }\n            }            \n        }\n        return ans;\n        \n    }\n};","compare_resulttitle_slug":"find-the-number-of-good-pairs-ii","has_notes":false,"flag_type":1}