{"id":1295039141,"question_id":1038,"lang":"cpp","lang_name":"C++","time":"7 months, 3 weeks","timestamp":1718920803,"status":10,"status_display":"Accepted","runtime":"0 ms","url":"/submissions/detail/1295039141/","is_pending":"Not Pending","title":"Number of Squareful Arrays","memory":"9.1 MB","code":"class Solution {\npublic:\n    vector<vector<int>> next; \n    int visited[12];\n    int sz;\n    int ret = 0;\n\n    int numSquarefulPerms(vector<int>& nums) {\n        sz = nums.size();\n        sort(nums.begin(), nums.end());\n        next.resize(sz);\n\n        for(int i=0; i<sz; i++) {\n            for(int j=0; j<sz; j++) {\n                if(i==j) continue;\n                double sq = sqrt(nums[i]+nums[j]);\n                if(sq == int(sq))\n                    next[i].push_back(j);\n            }\n        }\n\n        for(int i=0; i<sz; i++) {\n            if(i>0 && nums[i] == nums[i-1])\n                continue;\n            visited[i] = 1;\n            dfs(nums, i, 1);\n            visited[i] = 0;\n        }\n\n        return ret;\n    }\n\n    void dfs(vector<int>& nums, int cur, int count) {\n        if(count == sz) {\n            ret++;\n            return;\n        }\n        int last = -1;\n        for(int i: next[cur]) {\n            if(visited[i] == 1) continue;\n            if(nums[i]==last) continue;\n            visited[i] = 1;            \n            dfs(nums, i, count+1);\n            last = nums[i];\n            visited[i] = 0;\n        }\n    }\n\n\n};","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"number-of-squareful-arrays","has_notes":false,"flag_type":1}