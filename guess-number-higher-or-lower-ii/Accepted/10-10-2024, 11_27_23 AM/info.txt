{"id":1418340229,"question_id":375,"lang":"cpp","lang_name":"C++","time":"3 months, 4 weeks","timestamp":1728584843,"status":10,"status_display":"Accepted","runtime":"35 ms","url":"/submissions/detail/1418340229/","is_pending":"Not Pending","title":"Guess Number Higher or Lower II","memory":"9.8 MB","code":"/*\nWe are playing the Guessing Game. The game will work as follows:\nI pick a number between 1 and n.\nYou guess a number.\nIf you guess the right number, you win the game.\nIf you guess the wrong number, then I will tell you whether the number I picked is higher or lower, and you will continue guessing.\nEvery time you guess a wrong number x, you will pay x dollars. If you run out of money, you lose the game.\nGiven a particular n, return the minimum amount of money you need to guarantee a win regardless of what number I pick.\n\nExample 1:\nInput: n = 10\nOutput: 16\nExplanation: The winning strategy is as follows:\n- The range is [1,10]. Guess 7.\n    - If this is my number, your total is $0. Otherwise, you pay $7.\n    - If my number is higher, the range is [8,10]. Guess 9.\n        - If this is my number, your total is $7. Otherwise, you pay $9.\n        - If my number is higher, it must be 10. Guess 10. Your total is $7 + $9 = $16.\n        - If my number is lower, it must be 8. Guess 8. Your total is $7 + $9 = $16.\n    - If my number is lower, the range is [1,6]. Guess 3.\n        - If this is my number, your total is $7. Otherwise, you pay $3.\n        - If my number is higher, the range is [4,6]. Guess 5.\n            - If this is my number, your total is $7 + $3 = $10. Otherwise, you pay $5.\n            - If my number is higher, it must be 6. Guess 6. Your total is $7 + $3 + $5 = $15.\n            - If my number is lower, it must be 4. Guess 4. Your total is $7 + $3 + $5 = $15.\n        - If my number is lower, the range is [1,2]. Guess 1.\n            - If this is my number, your total is $7 + $3 = $10. Otherwise, you pay $1.\n            - If my number is higher, it must be 2. Guess 2. Your total is $7 + $3 + $1 = $11.\nThe worst case in all these scenarios is that you pay $16. Hence, you only need $16 to guarantee a win.\n\nExample 2:\nInput: n = 1\nOutput: 0\nExplanation: There is only one possible number, so you can guess 1 and not have to pay anything.\n\nExample 3:\nInput: n = 2\nOutput: 1\nExplanation: There are two possible numbers, 1 and 2.\n- Guess 1.\n    - If this is my number, your total is $0. Otherwise, you pay $1.\n    - If my number is higher, it must be 2. Guess 2. Your total is $1.\nThe worst case is that you pay $1.\n \nConstraints:\n1 <= n <= 200\n*/\nclass Solution {\npublic:\n    int getMoneyAmount(int n) {\n        vector<vector<int>> cost(n+2, vector(n+2, 0));\n        for(int start=1; start<=n; start++) //if lenth is 1, no cost.\n            cost[start][start] = 0;\n        \n        for(int len = 2; len<=n; len++) { //bottom up: length from small to big.\n            for(int start=1; start<=n-len+1; start++) {\n                int end= start+len-1;\n                cost[start][end] = INT_MAX; //from i to j\n                for(int k=start; k<=end; k++) { //guess k\n                    cost[start][end] = min(cost[start][end], k + max( cost[start][k-1], cost[k+1][end] ) );\n                }\n            }\n        }\n        return cost[1][n];\n    }\n};","compare_result":"111111111111111111111111111","title_slug":"guess-number-higher-or-lower-ii","has_notes":false,"flag_type":1}