{"id":1363954795,"question_id":474,"lang":"cpp","lang_name":"C++","time":"5 months, 2 weeks","timestamp":1724273918,"status":10,"status_display":"Accepted","runtime":"108 ms","url":"/submissions/detail/1363954795/","is_pending":"Not Pending","title":"Ones and Zeroes","memory":"13.4 MB","code":"/*\nYou are given an array of binary strings strs and two integers m and n.\nReturn the size of the largest subset of strs such that there are at most m 0's and n 1's in the subset.\nA set x is a subset of a set y if all elements of x are also elements of y.\n*/\nclass Solution {\npublic:\n    int findMaxForm(vector<string>& strs, int m, int n) {\n        /*  1 <= strs.length <= 600\n            1 <= strs[i].length <= 100\n            strs[i] consists only of digits '0' and '1'.\n            1 <= m, n <= 100\n        */\n        auto dp=vector<vector<int>>(m+1, vector<int>(n+1, 0)); //zeros, ones.\n        auto temp = dp;\n        for(int k=0; k<strs.size(); k++) {\n            int zeros = 0;\n            int ones = 0;\n            for(auto x:strs[k]) {\n                if(x=='0')\n                    zeros++;\n                else\n                    ones++;\n            };\n\n            for(int i=zeros; i<=m; i++) \n                for(int j=ones; j<=n; j++) {\n                    temp[i][j] = max(dp[i-zeros][j-ones]+1, dp[i][j]);\n                };\n            dp = temp;\n        }\n\n        return dp[m][n];\n    }\n};","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"ones-and-zeroes","has_notes":false,"flag_type":1}