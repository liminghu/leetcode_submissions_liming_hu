{"id":1518487846,"question_id":1192,"lang":"cpp","lang_name":"C++","time":"2Â weeks","timestamp":1737675790,"status":10,"status_display":"Accepted","runtime":"0 ms","url":"/submissions/detail/1518487846/","is_pending":"Not Pending","title":"Divide Chocolate","memory":"19 MB","code":"class Solution {\npublic:\n    int maximizeSweetness(vector<int>& sweetness, int k) {\n        int l = 1;\n        int r = 1e9/(k+1);\n        while(l<r) {\n            int mid = (l+r+1)/2;\n            int cur = 0, cuts = 0;\n            for(int a: sweetness) {\n                cur += a;\n                if( cur >= mid) {\n                    cur = 0;\n                    if(++cuts > k)\n                        break;\n                }\n            }\n            if(cuts > k) \n                l = mid;\n            else\n                r = mid -1;\n        }\n        return l;\n    }\n};","compare_result":"11111111111111111111111","title_slug":"divide-chocolate","has_notes":false,"flag_type":1}