{"id":1518489900,"question_id":1192,"lang":"cpp","lang_name":"C++","time":"2Â weeks","timestamp":1737676081,"status":10,"status_display":"Accepted","runtime":"5 ms","url":"/submissions/detail/1518489900/","is_pending":"Not Pending","title":"Divide Chocolate","memory":"19 MB","code":"class Solution {\npublic:\n    int maximizeSweetness(vector<int>& sweetness, int k) {\n        int numPeople = k+1;\n        int l = *min_element(sweetness.begin(), sweetness.end());\n        int r = accumulate(sweetness.begin(), sweetness.end(), 0)/numPeople;\n        while(l<r) {\n            int mid = (l+r+1)/2;\n            int curSweet = 0, peopleWithCho = 0;\n            for(int a: sweetness) {\n                curSweet += a;\n                if( curSweet >= mid) {\n                    peopleWithCho++;\n                    curSweet = 0;\n                }\n            }\n            if(peopleWithCho >= numPeople) \n                l = mid;\n            else\n                r = mid -1;\n        }\n        return l;\n    }\n};","compare_result":"11111111111111111111111","title_slug":"divide-chocolate","has_notes":false,"flag_type":1}