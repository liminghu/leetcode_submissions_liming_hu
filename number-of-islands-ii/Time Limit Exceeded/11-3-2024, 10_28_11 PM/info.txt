{"id":1442463148,"question_id":305,"lang":"cpp","lang_name":"C++","time":"3Â months","timestamp":1730701691,"status":14,"status_display":"Time Limit Exceeded","runtime":"N/A","url":"/submissions/detail/1442463148/","is_pending":"Not Pending","title":"Number of Islands II","memory":"N/A","code":"class Solution {\nprivate:\n    vector<int> roots;\n    vector<pair<int,int>> dirs = {{1, 0}, {-1, 0}, {0,1}, {0, -1}};\n    int findRoot(int idx) {\n        while(idx != roots[idx]) {\n            //idx = roots[idx];\n            roots[idx] = roots[ roots[idx] ];\n        }\n        return idx;\n    }\npublic:\n    vector<int> numIslands2(int m, int n, vector<vector<int>>& positions) {\n        vector<int> res;\n        if(m<=0 || n<=0)\n            return res;\n        roots = vector<int>(m*n, -1);\n        int numIsland = 0;\n        for(auto pos:positions) {\n            int x = pos[0];\n            int y = pos[1];\n            int idx_p = x*n + y;\n            roots[idx_p] = idx_p;\n            numIsland++;\n            for(auto dir:dirs) {\n                int row = x+dir.first;\n                int col = y+dir.second;\n                int idx_new = row*n+col;\n                if(row<0 || row>=m || col <0 || col >=n || roots[idx_new] == -1)\n                    continue;\n                int rootNew = findRoot(idx_new);\n                int rootPos = findRoot(idx_p);\n                if(rootPos != rootNew) {\n                    roots[rootPos] = rootNew;\n                    numIsland--;\n                }\n            }\n            res.push_back(numIsland);\n        }\n        return res;\n    }\n};","compare_result":"111000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000","title_slug":"number-of-islands-ii","has_notes":false,"flag_type":1}