{"id":1454668974,"question_id":439,"lang":"cpp","lang_name":"C++","time":"2 months, 3 weeks","timestamp":1731791918,"status":10,"status_display":"Accepted","runtime":"3 ms","url":"/submissions/detail/1454668974/","is_pending":"Not Pending","title":"Ternary Expression Parser","memory":"8.3 MB","code":"class Solution {\npublic:\n    string parseTernary(string expression) {\n        //only contains digits, '?', ':', 'T', and 'F' where 'T' is true and 'F' is false. All the numbers in the expression are one-digit numbers (i.e., in the range [0, 9]).\n        stack<char> st;\n        int i= expression.length() - 1;\n        while(i>=0) { //right to left\n            char curr = expression[i];\n            if(curr>='0' && curr<='9' || curr=='T' || curr == 'F')\n                st.push(curr);\n            else if(curr=='?') {\n                char onTrue = st.top();\n                st.pop();\n                char onFalse = st.top();\n                st.pop();\n                st.push(expression[i-1]=='T'? onTrue:onFalse);\n                i--;\n            }\n            i--;\n        }\n        string res;\n        res += st.top();\n        return res;\n    }\n};","compare_result":"1111111111111111111111111111111111111111111111111","title_slug":"ternary-expression-parser","has_notes":false,"flag_type":1}