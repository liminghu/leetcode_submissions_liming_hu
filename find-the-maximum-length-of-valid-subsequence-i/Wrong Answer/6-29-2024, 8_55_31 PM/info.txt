{"id":1304449175,"question_id":3490,"lang":"cpp","lang_name":"C++","time":"7 months, 1 week","timestamp":1719719731,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/1304449175/","is_pending":"Not Pending","title":"Find the Maximum Length of Valid Subsequence I","memory":"N/A","code":"/*\nYou are given an integer array nums.\nA subsequence sub of nums with length x is called valid if it satisfies:\n\n(sub[0] + sub[1]) % 2 == (sub[1] + sub[2]) % 2 == ... == (sub[x - 2] + sub[x - 1]) % 2.\nReturn the length of the longest valid subsequence of nums.\n\nA subsequence is an array that can be derived from another array by deleting some or no elements without changing the order of the remaining elements.\n*/\nclass Solution {\npublic:\n    int maximumLength(vector<int>& nums) { //2 <= nums.length <= 2 * 105\n                                            //1 <= nums[i] <= 107\n        int sz = nums.size();\n        vector<int> dp(sz+1, 0); //length of the longest valid subsequence of nums end ith element.\n        \n        dp[0] = 0; \n        dp[1] = 1;  \n        dp[2] = 2;\n        //dp[2] = 2 or 1\n        int dp_max = 2;\n        for(int i=3; i<=sz; i++) {\n            //dp[i-1]    //dp[i-2]\n            if ( (nums[i-1] + nums[i-2]) % 2  == (nums[i-2] + nums[i-3]) % 2)\n                dp[i] = dp[i-1]+1;\n            else {\n                dp[i] = dp_max; //delete i-1th element.\n                nums[i-1] = nums[i-2];\n                nums[i-2] = nums[i-3];\n            }\n            dp_max = max(dp_max, dp[i]);\n        }\n        \n        return dp[sz];\n        \n    }\n};","compare_resulttitle_slug":"find-the-maximum-length-of-valid-subsequence-i","has_notes":false,"flag_type":1}