{"id":1404534400,"question_id":373,"lang":"cpp","lang_name":"C++","time":"4 months, 1 week","timestamp":1727498527,"status":10,"status_display":"Accepted","runtime":"158 ms","url":"/submissions/detail/1404534400/","is_pending":"Not Pending","title":"Find K Pairs with Smallest Sums","memory":"141.9 MB","code":"/*\nYou are given two integer arrays nums1 and nums2 sorted in non-decreasing order and an integer k.\nDefine a pair (u, v) which consists of one element from the first array and one element from the second array.\nReturn the k pairs (u1, v1), (u2, v2), ..., (uk, vk) with the smallest sums.\n1 <= nums1.length, nums2.length <= 105\n-109 <= nums1[i], nums2[i] <= 109\nnums1 and nums2 both are sorted in non-decreasing order.\n1 <= k <= 104\nk <= nums1.length * nums2.length\n*/\nclass Solution {\npublic:\n    vector<vector<int>> kSmallestPairs(vector<int>& nums1, vector<int>& nums2, int k) {\n        vector<vector<int>> res;\n\n        priority_queue<pair<int,int>, vector<pair<int,int>>, greater<pair<int,int>>> pq; //sum, idx of nums2. min top.\n        for(int num1: nums1)\n            pq.push({num1 + nums2[0], 0});\n        while(!pq.empty()) {\n            int sum = pq.top().first;\n            int idx = pq.top().second; //idx of nums2.\n            res.push_back({sum-nums2[idx], nums2[idx]});\n            if(res.size() == k)\n                break;\n            pq.pop();\n\n            if(idx+1 < nums2.size())\n                pq.push( { sum - nums2[idx] + nums2[idx+1], idx+1 } );\n        }\n        return res;\n\n    }\n};","compare_result":"111111111111111111111111111111","title_slug":"find-k-pairs-with-smallest-sums","has_notes":false,"flag_type":1}