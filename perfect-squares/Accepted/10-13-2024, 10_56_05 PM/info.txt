{"id":1421706438,"question_id":279,"lang":"cpp","lang_name":"C++","time":"3 months, 3 weeks","timestamp":1728885365,"status":10,"status_display":"Accepted","runtime":"94 ms","url":"/submissions/detail/1421706438/","is_pending":"Not Pending","title":"Perfect Squares","memory":"11.2 MB","code":"/*\nGiven an integer n, return the least number of perfect square numbers that sum to n.\nA perfect square is an integer that is the square of an integer; in other words, \nit is the product of some integer with itself. For example, 1, 4, 9, and 16 are perfect squares \nwhile 3 and 11 are not.\n\n Example 1:\nInput: n = 12\nOutput: 3\nExplanation: 12 = 4 + 4 + 4.\n\nExample 2:\nInput: n = 13\nOutput: 2\nExplanation: 13 = 4 + 9.\n \nConstraints:\n1 <= n <= 104\n*/\nclass Solution {\npublic:\n    int numSquares(int n) {\n        vector<int> dp(n+1, INT_MAX);\n        dp[0] = 0;\n        for(int i=1; i<=n; i++) {\n            for(int x=1; x<=sqrt(i); x++) {\n                dp[i] = min(dp[i], dp[i-x*x]+1);\n            }\n        }         \n        return dp[n];\n    }\n};","compare_resulttitle_slug":"perfect-squares","has_notes":false,"flag_type":1}