{"id":1403235836,"question_id":228,"lang":"cpp","lang_name":"C++","time":"4 months, 1 week","timestamp":1727375175,"status":10,"status_display":"Accepted","runtime":"0 ms","url":"/submissions/detail/1403235836/","is_pending":"Not Pending","title":"Summary Ranges","memory":"8.6 MB","code":"/*\nYou are given a sorted unique integer array nums.\nA range [a,b] is the set of all integers from a to b (inclusive).\nReturn the smallest sorted list of ranges that cover all the numbers in the array exactly. \nThat is, each element of nums is covered by exactly one of the ranges, and there is no \ninteger x such that x is in one of the ranges but not in nums.\nEach range [a,b] in the list should be output as:\n\n\"a->b\" if a != b\n\"a\" if a == b\n 0 <= nums.length <= 20\n-231 <= nums[i] <= 231 - 1\nAll the values of nums are unique.\nnums is sorted in ascending order.\n */\nclass Solution {\npublic:\n    vector<string> summaryRanges(vector<int>& nums) {\n        //nums: sorted\n        int n = nums.size();\n        vector<string> ans;\n        for(int i=0; i<n; i++) {\n            //range.\n            int left = nums[i];\n            int right = nums[i];\n            int j = i;\n            while(j+1 <n && nums[j+1]==nums[j]+1)\n                j++;\n            right = nums[j];\n            string range_i;\n            if( j== i)\n                range_i = to_string(nums[i]);\n            else {\n                range_i += to_string(nums[i]);\n                range_i += \"->\";\n                range_i += to_string(nums[j]);\n            };\n            ans.push_back(range_i);\n            i = j;\n        };\n        return ans;\n        \n    }\n};","compare_result":"111111111111111111111111111111111","title_slug":"summary-ranges","has_notes":false,"flag_type":1}