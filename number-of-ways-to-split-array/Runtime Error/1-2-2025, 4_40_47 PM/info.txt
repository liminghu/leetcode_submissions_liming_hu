{"id":1495660046,"question_id":2358,"lang":"cpp","lang_name":"C++","time":"1Â month","timestamp":1735864847,"status":15,"status_display":"Runtime Error","runtime":"N/A","url":"/submissions/detail/1495660046/","is_pending":"Not Pending","title":"Number of Ways to Split Array","memory":"N/A","code":"class Solution {\npublic:\n    int waysToSplitArray(vector<int>& nums) {\n        int n = nums.size();\n        vector<int> prefix(n, 0);\n        prefix[0] = nums[0];\n        for(int i=1; i<n; i++)\n            prefix[i] = prefix[i-1]+nums[i];\n        int ret = 0;\n        for(int i=0; i<n-1; i++) {\n            int rightSum = prefix[n-1]-prefix[i];\n            int leftSum = prefix[i];\n            if(leftSum>=rightSum)\n                ret++; \n        }\n        return ret;\n    }\n};","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111110000000","title_slug":"number-of-ways-to-split-array","has_notes":false,"flag_type":1}