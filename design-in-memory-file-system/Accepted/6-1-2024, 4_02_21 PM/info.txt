{"id":1274602068,"question_id":588,"lang":"cpp","lang_name":"C++","time":"8 months, 1 week","timestamp":1717282941,"status":10,"status_display":"Accepted","runtime":"17 ms","url":"/submissions/detail/1274602068/","is_pending":"Not Pending","title":"Design In-Memory File System","memory":"21.2 MB","code":"class FileSystem {\npublic:\n    struct FileNode {\n        bool isfile = false;\n        unordered_map<string, FileNode*> next;\n        string content = \"\";\n    };\n    FileNode *root;\n\n    FileSystem() {\n        root = new FileNode();\n        \n    }\n\n    FileNode* goToPathFolder(string path) { //help function to go to the deepest, and create folder.\n        FileNode *cur = root;\n        stringstream s(path);\n        string folder;\n        while(getline(s,folder, '/')) {\n            if(folder.size()) {\n                if(cur->next[folder] == NULL) //creat new folder.\n                    cur->next[folder] = new FileNode();\n                cur = cur->next[folder];\n            }\n        }\n        return cur;\n    }\n    \n    vector<string> ls(string path) {\n        vector<string> ans;\n        FileNode *cur = goToPathFolder(path);\n        if(cur->isfile) {\n            ans.push_back(path.substr(path.find_last_of('/')+1));\n            return ans;\n        }\n        for(auto&p:cur->next) {\n            ans.push_back(p.first);\n        };\n        sort(ans.begin(), ans.end());\n        return ans;\n    }\n    \n    void mkdir(string path) {\n        FileNode *cur = goToPathFolder(path);\n    }\n    \n    void addContentToFile(string filePath, string content) {\n        FileNode *cur = goToPathFolder(filePath);\n        cur->content += content;\n        cur->isfile = true;\n    }\n    \n    string readContentFromFile(string filePath) {\n        FileNode *cur = goToPathFolder(filePath);\n        return cur->content;\n        \n    }\n};\n\n/**\n * Your FileSystem object will be instantiated and called as such:\n * FileSystem* obj = new FileSystem();\n * vector<string> param_1 = obj->ls(path);\n * obj->mkdir(path);\n * obj->addContentToFile(filePath,content);\n * string param_4 = obj->readContentFromFile(filePath);\n */","compare_result":"111111111111111111111111111111111111111111111111111111111111111","title_slug":"design-in-memory-file-system","has_notes":false,"flag_type":1}