{"id":1472077332,"question_id":2702,"lang":"cpp","lang_name":"C++","time":"2Â months","timestamp":1733509923,"status":10,"status_display":"Accepted","runtime":"42 ms","url":"/submissions/detail/1472077332/","is_pending":"Not Pending","title":"Maximum Number of Integers to Choose From a Range II","memory":"78 MB","code":"class Solution {\npublic:\n    int maxCount(vector<int>& banned, int n, long long maxSum) {\n        sort(banned.begin(), banned.end());\n        vector<int> sorted_banned;\n        for(int i=0; i<banned.size(); i++) {  //remove repeated numbers.\n            if(i==0 || banned[i]!=sorted_banned.back())\n                sorted_banned.push_back(banned[i]);\n        }\n        int m = sorted_banned.size();\n        vector<long long> preSum(m, 0);\n        preSum[0] = sorted_banned[0];\n        for(int i=1; i<m; i++)\n            preSum[i] = preSum[i-1]+sorted_banned[i];\n\n        long long  lo = 1;\n        long long  hi = n;\n        while(lo<hi) {\n            int mid = (lo+hi)/2+1; //lo+(hi-lo)/2+1;  //check this carefully to prevent dead loop.\n            long long sum = (long long)mid*(mid+1)/2;\n            int index = upper_bound(sorted_banned.begin(), sorted_banned.end(), mid) - sorted_banned.begin();\n            if(index > 0)\n                sum -= preSum[index-1];\n            if(sum == maxSum)\n                return mid-index;\n            else if(sum > maxSum)\n                hi = mid-1;\n            else\n                lo = mid;\n        }\n        int index = upper_bound(sorted_banned.begin(), sorted_banned.end(), lo) - sorted_banned.begin();\n        return lo-index;\n    }\n};","compare_result":"111111111111111111111111111111111111111","title_slug":"maximum-number-of-integers-to-choose-from-a-range-ii","has_notes":false,"flag_type":1}