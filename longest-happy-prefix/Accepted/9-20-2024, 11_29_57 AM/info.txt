{"id":1396745530,"question_id":1508,"lang":"cpp","lang_name":"C++","time":"4 months, 2 weeks","timestamp":1726856997,"status":10,"status_display":"Accepted","runtime":"34 ms","url":"/submissions/detail/1396745530/","is_pending":"Not Pending","title":"Longest Happy Prefix","memory":"21.7 MB","code":"/*\nA string is called a happy prefix if is a non-empty prefix which is also a suffix (excluding itself).\nGiven a string s, return the longest happy prefix of s. Return an empty string \"\" if no such prefix exists.\n1 <= s.length <= 105\ns contains only lowercase English letters.\n*/\nclass Solution {\npublic:\n    string longestPrefix(string s) {\n        int sz = s.length();\n        vector<int> dp(sz,0); // dp[i]: the max lenth k s.t. s[0, k-1] = s[i-k+1, i]\n        dp[0] = 0; \n        for(int i=1; i<sz; i++) {\n            int j = dp[i-1];\n            while( j>=1 && s[j] != s[i] ) {\n                j = dp[j-1];                \n            }\n            dp[i] = j + (s[i] == s[j]);\n        }\n\n        int len = dp[sz-1];\n        return s.substr(0, len);\n    }\n};","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"longest-happy-prefix","has_notes":false,"flag_type":1}