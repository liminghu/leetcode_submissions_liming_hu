{"id":1449931084,"question_id":1633,"lang":"cpp","lang_name":"C++","time":"2 months, 3 weeks","timestamp":1731356037,"status":10,"status_display":"Accepted","runtime":"0 ms","url":"/submissions/detail/1449931084/","is_pending":"Not Pending","title":"Minimum Number of Increments on Subarrays to Form a Target Array","memory":"76 MB","code":"/*\nYou are given an integer array target. You have an integer array initial of the same size as target with all elements initially zeros.\nIn one operation you can choose any subarray from initial and increment each value by one.\nReturn the minimum number of operations to form a target array from initial.\nThe test cases are generated so that the answer fits in a 32-bit integer.\n\nExample 1:\nInput: target = [1,2,3,2,1]\nOutput: 3\nExplanation: We need at least 3 operations to form the target array from the initial array.\n[0,0,0,0,0] increment 1 from index 0 to 4 (inclusive).\n[1,1,1,1,1] increment 1 from index 1 to 3 (inclusive).\n[1,2,2,2,1] increment 1 at index 2.\n[1,2,3,2,1] target array is formed.\n\nExample 2:\nInput: target = [3,1,1,2]\nOutput: 4\nExplanation: [0,0,0,0] -> [1,1,1,1] -> [1,1,1,2] -> [2,1,1,2] -> [3,1,1,2]\n\nExample 3:\nInput: target = [3,1,5,4,2]\nOutput: 7\nExplanation: [0,0,0,0,0] -> [1,1,1,1,1] -> [2,1,1,1,1] -> [3,1,1,1,1] -> [3,1,2,2,2] -> [3,1,3,3,2] -> [3,1,4,4,2] -> [3,1,5,4,2].\n \n\nConstraints:\n1 <= target.length <= 105\n1 <= target[i] <= 105\n*/\nclass Solution {\npublic:\n    int minNumberOperations(vector<int>& target) {\n        int ret = 0;\n        int curHeight = 0;\n        for(int i=0; i<target.size(); i++) {\n            if(target[i] > curHeight)\n                ret += target[i] - curHeight;\n            curHeight = target[i]; \n        }\n        return ret;\n    }\n};","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"minimum-number-of-increments-on-subarrays-to-form-a-target-array","has_notes":false,"flag_type":1}