{"id":398913613,"question_id":332,"lang":"cpp","lang_name":"C++","time":"4 years, 4 months","timestamp":1600726539,"status":10,"status_display":"Accepted","runtime":"36 ms","url":"/submissions/detail/398913613/","is_pending":"Not Pending","title":"Reconstruct Itinerary","memory":"15.3 MB","code":"\nclass Solution {\npublic:\n    vector<string> findItinerary(vector<vector<string>>& tickets) {\n        route_.clear();\n\t\ttrips_.clear();\n\t\t\n\t\tfor(const auto& pair:tickets)\n\t\t\ttrips_[pair[0]].push_back(pair[1]);\n\t\t\n\t\tfor(auto& pair: trips_) {\n\t\t\tauto& dests = pair.second; //value\n\t\t\tsort(dests.begin(), dests.end());\n\t\t}\n\t\t\n\t\tconst string kStart = \"JFK\";\n\t\tvisit(kStart);\n\t\t\n\t\tstd::reverse(route_.begin(),route_.end());   \n        return route_;\n    }\nprivate:\n\tvector<string> route_; //result, reversed.\n\t//src->{dst1, dst2, ...,dstn}\n\tunordered_map<string, deque<string>> trips_;  //graph.\n\tvoid visit(const string& src) {\n\t\tauto& dests = trips_[src];\n\t\twhile(!dests.empty()) {\n\t\t\t//get the smallest.\n\t\t\tconst string dest = dests.front();\n\t\t\t//remove the front.\n\t\t\tdests.pop_front();\n\t\t\t//visit\n\t\t\tvisit(dest);\n\t\t}\n\t\troute_.push_back(src); //post order.\n\t}\n};","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"reconstruct-itinerary","has_notes":false,"flag_type":1}