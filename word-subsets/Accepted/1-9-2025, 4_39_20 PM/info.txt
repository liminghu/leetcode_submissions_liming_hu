{"id":1503524812,"question_id":952,"lang":"cpp","lang_name":"C++","time":"4Â weeks","timestamp":1736469560,"status":10,"status_display":"Accepted","runtime":"75 ms","url":"/submissions/detail/1503524812/","is_pending":"Not Pending","title":"Word Subsets","memory":"106.9 MB","code":"class Solution {\npublic:\n    vector<string> wordSubsets(vector<string>& words1, vector<string>& words2) {\n        //Return an array of all the universal strings in words1. You may return the answer in any order.\n        vector<int> count(26), tmp(26);\n        int i=0;\n        for(string s2: words2) {\n            tmp = counter(s2);\n            for(int i=0; i<26; i++)\n                count[i] = max(count[i], tmp[i]);\n        }\n        vector<string> res;\n        for(string s1:words1) {\n            tmp = counter(s1);\n            for(i=0; i<26; i++) {\n                if(tmp[i]<count[i])\n                    break;\n            }\n            if(i==26)\n                res.push_back(s1);\n        }\n        return res;\n    }\n    vector<int> counter(string s1) {\n        vector<int> dict1(26, 0);\n        for(char c: s1)\n            dict1[c-'a']++;\n        return dict1;\n    }\n};","compare_result":"11111111111111111111111111111111111111111111111111111111","title_slug":"word-subsets","has_notes":false,"flag_type":1}