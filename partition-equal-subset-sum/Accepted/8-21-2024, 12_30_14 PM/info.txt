{"id":1363889277,"question_id":416,"lang":"cpp","lang_name":"C++","time":"5 months, 2 weeks","timestamp":1724268614,"status":10,"status_display":"Accepted","runtime":"63 ms","url":"/submissions/detail/1363889277/","is_pending":"Not Pending","title":"Partition Equal Subset Sum","memory":"16.7 MB","code":"class Solution {\nprivate:\n    bool dp[201][20001]; //num of elements, possible sums. 1 <= nums.length <= 200; 1 <= nums[i] <= 100 200*100\npublic:\n    bool canPartition(vector<int>& nums) {\n        int sum = accumulate(nums.begin(), nums.end(), 0);\n        if(sum%2 == 1)  \n            return false;\n        \n        int n= nums.size();\n        nums.insert(nums.begin(), 0);\n        dp[0][0] = true;\n        for(int i=1; i<=n; i++) {\n            for(int s=0; s<=sum/2; s++) {\n                dp[i][s] = dp[i-1][s] || ( s>=nums[i]  && dp[i-1][ s- nums[i] ]);\n            }\n        }\n\n        return dp[n][sum/2];\n        \n    }\n};","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"partition-equal-subset-sum","has_notes":false,"flag_type":1}