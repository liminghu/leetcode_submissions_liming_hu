{"id":1507749411,"question_id":2716,"lang":"cpp","lang_name":"C++","time":"3 weeks, 3 days","timestamp":1736809328,"status":10,"status_display":"Accepted","runtime":"6 ms","url":"/submissions/detail/1507749411/","is_pending":"Not Pending","title":"Prime Subtraction Operation","memory":"29.4 MB","code":"class Solution {\npublic:\n    bool primeSubOperation(vector<int>& nums) {\n        //Pick an index i that you haven’t picked before, and pick a prime p strictly less than nums[i], then subtract p from nums[i].\n        int n = nums.size();\n        vector<int> primes;\n        for(int i=2; i<=1000; i++) {\n            if(isPrime(i))\n                primes.push_back(i);\n        };\n        int l = 0, h = 0;\n        for(int i=n-2; i>=0; i--) {\n            if(nums[i]>=nums[i+1]) {\n                l = (nums[i] - nums[i+1]) + 1;\n                h = nums[i];\n                int p = getPrime(primes, l, h);\n                if(p==h)\n                    return false;\n                else\n                    nums[i] -= p;\n            }\n        }\n        return true;\n    }\n    bool isPrime(int num) {\n        for(int i=2; i*i<=num; i++) {\n            if(num%i==0)\n                return false;\n        }\n        return true;\n    }\n    int getPrime(const vector<int>& primes, int l, int h) {\n        for(int prime:primes) {\n            if(l<=prime && prime<h)\n                return prime;\n        }\n        return h;\n    }\n};","compare_resulttitle_slug":"prime-subtraction-operation","has_notes":false,"flag_type":1}