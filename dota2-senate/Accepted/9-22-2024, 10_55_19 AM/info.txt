{"id":1398811140,"question_id":649,"lang":"cpp","lang_name":"C++","time":"4 months, 2 weeks","timestamp":1727027719,"status":10,"status_display":"Accepted","runtime":"6 ms","url":"/submissions/detail/1398811140/","is_pending":"Not Pending","title":"Dota2 Senate","memory":"10.6 MB","code":"/*\nIn the world of Dota2, there are two parties: the Radiant and the Dire.\nThe Dota2 senate consists of senators coming from two parties. Now the Senate wants to decide on a change in the Dota2 game. \nThe voting for this change is a round-based procedure. In each round, each senator can exercise one of the two rights:\nBan one senator's right: A senator can make another senator lose all his rights in this and all the following rounds.\nAnnounce the victory: If this senator found the senators who still have rights to vote are all from the same party, he can \nannounce the victory and decide on the change in the game.\nGiven a string senate representing each senator's party belonging. The character 'R' and 'D' represent the Radiant party \nand the Dire party. Then if there are n senators, the size of the given string will be n.\nThe round-based procedure starts from the first senator to the last senator in the given order. This procedure will last \nuntil the end of voting. All the senators who have lost their rights will be skipped during the procedure.\nSuppose every senator is smart enough and will play the best strategy for his own party. Predict which party will finally \nannounce the victory and change the Dota2 game. The output should be \"Radiant\" or \"Dire\".\nn == senate.length\n1 <= n <= 104\nsenate[i] is either 'R' or 'D'.\n*/\nclass Solution {\npublic:\n    string predictPartyVictory(string senate) { //'R' 'D'   n \n        int n = senate.size();\n        queue<int> r;\n        queue<int> d;\n        for(int i=0; i<n; i++) {\n            if(senate[i] == 'R') \n                r.push(i);\n            else \n                d.push(i);\n        }\n        while(!r.empty() && !d.empty()) {\n            int rTurn = r.front();\n            r.pop();\n            int dTurn = d.front();\n            d.pop();\n            if(rTurn < dTurn) \n                r.push(rTurn+n);\n            else\n                d.push(dTurn+n);\n        }\n        return r.empty()? \"Dire\" : \"Radiant\";\n    }\n};","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"dota2-senate","has_notes":false,"flag_type":1}