{"id":1487561339,"question_id":515,"lang":"cpp","lang_name":"C++","time":"1 month, 2 weeks","timestamp":1735085157,"status":10,"status_display":"Accepted","runtime":"0 ms","url":"/submissions/detail/1487561339/","is_pending":"Not Pending","title":"Find Largest Value in Each Tree Row","memory":"22.8 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    vector<int> largestValues(TreeNode* root) {\n        vector<int> rets = {};\n        if(root==NULL)\n            return rets;\n        queue<TreeNode*> q;\n        q.push(root);\n        while(!q.empty()) {\n            int sz = q.size();\n            int maxVal = INT_MIN;\n            for(int i=0; i<sz; i++) {\n                TreeNode* cur = q.front();\n                q.pop();\n                maxVal = max(maxVal, cur->val);\n                if(cur->left)\n                    q.push(cur->left);\n                if(cur->right)\n                    q.push(cur->right);\n            }\n            rets.push_back(maxVal);\n        }\n        return rets;\n    }\n};","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"find-largest-value-in-each-tree-row","has_notes":false,"flag_type":1}