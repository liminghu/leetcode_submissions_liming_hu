{"id":1275663762,"question_id":1146,"lang":"cpp","lang_name":"C++","time":"8 months, 1 week","timestamp":1717358260,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/1275663762/","is_pending":"Not Pending","title":"Greatest Common Divisor of Strings","memory":"N/A","code":"class Solution {\npublic:\n    string gcdOfStrings(string str1, string str2) { //str1 and str2 consist of English uppercase letters.\n    //we say \"t divides s\" if and only if s = t + t + t + ... + t + t (i.e., t is concatenated with itself one or more times).\n        string ans;\n        int n1 = str1.length(), n2=str2.length();\n        vector<int> dict(26,0);\n\n        //The greatest common divisor must be a prefix of each string, so we can try all prefixes.\n        int i=0, j=0;\n        string gcd;\n        while(i<n1 & j<n2) {\n            if(str1[i]== str2[j]) {\n                gcd+=str1[i];\n                i++;\n                j++;\n            } else {\n                break;\n            };\n        };\n\n        if(gcd.length()==0)\n            return gcd;\n        \n        if(i==n1 && j==n2)\n            return gcd;\n        \n        if(i<n1 && j==n2) {\n            j=0;\n            str2 = gcd;\n        };\n\n        if(i==n1 && j<n2) {\n            i=0;\n            str1 = gcd;\n        };\n\n\n        while(i<n1 & j<n2) {\n            if(str1[i]== str2[j]) {\n                ans+=str1[i];\n                i++;\n                j++;\n            } else {\n                break;\n            };\n        };\n\n        return ans;\n    }\n};","compare_result":"1111000111111110111000000001000000001000000001000000001000000001000001000100011000100011000100011000100011000100011001010111","title_slug":"greatest-common-divisor-of-strings","has_notes":false,"flag_type":1}