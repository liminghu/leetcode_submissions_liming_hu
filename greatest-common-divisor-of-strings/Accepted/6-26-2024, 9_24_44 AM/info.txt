{"id":1301074200,"question_id":1146,"lang":"cpp","lang_name":"C++","time":"7 months, 2 weeks","timestamp":1719419084,"status":10,"status_display":"Accepted","runtime":"3 ms","url":"/submissions/detail/1301074200/","is_pending":"Not Pending","title":"Greatest Common Divisor of Strings","memory":"9 MB","code":"class Solution {\npublic:\n/*\nFor two strings s and t, we say \"t divides s\" if and only if s = t + t + t + ... + t + t \n(i.e., t is concatenated with itself one or more times).\nGiven two strings str1 and str2, return the largest string x such that x divides both str1 and str2.\n*/\n    string gcdOfStrings(string str1, string str2) { //1 <= str1.length, str2.length <= 1000\n        int sz1 = str1.length();\n        int sz2 = str2.length(); //shorter\n\n        if( sz2 > sz1 )  \n            return gcdOfStrings(str2, str1);\n        \n        for( int i = sz2; i > 0; i-- ) {\n            int prefixLen = i;\n            if(sz2 % prefixLen != 0)\n                continue;\n            string prefix = str2.substr(0, i);\n            if( dividesString(str1, prefix) && dividesString(str2, prefix) )\n                return prefix;\n        }\n\n        return \"\";\n    }\n\n    bool dividesString(string str, string prefix) { //non empty, sz1 >= sz2.\n        int sz1 = str.length();\n        int sz2 = prefix.length();\n        if( sz1 % sz2 != 0 )\n            return false; \n        for(int i=0; i<sz1; i++) {\n            if( str[i] != prefix[ i % sz2 ] )\n                return false;\n        }\n        return true;\n    }\n};","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"greatest-common-divisor-of-strings","has_notes":false,"flag_type":1}