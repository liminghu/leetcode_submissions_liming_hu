{"id":1398031734,"question_id":2428,"lang":"cpp","lang_name":"C++","time":"4 months, 2 weeks","timestamp":1726974339,"status":10,"status_display":"Accepted","runtime":"85 ms","url":"/submissions/detail/1398031734/","is_pending":"Not Pending","title":"Equal Row and Column Pairs","memory":"46.7 MB","code":"/*\nGiven a 0-indexed n x n integer matrix grid, return the number of pairs (ri, cj) such that row ri and column cj are equal.\nA row and column pair is considered equal if they contain the same elements in the same order (i.e., an equal array).\nn == grid.length == grid[i].length\n1 <= n <= 200\n1 <= grid[i][j] <= 105\n*/\nclass Solution {\npublic:\n    int equalPairs(vector<vector<int>>& grid) {\n        unordered_map<string, int> mp;\n        int m = grid.size();\n        int n = grid[0].size();\n        for(int i=0; i<m; i++) {\n            //rows. grid[i][...]\n            string s_key = \"\";\n            for(int j=0; j<n; j++) {\n                int val = grid[i][j];\n                while(val > 0) {\n                    s_key.push_back( val%10 +'0');\n                    val = val/10;\n                }\n                s_key.push_back(j+'0');\n            }\n            mp[s_key]++;\n        }\n        int ret = 0;\n        for(int j=0; j<n; j++) {\n            //rows. grid[i][...]\n            string s_key = \"\";\n            for(int i=0; i<m; i++) {\n                int val = grid[i][j];\n                while(val > 0) {\n                    s_key.push_back( val%10 +'0');\n                    val = val/10;\n                }\n                s_key.push_back(i+'0');\n            }\n            if(mp.find(s_key)!=mp.end()) {\n                ret = ret + mp[s_key];\n            }\n        }\n        return ret;\n    }\n};","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"equal-row-and-column-pairs","has_notes":false,"flag_type":1}