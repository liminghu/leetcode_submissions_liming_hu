{"id":1361796672,"question_id":1604,"lang":"cpp","lang_name":"C++","time":"5 months, 3 weeks","timestamp":1724101144,"status":10,"status_display":"Accepted","runtime":"107 ms","url":"/submissions/detail/1361796672/","is_pending":"Not Pending","title":"Least Number of Unique Integers after K Removals","memory":"66.5 MB","code":"//Given an array of integers arr and an integer k. Find the least number of unique integers after removing exactly k elements.\r\nclass Solution {\r\npublic:\r\n    int findLeastNumOfUniqueInts(vector<int>& arr, int k) {\r\n        /*  1 <= arr.length <= 10^5\r\n            1 <= arr[i] <= 10^9\r\n            0 <= k <= arr.length\r\n        */\r\n        int sz = arr.size();\r\n        unordered_map<int, int> count; //num, count\r\n        for(int i=0; i<sz; i++) {\r\n            count[arr[i]]++;\r\n        };\r\n        //auto cmp = [](pair<int,int> a, pair<int,int> b) {\r\n        //    return a.first < b.first;\r\n        //};\r\n        vector<int> frequencies;\r\n        for(auto iter:count) \r\n           frequencies.push_back(iter.second);\r\n        sort(frequencies.begin(), frequencies.end());\r\n\r\n        int elementsRemoved = 0;\r\n\r\n        for(int i=0; i<frequencies.size(); i++) {\r\n            elementsRemoved += frequencies[i];\r\n            if(elementsRemoved > k) {\r\n                return frequencies.size() - i;\r\n            }\r\n        }\r\n\r\n        return 0;\r\n    }\r\n};","compare_result":"1111111111111111111111111111111111111111111","title_slug":"least-number-of-unique-integers-after-k-removals","has_notes":false,"flag_type":1}