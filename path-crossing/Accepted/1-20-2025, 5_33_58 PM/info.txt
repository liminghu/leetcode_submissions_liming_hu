{"id":1515210149,"question_id":1619,"lang":"cpp","lang_name":"C++","time":"2 weeks, 3 days","timestamp":1737423238,"status":10,"status_display":"Accepted","runtime":"0 ms","url":"/submissions/detail/1515210149/","is_pending":"Not Pending","title":"Path Crossing","memory":"10.8 MB","code":"class Solution {\npublic:\n    bool isPathCrossing(string path) {//path[i] = 'N', 'S', 'E' or 'W'\n        int x=0, y = 0;\n        unordered_set<string> s;\n        s.insert(to_string(x)+\"_\" + to_string(y));\n        for(char c: path) {\n            switch(c) {\n                case 'N':\n                    y++;\n                    break;\n                case 'E':\n                    x++;\n                    break;\n                case 'S':\n                    y--;\n                    break;\n                case 'W':\n                    x--;\n                    break;\n                default:\n                    break;\n            }\n            if(s.find(to_string(x)+\"_\" + to_string(y))!=s.end())\n                return true;\n            s.insert(to_string(x)+\"_\" + to_string(y));\n        }\n        return false;\n        \n    }\n};","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"path-crossing","has_notes":false,"flag_type":1}