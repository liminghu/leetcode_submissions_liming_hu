{"id":1354736816,"question_id":982,"lang":"cpp","lang_name":"C++","time":"5 months, 3 weeks","timestamp":1723580976,"status":12,"status_display":"Memory Limit Exceeded","runtime":"N/A","url":"/submissions/detail/1354736816/","is_pending":"Not Pending","title":"Minimum Increment to Make Array Unique","memory":"N/A","code":"/*You are given an integer array nums. In one move, you can pick an index i \nwhere 0 <= i < nums.length and increment nums[i] by 1.\nReturn the minimum number of moves to make every value in nums unique.\nThe test cases are generated so that the answer fits in a 32-bit integer.\n*/\nclass Solution {\npublic:\n    int minIncrementForUnique(vector<int>& nums) {\n        /*  1 <= nums.length <= 105\n            0 <= nums[i] <= 105\n        */\n        map<int, vector<int>> mp; //num, vector of index.\n\n        for(int i=0; i<nums.size(); i++) {\n            mp[nums[i]].push_back(i);\n        };\n\n        map<int, vector<int>>::iterator it = mp.begin();\n        int res = 0;\n        while (it != mp.end()) {\n            vector<int> idxes = it->second;\n            res += idxes.size()-1;\n            for (int j=1; j<idxes.size(); j++)\n                mp[it->first+1].push_back(idxes[j]);\n            ++it;\n        };\n\n        return res;\n        \n    }\n};","compare_result":"111111111111111111111111111111111111111111111111111111100000000","title_slug":"minimum-increment-to-make-array-unique","has_notes":false,"flag_type":1}