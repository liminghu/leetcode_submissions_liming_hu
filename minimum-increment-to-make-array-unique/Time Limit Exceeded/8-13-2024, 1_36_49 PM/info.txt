{"id":1354741695,"question_id":982,"lang":"cpp","lang_name":"C++","time":"5 months, 3 weeks","timestamp":1723581409,"status":14,"status_display":"Time Limit Exceeded","runtime":"N/A","url":"/submissions/detail/1354741695/","is_pending":"Not Pending","title":"Minimum Increment to Make Array Unique","memory":"N/A","code":"/*You are given an integer array nums. In one move, you can pick an index i \nwhere 0 <= i < nums.length and increment nums[i] by 1.\nReturn the minimum number of moves to make every value in nums unique.\nThe test cases are generated so that the answer fits in a 32-bit integer.\n*/\nclass Solution {\npublic:\n    int minIncrementForUnique(vector<int>& nums) {\n        /*  1 <= nums.length <= 105\n            0 <= nums[i] <= 105\n        */\n        map<int, int> mp; //num, count.\n\n        for(int i=0; i<nums.size(); i++) {\n            mp[nums[i]]++;\n        };\n\n        map<int, int>::iterator it = mp.begin();\n        long res = 0;\n        while (it != mp.end()) {\n            res += it->second - 1;\n            mp[it->first + 1 ] += it->second-2;\n            ++it;\n        };\n\n        return res;\n        \n    }\n};","compare_result":"000000000000000000000000000000000000000000000000000000000000000","title_slug":"minimum-increment-to-make-array-unique","has_notes":false,"flag_type":1}