{"id":1369517227,"question_id":1549,"lang":"cpp","lang_name":"C++","time":"5 months, 2 weeks","timestamp":1724719261,"status":10,"status_display":"Accepted","runtime":"242 ms","url":"/submissions/detail/1369517227/","is_pending":"Not Pending","title":"Longest Continuous Subarray With Absolute Diff Less Than or Equal to Limit","memory":"116.8 MB","code":"/*\nGiven an array of integers nums and an integer limit, return the size of the longest non-empty subarray such that \nthe absolute difference between any two elements of this subarray is less than or equal to limit.\n*/\nclass Solution {\npublic:\n    int longestSubarray(vector<int>& nums, int limit) {\n        multiset<int> set({nums[0]}); //sorted nondecreasing.\n        int ret = 0;\n        \n        int j = 0;\n        for(int i=0; i<nums.size(); i++) {\n            while(*set.rbegin()-*set.begin() <=limit) {\n                ret = max(ret, j-i+1);\n                j++;\n                if(j<nums.size())\n                    set.insert(nums[j]);\n                else\n                    break;\n            }\n            if(j==nums.size())\n                break;\n            set.erase(set.find(nums[i]));\n        }\n        return ret;\n    }\n};","compare_result":"111111111111111111111111111111111111111111111111111111111111111","title_slug":"longest-continuous-subarray-with-absolute-diff-less-than-or-equal-to-limit","has_notes":false,"flag_type":1}