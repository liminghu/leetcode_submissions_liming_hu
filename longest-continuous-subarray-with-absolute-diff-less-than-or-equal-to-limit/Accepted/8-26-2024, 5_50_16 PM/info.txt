{"id":1369521457,"question_id":1549,"lang":"cpp","lang_name":"C++","time":"5 months, 2 weeks","timestamp":1724719816,"status":10,"status_display":"Accepted","runtime":"90 ms","url":"/submissions/detail/1369521457/","is_pending":"Not Pending","title":"Longest Continuous Subarray With Absolute Diff Less Than or Equal to Limit","memory":"72.6 MB","code":"/*\nGiven an array of integers nums and an integer limit, return the size of the longest non-empty subarray such that \nthe absolute difference between any two elements of this subarray is less than or equal to limit.\n*/\nclass Solution {\npublic:\n    int longestSubarray(vector<int>& nums, int limit) {\n         deque<int> qmax({0});\n         deque<int> qmin({0});         \n        int ret = 0;        \n        int j = 0;\n        int mx = nums[0];\n        int mn = nums[0];\n\n        for(int i=0; i<nums.size(); i++) {\n            while(mx-mn <=limit) {\n                ret = max(ret, j-i+1);\n                j++;\n                if(j==nums.size())\n                    break;\n\n                while(qmax.size()>0 && nums[j] >=nums[qmax.back()])\n                    qmax.pop_back();\n                qmax.push_back(j);\n                mx = nums[qmax.front()];\n\n                while(qmin.size()>0 && nums[j] <=nums[qmin.back()])\n                    qmin.pop_back();\n                qmin.push_back(j);\n                mn = nums[qmin.front()];                \n            }\n            if(j==nums.size())\n                break;\n            //set.erase(set.find(nums[i]));\n            if(qmax.size()>0 && qmax.front() == i) {\n                qmax.pop_front();\n                if(qmax.size()>0)\n                    mx = nums[qmax.front()];\n            }\n            if(qmin.size()>0 && qmin.front() == i) {\n                qmin.pop_front();\n                if(qmin.size()>0)\n                    mn = nums[qmin.front()];\n            }\n        }\n        return ret;\n \n /*       multiset<int> set({nums[0]}); //sorted nondecreasing.\n        int ret = 0;\n        \n        int j = 0;\n        for(int i=0; i<nums.size(); i++) {\n            while(*set.rbegin()-*set.begin() <=limit) {\n                ret = max(ret, j-i+1);\n                j++;\n                if(j<nums.size())\n                    set.insert(nums[j]);\n                else\n                    break;\n            }\n            if(j==nums.size())\n                break;\n            set.erase(set.find(nums[i]));\n        }\n        return ret;*/\n    }\n};","compare_result":"111111111111111111111111111111111111111111111111111111111111111","title_slug":"longest-continuous-subarray-with-absolute-diff-less-than-or-equal-to-limit","has_notes":false,"flag_type":1}