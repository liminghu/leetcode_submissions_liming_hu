{"id":1297051981,"question_id":78,"lang":"cpp","lang_name":"C++","time":"7 months, 2 weeks","timestamp":1719085675,"status":10,"status_display":"Accepted","runtime":"0 ms","url":"/submissions/detail/1297051981/","is_pending":"Not Pending","title":"Subsets","memory":"8.4 MB","code":"class Solution {\npublic:\n    vector<vector<int>> subsets(vector<int>& nums) { //distinct.\n        vector<vector<int>> ans;\n        vector<int> path = {};\n        backtrack(nums, 0, path, ans); //first element: 0\n        return ans;\n    }\n\n      void backtrack(vector<int>& nums, int startNum, vector<int>& path, vector<vector<int>>& ans) {\n        ans.push_back(path);\n        if(startNum >=nums.size()) {\n            return;\n        } \n\n       for(int num=startNum; num<nums.size(); num++) {\n            path.push_back(nums[num]);\n            backtrack(nums, num+1, path, ans);\n            path.pop_back();\n       }\n       return;\n\n    }\n\n};","compare_result":"1111111111","title_slug":"subsets","has_notes":false,"flag_type":1}