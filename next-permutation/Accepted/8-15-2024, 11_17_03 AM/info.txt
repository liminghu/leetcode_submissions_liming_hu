{"id":1356920194,"question_id":31,"lang":"cpp","lang_name":"C++","time":"5 months, 3 weeks","timestamp":1723745823,"status":10,"status_display":"Accepted","runtime":"9 ms","url":"/submissions/detail/1356920194/","is_pending":"Not Pending","title":"Next Permutation","memory":"14.9 MB","code":"/*A permutation of an array of integers is an arrangement of its members into a sequence or linear order.\n\nFor example, for arr = [1,2,3], the following are all the permutations of arr: [1,2,3], [1,3,2], [2, 1, 3], [2, 3, 1], [3,1,2], [3,2,1].\nThe next permutation of an array of integers is the next lexicographically greater permutation of its integer. More formally, \nif all the permutations of the array are sorted in one container according to their lexicographical order, then the next permutation of \nthat array is the permutation that follows it in the sorted container. If such arrangement is not possible, the array must be \nrearranged as the lowest possible order (i.e., sorted in ascending order).\n\nFor example, the next permutation of arr = [1,2,3] is [1,3,2].\nSimilarly, the next permutation of arr = [2,3,1] is [3,1,2].\nWhile the next permutation of arr = [3,2,1] is [1,2,3] because [3,2,1] does not have a lexicographical larger rearrangement.\nGiven an array of integers nums, find the next permutation of nums.\n\nThe replacement must be in place and use only constant extra memory.\n*/\nclass Solution {\npublic:\n    void nextPermutation(vector<int>& nums) {\n        /*  1 <= nums.length <= 100\n            0 <= nums[i] <= 100\n        */\n        int sz = nums.size();\n        if( sz <= 1 )\n            return;\n        \n        int i=sz-1;\n        while(i-1>=0 && nums[i-1]>=nums[i]) \n            i--;\n        if(i==0) {\n            sort(nums.begin(), nums.end());\n            return;\n        }\n\n        i--;\n        int j=sz-1;\n        while(nums[j]<=nums[i]) \n            j--;\n        swap(nums[i], nums[j]);\n\n        sort(nums.begin()+i+1, nums.end());\n        return;      \n    }\n};","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"next-permutation","has_notes":false,"flag_type":1}