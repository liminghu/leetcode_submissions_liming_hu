{"id":1530377937,"question_id":1927,"lang":"cpp","lang_name":"C++","time":"3 days, 16 hours","timestamp":1738628145,"status":10,"status_display":"Accepted","runtime":"0 ms","url":"/submissions/detail/1530377937/","is_pending":"Not Pending","title":"Maximum Ascending Subarray Sum","memory":"11 MB","code":"class Solution {\npublic:\n    int maxAscendingSum(vector<int>& nums) {//1 <= nums.length <= 100, 1 <= nums[i] <= 100\n        int maxSum = 0;\n        int n = nums.size();\n        int i=0;\n        while(i<n) {\n            int sum = nums[i];\n            int j=i+1;\n            for(; j<n; j++) {\n                if(nums[j]>nums[j-1]) \n                    sum += nums[j];\n                else \n                    break;\n            }\n            //cout << \"J:\" << j << endl;\n            //cout << \"sum:\" << sum << endl;\n            maxSum = max(maxSum, sum);\n            i = j;\n        }\n        return maxSum;\n        \n    }\n};","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"maximum-ascending-subarray-sum","has_notes":false,"flag_type":1}