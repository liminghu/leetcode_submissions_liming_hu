{"id":1410776781,"question_id":60,"lang":"cpp","lang_name":"C++","time":"4Â months","timestamp":1727978973,"status":10,"status_display":"Accepted","runtime":"3 ms","url":"/submissions/detail/1410776781/","is_pending":"Not Pending","title":"Permutation Sequence","memory":"7.5 MB","code":"/*\nThe set [1, 2, 3, ..., n] contains a total of n! unique permutations.\nBy listing and labeling all of the permutations in order, we get the following sequence for n = 3:\n\"123\"\n\"132\"\n\"213\"\n\"231\"\n\"312\"\n\"321\"\nGiven n and k, return the kth permutation sequence.\nConstraints:\n1 <= n <= 9\n1 <= k <= n!\n*/\nclass Solution {\npublic:\n    string getPermutation(int n, int k) {\n        vector<int> digits(n,0);\n        for(int i=1; i<=n; i++)\n            digits[i-1] = i;\n        \n        vector<int> fact(n+1,1); //fact[0] will not be used.\n        for(int i=2; i<=n; i++)\n            fact[i] = i * fact[i-1];\n                \n        string ret = \"\";\n        k--; //0 indexed.\n        while( n>0 ) {\n            int a = k / fact[n-1];   //maximum n-1.  k: 0 indexed. \n            ret.push_back('0'+ digits[a]);\n            k -=  a * fact[n-1];\n            n--;\n            digits.erase(digits.begin()+a); // a was used.\n        }\n        return ret;\n    }\n};","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"permutation-sequence","has_notes":false,"flag_type":1}