{"id":1456516461,"question_id":765,"lang":"cpp","lang_name":"C++","time":"2 months, 2 weeks","timestamp":1731955733,"status":10,"status_display":"Accepted","runtime":"41 ms","url":"/submissions/detail/1456516461/","is_pending":"Not Pending","title":"Serialize and Deserialize N-ary Tree","memory":"179 MB","code":"/*\n// Definition for a Node.\nclass Node {\npublic:\n    int val;\n    vector<Node*> children;\n\n    Node() {}\n\n    Node(int _val) {\n        val = _val;\n    }\n\n    Node(int _val, vector<Node*> _children) {\n        val = _val;\n        children = _children;\n    }\n};\n*/\n\nclass Codec {\npublic:\n    // Encodes a tree to a single string.\n    string serialize(Node* root) {\n        string s;\n        serial_helper(root, s);\n        return s;\n    }\n    void serial_helper(Node* root, string& s) {\n        if(!root)\n            return;\n        s += \" \" + to_string(root->val) +  \" \" + to_string(root->children.size());\n        for(auto p: root->children) \n            serial_helper(p, s);\n    };\n\t\n    // Decodes your encoded data to tree.\n    Node* deserialize(string data) {\n        if(data.size() == 0)\n            return NULL;\n        queue<string> q;\n        string s;\n        for(int i=1; i<data.size(); i++) {\n            if(data[i] == ' ') {\n                q.push(s);\n                s = \"\";\n                continue;\n            }\n            s += data[i];\n        }\n        if(s.size() != 0 )\n            q.push(s);\n        return deserial_helper(q);\n    }\n    Node* deserial_helper(queue<string>&q) {\n        Node* root = new Node( stoi( q.front() ) );\n        q.pop();\n        int size = stoi(q.front());\n        q.pop();\n        for(int i=0; i<size; i++) {\n            root-> children.push_back(deserial_helper(q));\n        }\n        return root;\n    }\n};\n\n// Your Codec object will be instantiated and called as such:\n// Codec codec;\n// codec.deserialize(codec.serialize(root));","compare_result":"11111111111111111111111111111111111111","title_slug":"serialize-and-deserialize-n-ary-tree","has_notes":false,"flag_type":1}