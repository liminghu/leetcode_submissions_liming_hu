{"id":1484931943,"question_id":3058,"lang":"cpp","lang_name":"C++","time":"1 month, 2 weeks","timestamp":1734819280,"status":10,"status_display":"Accepted","runtime":"172 ms","url":"/submissions/detail/1484931943/","is_pending":"Not Pending","title":"Maximum Number of K-Divisible Components","memory":"185.6 MB","code":"class Solution {\npublic:\n    int maxKDivisibleComponents(int n, vector<vector<int>>& edges, vector<int>& values, int k) {\n        //edges[i] = [ai, bi]\n        vector<vector<int>> adjList(n);\n        for(auto edge: edges) {\n            int n1 = edge[0];\n            int n2 = edge[1];\n            adjList[n1].push_back(n2);\n            adjList[n2].push_back(n1);\n        };\n        int count = 0;\n        dfs(0, -1, adjList, values, k, count);\n        return count;\n    }\n    int dfs(int curNode, int parent, vector<vector<int>>& adjList, vector<int>& values, int k, int& count) {\n        int sum = 0; //sum of the subtree.\n        for(auto neighbor: adjList[curNode]) {\n            if(neighbor==parent)\n                continue;\n            sum += dfs(neighbor, curNode, adjList, values, k, count);\n            sum %= k;\n        }\n        sum += values[curNode];\n        sum%=k;\n        if(sum==0) //if the sum of a subtree is 0.\n            count++;\n        return sum;\n    }\n};","compare_resulttitle_slug":"maximum-number-of-k-divisible-components","has_notes":false,"flag_type":1}