{"id":1447011442,"question_id":361,"lang":"cpp","lang_name":"C++","time":"3Â months","timestamp":1731092788,"status":10,"status_display":"Accepted","runtime":"2 ms","url":"/submissions/detail/1447011442/","is_pending":"Not Pending","title":"Bomb Enemy","memory":"24.4 MB","code":"class Solution {\npublic:\n    int maxKilledEnemies(vector<vector<char>>& grid) {\n        int m = grid.size(); //rows\n        int n = grid[0].size(); //cols.\n        if(m==0 || n == 0)\n            return 0;\n        int res = 0;\n        int rowCount = 0; //the current row count of enemies can be killed.\n        vector<int> colCount(n, 0); \n        for(int i=0; i<m; i++) {\n            for(int j=0; j<n; j++) {\n                if(j==0 || grid[i][j-1] == 'W') { // a new row, or previous cell is a wall\n                    rowCount = 0;\n                    for(int k=j; k<n; k++) { //scan the whole current row until wall.\n                        if(grid[i][k] == 'W')\n                            break;\n                        if(grid[i][k] == 'E')\n                            rowCount++;\n                    }\n                }\n\n                //scan the current column.\n                if(i==0 || grid[i-1][j] == 'W') { // a new col, or the previous column cell is a wall.\n                    colCount[j] = 0;\n                    for(int k=i; k<m; k++) {\n                        if(grid[k][j] == 'W')\n                            break;\n                        if(grid[k][j] == 'E')\n                            colCount[j]++;\n                    }\n                }\n\n                if(grid[i][j] == '0') {\n                    res = max(res, rowCount + colCount[j]);\n                }\n            }\n        }\n        return res;\n    }\n};","compare_result":"1111111111111111111111111111111111111111","title_slug":"bomb-enemy","has_notes":false,"flag_type":1}