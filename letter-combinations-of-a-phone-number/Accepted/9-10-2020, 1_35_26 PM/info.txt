{"id":393892809,"question_id":17,"lang":"cpp","lang_name":"C++","time":"4 years, 4 months","timestamp":1599770126,"status":10,"status_display":"Accepted","runtime":"0 ms","url":"/submissions/detail/393892809/","is_pending":"Not Pending","title":"Letter Combinations of a Phone Number","memory":"6.8 MB","code":"class Solution {\npublic:\n    vector<string> letterCombinations(string digits) {\n    //DFS or BFS\n\t\tif(digits.empty()) return {};\n\t\t\n\t\tvector<vector<char>> d(10); //10 digit.\n\t\td[0] = {' '};\n\t\td[1] = {};\n\t\td[2] = {'a', 'b', 'c'};\n\t\td[3] = {'d', 'e', 'f'};\n\t\td[4] = {'g', 'h', 'i'};\n\t\td[5] = {'j', 'k', 'l'};\n\t\td[6] = {'m', 'n', 'o'};\n\t\td[7] = {'p', 'q', 'r', 's'};\n\t\td[8] = {'t', 'u', 'v'};\n\t\td[9] = {'w', 'x', 'y', 'z'};\n\t\tvector<string> ans{\"\"};\n\t\tfor (char digit : digits) {\n\t\t\tvector<string> tmp;\n\t\t\tfor(const string& s: ans) {\n\t\t\t\tfor(char c : d[digit - '0']) {\n\t\t\t\t\ttmp.push_back(s + c);\n\t\t\t\t}\n\t\t\t}\n\t\t\tans.swap(tmp); //vector<string>.\n\t\t};\n\t\treturn ans;\n    \n    }\n};","compare_result":"1111111111111111111111111","title_slug":"letter-combinations-of-a-phone-number","has_notes":false,"flag_type":1}