{"id":1297218847,"question_id":17,"lang":"cpp","lang_name":"C++","time":"7 months, 2 weeks","timestamp":1719109628,"status":10,"status_display":"Accepted","runtime":"0 ms","url":"/submissions/detail/1297218847/","is_pending":"Not Pending","title":"Letter Combinations of a Phone Number","memory":"8.5 MB","code":"class Solution {\npublic:\n    int pathNum = 0;\n        vector<string> ans={};\n        string path = \"\";\n        vector<string> digit_map = {\"\", \"\", \"abc\", \"def\", \"ghi\", \"jkl\", \"mno\", \"pqrs\", \"tuv\", \"wxyz\"};\n    vector<string> letterCombinations(string digits) { //0 <= digits.length <= 4\n\n        int sz = digits.length();\n\n        if(sz==0)\n            return ans;\n        \n        pathNum =0;\n        backtrack(digits, pathNum);\n        return ans;\n\n    }\n\n    void backtrack(string digits, int pathNum) {\n        if(pathNum == digits.length()) {\n            ans.push_back(path);\n            return;\n        }\n\n        string letters = digit_map[digits[pathNum]-'0'];\n        for(int i=0; i<letters.length(); i++) {\n            path.push_back(letters[i]);\n            backtrack(digits, pathNum+1);\n            path.pop_back();\n        }\n    };\n};","compare_result":"1111111111111111111111111","title_slug":"letter-combinations-of-a-phone-number","has_notes":false,"flag_type":1}