{"id":1371368631,"question_id":139,"lang":"cpp","lang_name":"C++","time":"5 months, 1 week","timestamp":1724864746,"status":10,"status_display":"Accepted","runtime":"16 ms","url":"/submissions/detail/1371368631/","is_pending":"Not Pending","title":"Word Break","memory":"17.9 MB","code":"class Solution {\npublic:\n    bool wordBreak(string s, vector<string>& wordDict) {\n        unordered_map<string, bool> dict;\n        for(int i=0; i<wordDict.size(); i++) {\n            dict[wordDict[i]] = true;\n        };\n\n        int sz = s.length();\n        vector<int> dp_wb_str_i(sz+1, 0); //until index i, the word can be break.\n        dp_wb_str_i[0] = 1; //init.\n        \n        for(int i=1; i<=sz; i++ ) {            //str until i, at least one char.\n            //break point: suppose after the break point, it is one word. \n            for(int b=0; b<i; b++) {\n                string sub = s.substr(b, i-b);\n                if( dict.find(sub) != dict.end() )  {//found\n                    dp_wb_str_i[i] = max(dp_wb_str_i[i], dp_wb_str_i[b]);  //bottom up. \n                }\n            }\n        }\n\n        return dp_wb_str_i[sz]==1; \n        \n    }\n};","compare_result":"11111111111111111111111111111111111111111111111","title_slug":"word-break","has_notes":false,"flag_type":1}