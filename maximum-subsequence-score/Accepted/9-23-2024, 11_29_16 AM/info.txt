{"id":1399924936,"question_id":2636,"lang":"cpp","lang_name":"C++","time":"4 months, 2 weeks","timestamp":1727116156,"status":10,"status_display":"Accepted","runtime":"180 ms","url":"/submissions/detail/1399924936/","is_pending":"Not Pending","title":"Maximum Subsequence Score","memory":"99.2 MB","code":"/*\nYou are given two 0-indexed integer arrays nums1 and nums2 of equal length n and a positive integer k. \nYou must choose a subsequence of indices from nums1 of length k.\n\nFor chosen indices i0, i1, ..., ik - 1, your score is defined as:\nThe sum of the selected elements from nums1 multiplied with the minimum of the selected elements from nums2.\nIt can defined simply as: (nums1[i0] + nums1[i1] +...+ nums1[ik - 1]) * min(nums2[i0] , nums2[i1], ... ,nums2[ik - 1]).\nReturn the maximum possible score.\nA subsequence of indices of an array is a set that can be derived from the set {0, 1, ..., n-1} by deleting some or no elements.\nn == nums1.length == nums2.length\n1 <= n <= 105\n0 <= nums1[i], nums2[j] <= 105\n1 <= k <= n\n*/\nusing LL = long long;\nclass Solution {\npublic:\n    long long maxScore(vector<int>& nums1, vector<int>& nums2, int k) {\n        int n = nums2.size();\n        vector<pair<int,int>> arr;\n        for(int i=0; i<n; i++) \n            arr.push_back({nums2[i], nums1[i]});\n        sort(arr.rbegin(), arr.rend()); // decreasing...\n        \n        int minVal = INT_MAX;\n        priority_queue<int, vector<int>, greater<>> pq;\n        LL sum = 0;  \n        LL ret = 0;\n        for(int i=0; i<n; i++) { //suppose the pq has size k.\n            minVal = arr[i].first;\n            sum += arr[i].second;\n            pq.push(arr[i].second); //for sum.\n            if(pq.size() > k) {\n                sum -= pq.top(); //if pq.top() index is i?\n                pq.pop();\n            }\n            if(pq.size() == k)\n                ret = max(ret, sum*minVal); //if that's the case, the ret will not be updated.\n        }\n        return ret;\n    }\n};","compare_result":"1111111111111111111111111111","title_slug":"maximum-subsequence-score","has_notes":false,"flag_type":1}