{"id":1299043144,"question_id":40,"lang":"cpp","lang_name":"C++","time":"7 months, 2 weeks","timestamp":1719251745,"status":10,"status_display":"Accepted","runtime":"0 ms","url":"/submissions/detail/1299043144/","is_pending":"Not Pending","title":"Combination Sum II","memory":"12.8 MB","code":"class Solution {\npublic:\n/*\nGiven a collection of candidate numbers (candidates) and a target number (target), \nfind all unique combinations in candidates where the candidate numbers sum to target.\nEach number in candidates may only be used once in the combination.\nNote: The solution set must not contain duplicate combinations.\n*/\n    vector<vector<int>> ans = {};\n    vector<int> path ={};\n    int pathSum = 0;\n    vector<vector<int>> combinationSum2(vector<int>& candidates, int target) { //1 <= candidates.length <= 100; 1 <= candidates[i] <= 50; 1 <= target <= 30\n\n        int start = 0;\n        sort(candidates.begin(), candidates.end());\n        backtrack(candidates, target, start);\n        return ans;        \n    }\n\n    void backtrack(vector<int>&  candidates, int target, int start) {\n        \n        if(pathSum == target) {\n            ans.push_back(path);\n        }\n        if(start>=candidates.size() || pathSum >= target) {\n            return;\n        };\n\n        for(int i=start; i<candidates.size() && pathSum+candidates[i] <= target; i++) {\n            //same level, if we used the element before, just skip.\n            if(i>start && candidates[i] == candidates[i-1]) {\n                continue;\n            }\n            pathSum += candidates[i];\n            path.push_back(candidates[i]);\n            backtrack(candidates, target, i+1);\n            pathSum -= path.back();\n            path.pop_back();            \n        }\n        \n\n    };\n};","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"combination-sum-ii","has_notes":false,"flag_type":1}