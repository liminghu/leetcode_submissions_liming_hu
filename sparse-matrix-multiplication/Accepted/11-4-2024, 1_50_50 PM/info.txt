{"id":1443191037,"question_id":311,"lang":"cpp","lang_name":"C++","time":"3Â months","timestamp":1730757050,"status":10,"status_display":"Accepted","runtime":"0 ms","url":"/submissions/detail/1443191037/","is_pending":"Not Pending","title":"Sparse Matrix Multiplication","memory":"11 MB","code":"class Solution {\nunordered_map<int, vector< pair<int,int> > > m1;\nunordered_map<int, vector< pair<int,int> > > m2;\n\npublic:\n    vector<vector<int>> multiply(vector<vector<int>>& mat1, vector<vector<int>>& mat2) {\n        for(int i=0; i<mat1.size(); i++) {\n            for(int j=0; j<mat1[0].size(); j++) {\n                if(mat1[i][j] != 0) {\n                    m1[i].push_back({j, mat1[i][j]});\n                };\n            }\n        }\n        for(int i=0; i<mat2.size(); i++) {\n            for(int j=0; j<mat2[0].size(); j++) {\n                if(mat2[i][j] != 0) {\n                    m2[i].push_back({j, mat2[i][j]});\n                };\n            }\n        }\n        vector<vector<int>> ret(mat1.size(), vector<int>( mat2[0].size() ) );\n        for(auto [key, val]: m1) { //unordered_map<int, vector<pair<int,int>>\n            int row1 = key;\n            for(auto p:val) {\n                int col1 = p.first;\n                int ele1 = p.second;\n                for(auto second: m2[col1]) {\n                    int row2 = col1;\n                    int col2 = second.first;\n                    int ele2 = second.second;\n                    ret[row1][col2] += ele1 * ele2;\n                }\n            }\n        }\n        return ret;\n    }\n/*    vector<vector<int>> multiply(vector<vector<int>>& mat1, vector<vector<int>>& mat2) {\n        if(mat1.empty() || mat2.empty()) \n            return vector<vector<int>>();\n        vector<vector<int>> ret(mat1.size(), vector<int>( mat2[0].size() ) );\n        for(int i=0; i<mat1.size(); i++) {\n            for(int k=0; k<mat2.size(); k++) {\n                if(mat1[i][k] == 0)\n                    continue;\n                for(int l=0; l<mat2[0].size(); l++) {\n                    if(mat2[k][l] == 0)\n                        continue;\n                    ret[i][l] += mat1[i][k]*mat2[k][l]; \n                }\n            }\n        }\n        return ret;\n    }*/\n};","compare_result":"1111111111111","title_slug":"sparse-matrix-multiplication","has_notes":false,"flag_type":1}