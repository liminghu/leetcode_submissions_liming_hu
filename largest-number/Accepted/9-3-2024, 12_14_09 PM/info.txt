{"id":1378091357,"question_id":179,"lang":"cpp","lang_name":"C++","time":"5Â months","timestamp":1725390849,"status":10,"status_display":"Accepted","runtime":"7 ms","url":"/submissions/detail/1378091357/","is_pending":"Not Pending","title":"Largest Number","memory":"16.2 MB","code":"/*\nGiven a list of non-negative integers nums, arrange them such that they form the largest number and return it.\nSince the result may be very large, so you need to return a string instead of an integer.\n*/\nclass Solution {\npublic:\n    string largestNumber(vector<int>& nums) {\n        /*  1 <= nums.length <= 100\n            0 <= nums[i] <= 109\n        */\n\n        int n = nums.size();\n        vector<string> numStr;\n        for(int i=0; i<n; i++) {\n            numStr.push_back(toString(nums[i]));\n        };\n \n        sort(numStr.begin(), numStr.end(), [](string&a, string&b){return a+b > b+a;}); //decreasing.\n        string ans = \"\";\n        if(numStr[0] == \"0\")\n            return \"0\";\n        for(int i=0; i<n; i++) {\n            ans+= numStr[i];\n        };\n        return ans;\n\n    }\n\n    string toString(int num) {\n        string ans = \"\";\n        if(num == 0)\n            return \"0\";\n        while(num>0) {\n            int h = num/10;\n            int l = num%10;\n            ans += '0'+l;\n            num = h;\n        };\n        reverse(ans.begin(), ans.end());\n        return ans;\n    }\n};","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"largest-number","has_notes":false,"flag_type":1}