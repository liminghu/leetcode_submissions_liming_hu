{"id":1343620769,"question_id":1616,"lang":"cpp","lang_name":"C++","time":"6 months, 1 week","timestamp":1722729891,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/1343620769/","is_pending":"Not Pending","title":"Minimum Difference Between Largest and Smallest Value in Three Moves","memory":"N/A","code":"/*\nYou are given an integer array nums.\nIn one move, you can choose one element of nums and change it to any value.\nReturn the minimum difference between the largest and smallest value of nums \nafter performing at most three moves.\n*/\nclass Solution {\npublic:\n    int minDifference(vector<int>& nums) {\n        int sz = nums.size();\n        if(sz <= 4)\n            return 0;\n        \n        sort(nums.begin(), nums.end());\n\n        return min(nums[sz-4]-nums[0], nums[sz-1]-nums[3]);\n        \n    }\n};","compare_result":"1111111110011100111111001000111111111111101110001111110010011","title_slug":"minimum-difference-between-largest-and-smallest-value-in-three-moves","has_notes":false,"flag_type":1}