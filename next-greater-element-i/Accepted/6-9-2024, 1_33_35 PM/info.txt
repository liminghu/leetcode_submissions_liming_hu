{"id":1283187114,"question_id":496,"lang":"cpp","lang_name":"C++","time":"8Â months","timestamp":1717965215,"status":10,"status_display":"Accepted","runtime":"8 ms","url":"/submissions/detail/1283187114/","is_pending":"Not Pending","title":"Next Greater Element I","memory":"12.2 MB","code":"class Solution {\npublic:\n    //All integers in nums1 and nums2 are unique.\n    //All the integers of nums1 also appear in nums2.\n    vector<int> nextGreaterElement(vector<int>& nums1, vector<int>& nums2) {//nums1 is a subset of nums2.\n    //For each 0 <= i < nums1.length, find the index j such that nums1[i] == nums2[j] and determine the next greater element of nums2[j] in nums2. If there is no next greater element, then the answer for this query is -1.\n    //Return an array ans of length nums1.length such that ans[i] is the next greater element as described above.\n        int n = nums1.size();\n        vector<int> ans(n, -1);\n        unordered_map<int, int> map1;\n      \n        int m = nums2.size();\n        \n        stack<int> stack;\n        for(int i=0; i<m; i++) {\n            while(!stack.empty() && nums2[i]>nums2[stack.top()]) {\n                map1[nums2[stack.top()]] = nums2[i];\n               stack.pop();\n            };\n            stack.push(i);\n        }\n\n        for(int i=0; i<n; i++) {\n            if(map1[nums1[i]]) {\n               ans[i] =  map1[nums1[i]];\n            }\n        }\n        return ans; \n    }\n};","compare_result":"1111111111111111","title_slug":"next-greater-element-i","has_notes":false,"flag_type":1}