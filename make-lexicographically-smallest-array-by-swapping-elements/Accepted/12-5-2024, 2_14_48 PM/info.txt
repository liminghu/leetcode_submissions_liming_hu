{"id":1471373772,"question_id":3219,"lang":"cpp","lang_name":"C++","time":"2Â months","timestamp":1733436888,"status":10,"status_display":"Accepted","runtime":"123 ms","url":"/submissions/detail/1471373772/","is_pending":"Not Pending","title":"Make Lexicographically Smallest Array by Swapping Elements","memory":"143.2 MB","code":"class Solution {\npublic:\n    vector<int> lexicographicallySmallestArray(vector<int>& nums, int limit) {\n        int n = nums.size();\n        vector<pair<int,int>> sorted;\n        for(int i=0; i<n; i++)\n            sorted.push_back({nums[i], i});\n        sort(sorted.begin(), sorted.end());\n        vector<int> rets(n, 0);\n        int start = 0;\n        for(int end=0; end<n; end++) {\n            if(end+1>=n || sorted[end+1].first-sorted[end].first>limit) {\n                vector<int> temp(end-start+1, 0);\n                for(int i=start; i<=end; i++)\n                    temp[i-start] = sorted[i].second;\n                sort(temp.begin(), temp.end());\n                int j=start;\n                for(int i=0; i<temp.size(); i++) {\n                    rets[temp[i]] = sorted[j].first;\n                    j++;\n                }\n                start = end+1;\n            }\n        }\n        return rets;\n    }\n};","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"make-lexicographically-smallest-array-by-swapping-elements","has_notes":false,"flag_type":1}