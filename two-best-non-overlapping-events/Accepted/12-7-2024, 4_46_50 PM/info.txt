{"id":1473047361,"question_id":2164,"lang":"cpp","lang_name":"C++","time":"2Â months","timestamp":1733618810,"status":10,"status_display":"Accepted","runtime":"56 ms","url":"/submissions/detail/1473047361/","is_pending":"Not Pending","title":"Two Best Non-Overlapping Events","memory":"125.9 MB","code":"class Solution {\npublic:\n    int maxTwoEvents(vector<vector<int>>& events) {\n        //events[i] = [startTimei, endTimei, valuei].\n        priority_queue<pair<int, int>, vector<pair<int, int>>, greater<pair<int,int>>> pq; //pair: end, val.\n        sort(events.begin(), events.end());\n        int maxVal = 0;\n        int maxSum = 0;\n        for(auto& event: events) {\n            while(!pq.empty() && pq.top().first <event[0] ) {\n                maxVal = max(maxVal, pq.top().second);\n                pq.pop();\n            }\n            maxSum = max(maxSum, maxVal + event[2]);\n            pq.push({event[1], event[2]});\n        }\n        return maxSum;\n    }\n};","compare_result":"111111111111111111111111111111111111111111111111111111111111111","title_slug":"two-best-non-overlapping-events","has_notes":false,"flag_type":1}