{"id":1308799978,"question_id":737,"lang":"cpp","lang_name":"C++","time":"7 months, 1 week","timestamp":1720051784,"status":10,"status_display":"Accepted","runtime":"157 ms","url":"/submissions/detail/1308799978/","is_pending":"Not Pending","title":"Sentence Similarity II","memory":"61.6 MB","code":"class UnionFindSet {\npublic:\n    bool Union(const string& word1, const string& word2) {\n        const string& p1 = Find(word1, true);\n        const string& p2 = Find(word2, true);\n        if (p1 == p2) return false;        \n        parents_[p1] = p2;\n        return true;\n    }\n    \n    const string& Find(const string& word, bool create = false) {\n        if (!parents_.count(word)) {\n            if (!create) return word;\n            return parents_[word] = word;\n        }\n        \n        string w = word;\n        while (w != parents_[w]) {\n            parents_[w] = parents_[parents_[w]];\n            w = parents_[w];\n        }\n        \n        return parents_[w];\n    }\nprivate:\n    unordered_map<string, string> parents_;\n};\n \nclass Solution {\npublic:\n    bool areSentencesSimilarTwo(vector<string>& words1, vector<string>& words2, vector<vector<string>>& similarPairs) {\n        if (words1.size() != words2.size()) return false;\n        \n        UnionFindSet s;\n        for (const auto& pair : similarPairs)\n            s.Union(pair[0], pair[1]);\n        \n        for (int i = 0; i < words1.size(); ++i) \n            if (s.Find(words1[i]) != s.Find(words2[i])) return false;\n        \n        return true;        \n    }\n};\n\n","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"sentence-similarity-ii","has_notes":false,"flag_type":1}