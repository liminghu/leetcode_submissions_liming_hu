{"id":1304257327,"question_id":435,"lang":"cpp","lang_name":"C++","time":"7 months, 1 week","timestamp":1719702864,"status":10,"status_display":"Accepted","runtime":"239 ms","url":"/submissions/detail/1304257327/","is_pending":"Not Pending","title":"Non-overlapping Intervals","memory":"93.2 MB","code":"/*\nGiven an array of intervals intervals where intervals[i] = [starti, endi], return the minimum number of intervals \nyou need to remove to make the rest of the intervals non-overlapping.\n*/\nclass Solution {\npublic:\n    int eraseOverlapIntervals(vector<vector<int>>& intervals) { //1 <= intervals.length <= 105\n                                                                //intervals[i].length == 2\n                                                                //-5 * 104 <= starti < endi <= 5 * 104\n        sort(intervals.begin(), intervals.end());\n        int sz = intervals.size();\n        //[starti, endi] let's suppose the interval does not include endi.\n  \n        int ans = 0;\n        for(int i=1; i<sz; i++) { //compare with i-1;\n           int  starti = intervals[i][0],   endi = intervals[i][1];\n           int  starti_ = intervals[i-1][0],   endi_ = intervals[i-1][1];\n           //[starti_, endi_]\n           //               [starti, endi]\n           if(endi_ <= starti)\n                continue;\n            else {\n           //[starti_,           endi_]\n           //               [starti,        endi]           \n\n           //[starti_,                             endi_]\n           //               [starti,        endi]  \n                intervals[i][1] =  min(endi_, endi); \n                ans++;                    \n\n            }\n\n        }   \n        return ans;  \n    }\n};","compare_result":"11111111111111111111111111111111111111111111111111111111111","title_slug":"non-overlapping-intervals","has_notes":false,"flag_type":1}