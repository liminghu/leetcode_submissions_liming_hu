{"id":1481582009,"question_id":1240,"lang":"cpp","lang_name":"C++","time":"1 month, 3 weeks","timestamp":1734486342,"status":10,"status_display":"Accepted","runtime":"4 ms","url":"/submissions/detail/1481582009/","is_pending":"Not Pending","title":"Stone Game II","memory":"11 MB","code":"class Solution {\n    int dp[101][101];\n    int suffix[101];\npublic:\n    int stoneGameII(vector<int>& piles) {\n        //Alice starting first.\n        //On each player's turn, that player can take all the stones in the first X remaining piles, where 1 <= X <= 2M. Then, we set M = max(M, X). Initially, M = 1.\n        int n = piles.size();\n        suffix[n] = 0;\n        for(int i=n-1; i>=0; i--) \n            suffix[i] = suffix[i+1]+piles[i];\n        return solve(0, 1, piles);\n    }\n    int solve(int i, int M, vector<int>& piles) {\n        int n =piles.size();\n        if(i==n)\n            return 0;\n        if( dp[i][M] != 0 )\n            return dp[i][M];\n        int sum = 0;\n        for(int x=1; x<=2*M; x++) {\n            if(i+x-1>=n)\n                break;\n            sum += piles[i+x-1];\n            dp[i][M] = max(dp[i][M], sum+suffix[i+x]-solve(i+x, max(x,M), piles));\n        }\n        return dp[i][M];\n    }\n};","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"stone-game-ii","has_notes":false,"flag_type":1}