{"id":1442164851,"question_id":302,"lang":"cpp","lang_name":"C++","time":"3Â months","timestamp":1730673466,"status":10,"status_display":"Accepted","runtime":"1 ms","url":"/submissions/detail/1442164851/","is_pending":"Not Pending","title":"Smallest Rectangle Enclosing Black Pixels","memory":"20.2 MB","code":"class Solution {\npublic:\n    int minArea(vector<vector<char>>& image, int x, int y) { //x: rows   y: columns\n        int top = x;\n        int bottom = x; \n        int left = y;\n        int right = y;\n        for(x =0; x<image.size(); x++) {\n            for(y =0; y<image[0].size(); y++) {\n                if(image[x][y] == '1') {\n                    top = min(top, x);\n                    bottom = max(bottom, x);\n                    left = min(left, y);\n                    right = max(right,y);\n                }\n            }\n        }\n        return (bottom-top+1)*(right-left+1);\n    }\n};","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"smallest-rectangle-enclosing-black-pixels","has_notes":false,"flag_type":1}