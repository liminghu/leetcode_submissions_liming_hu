{"id":1251117315,"question_id":339,"lang":"cpp","lang_name":"C++","time":"9Â months","timestamp":1715020188,"status":10,"status_display":"Accepted","runtime":"0 ms","url":"/submissions/detail/1251117315/","is_pending":"Not Pending","title":"Nested List Weight Sum","memory":"10.4 MB","code":"/**\n * // This is the interface that allows for creating nested lists.\n * // You should not implement it, or speculate about its implementation\n * class NestedInteger {\n *   public:\n *     // Constructor initializes an empty nested list.\n *     NestedInteger();\n *\n *     // Constructor initializes a single integer.\n *     NestedInteger(int value);\n *\n *     // Return true if this NestedInteger holds a single integer, rather than a nested list.\n *     bool isInteger() const;\n *\n *     // Return the single integer that this NestedInteger holds, if it holds a single integer\n *     // The result is undefined if this NestedInteger holds a nested list\n *     int getInteger() const;\n *\n *     // Set this NestedInteger to hold a single integer.\n *     void setInteger(int value);\n *\n *     // Set this NestedInteger to hold a nested list and adds a nested integer to it.\n *     void add(const NestedInteger &ni);\n *\n *     // Return the nested list that this NestedInteger holds, if it holds a nested list\n *     // The result is undefined if this NestedInteger holds a single integer\n *     const vector<NestedInteger> &getList() const;\n * };\n */\nclass Solution {\npublic:\n    int depthSum(vector<NestedInteger>& nestedList) {\n        int ans = 0;\n        ans = depthSumHelper(nestedList,  1);\n        return ans;\n    }\n\n    int depthSumHelper(vector<NestedInteger>& nestedList, int depth = 1) {\n        int ans = 0;\n        for(auto& nl: nestedList) {\n            if(nl.isInteger())\n                ans += nl.getInteger()*depth;\n            else {\n                ans += depthSumHelper(nl.getList(), depth+1);\n            }\n        }\n        return ans;\n    }\n};","compare_result":"1111111111111111111111111","title_slug":"nested-list-weight-sum","has_notes":false,"flag_type":1}