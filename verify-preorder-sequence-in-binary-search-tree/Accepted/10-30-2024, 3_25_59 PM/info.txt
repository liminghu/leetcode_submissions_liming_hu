{"id":1438597323,"question_id":255,"lang":"cpp","lang_name":"C++","time":"3 months, 1 week","timestamp":1730327159,"status":10,"status_display":"Accepted","runtime":"0 ms","url":"/submissions/detail/1438597323/","is_pending":"Not Pending","title":"Verify Preorder Sequence in Binary Search Tree","memory":"25.2 MB","code":"class Solution {\npublic:\n    bool verifyPreorder(vector<int>& preorder) {\n    \n       // return dfs(preorder, 0, preorder.size()-1);\n        int minLimit = INT_MIN;\n        stack<int> st;\n        for(int num: preorder) {\n            while(!st.empty() && st.top() < num) {\n                minLimit = st.top();\n                st.pop();\n            };\n            if(num<=minLimit)\n                return false;\n            st.push(num);\n        }\n        return true;\n    }\n    /*bool dfs(vector<int>& preorder, int start, int end) {\n        if(start==end)\n            return true;\n        if(start>end)\n            return true;\n        int root = preorder[start];\n        int i = start+1;\n        while(i<=end && preorder[i] < root)\n            i++;\n        //i: right\n        for(int j=i; j<=end; j++) {\n            if(preorder[j]<root)\n                return false;\n        }\n        return dfs(preorder, start+1,i-1) && dfs(preorder, i, end);\n    }*/\n \n};","compare_result":"1111111111111111111111111111111111111111111111111111111111111","title_slug":"verify-preorder-sequence-in-binary-search-tree","has_notes":false,"flag_type":1}