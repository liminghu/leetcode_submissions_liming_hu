{"id":1438582051,"question_id":255,"lang":"cpp","lang_name":"C++","time":"3 months, 1 week","timestamp":1730325269,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/1438582051/","is_pending":"Not Pending","title":"Verify Preorder Sequence in Binary Search Tree","memory":"N/A","code":"class Solution {\npublic:\n    bool verifyPreorder(vector<int>& preorder) {\n        int n = preorder.size();\n        if(n<=1)\n            return true;\n        return verifyPreorder(preorder, 0, n-1);\n    }\n    bool verifyPreorder(vector<int>& preorder, int start, int end) {\n        if(start>=preorder.size() || end>=preorder.size() || start > end) //invalid\n            return true;\n        if(start==end)\n            return true;\n        int root_val = preorder[start];\n        if(end == start+1 ) \n            return true;\n        int i = -1;\n        for(i=start+1; i<=end; i++) { //at least 2 elements.\n            if(preorder[i]>root_val)\n                break;\n        };\n        if(i>0) {\n            if( i <= end) \n                return verifyPreorder(preorder, start+1, i-1) && verifyPreorder(preorder, i, end);\n            else //  i = end+1;  all elements less than root. \n                return false;\n        }\n        return false;\n    } \n};","compare_result":"1111111100011100011001110101100010011011110110110001001001111","title_slug":"verify-preorder-sequence-in-binary-search-tree","has_notes":false,"flag_type":1}