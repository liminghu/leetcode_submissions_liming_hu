{"id":400691703,"question_id":85,"lang":"cpp","lang_name":"C++","time":"4 years, 4 months","timestamp":1601066082,"status":10,"status_display":"Accepted","runtime":"48 ms","url":"/submissions/detail/400691703/","is_pending":"Not Pending","title":"Maximal Rectangle","memory":"11.8 MB","code":"class Solution {\npublic:\n  int maximalRectangle(vector<vector<char> > &matrix) {\n    int r = matrix.size();\n    if (r == 0) return 0;\n    int c = matrix[0].size();\n  \n    // dp[i][j] := max len of all 1s ends with col j at row i.\n    vector<vector<int>> dp(r, vector<int>(c));\n \n    for (int i = 0; i < r; ++i)\n      for (int j = 0; j < c; ++j)\n        dp[i][j] = (matrix[i][j] == '1') ? (j == 0 ? 1 : dp[i][j - 1] + 1) : 0;\n \n    int ans = 0;\n \n    for (int i = 0; i < r; ++i)\n      for (int j = 0; j < c; ++j) {\n        int len = INT_MAX;\n        for (int k = i; k < r; k++) {\n          len = min(len, dp[k][j]);\n          if (len == 0) break;\n          ans = max(len * (k - i + 1), ans);\n        }\n    }\n \n    return ans;\n  }\n};","compare_result":"111111111111111111111111111111111111111111111111111111111111111111","title_slug":"maximal-rectangle","has_notes":false,"flag_type":1}