{"id":1416201140,"question_id":1307,"lang":"cpp","lang_name":"C++","time":"4Â months","timestamp":1728412304,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/1416201140/","is_pending":"Not Pending","title":"Ugly Number III","memory":"N/A","code":"/*\nAn ugly number is a positive integer that is divisible by a, b, or c.\nGiven four integers n, a, b, and c, return the nth ugly number.\n\nExample 1:\nInput: n = 3, a = 2, b = 3, c = 5\nOutput: 4\nExplanation: The ugly numbers are 2, 3, 4, 5, 6, 8, 9, 10... The 3rd is 4.\n\nExample 2:\nInput: n = 4, a = 2, b = 3, c = 4\nOutput: 6\nExplanation: The ugly numbers are 2, 3, 4, 6, 8, 9, 10, 12... The 4th is 6.\n\nExample 3:\nInput: n = 5, a = 2, b = 11, c = 13\nOutput: 10\nExplanation: The ugly numbers are 2, 4, 6, 8, 10, 11, 12, 13... The 5th is 10.\n \nConstraints:\n1 <= n, a, b, c <= 109\n1 <= a * b * c <= 1018\nIt is guaranteed that the result will be in range [1, 2 * 109].\n*/\nclass Solution {\npublic:\n    int nthUglyNumber(int n, int a, int b, int c) {\n        long long l = 1;\n        long long r = INT_MAX;\n        long long ab = lcm(a,b);\n        long long bc = lcm(b,c);\n        long long ac = lcm(a,c);\n        long long abc = lcm(a,bc);\n        while( l < r ) {\n            long long mid = l + (r-l)/2;\n            long long cnt = mid/a + mid/b + mid/c - mid/ab - mid/ac - mid/bc + mid/abc;\n            if( cnt >= n) \n                r = mid;\n            else\n                l = mid+1;\n        }\n        return l;   \n\n    }\n    long long gcd(long long int a, long long int b) {\n        if (b == 0)\n            return a;\n        return gcd(b, a % b);\n    }\n    // Function to return LCM of two numbers \n    long long lcm(int a, int b) {\n        return (a / gcd(a, b)) * b;\n    }\n};\n\n","compare_result":"11101111111111111111111111111111111111111111010001111","title_slug":"ugly-number-iii","has_notes":false,"flag_type":1}