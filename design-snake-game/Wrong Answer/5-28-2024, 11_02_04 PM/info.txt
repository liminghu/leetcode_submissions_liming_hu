{"id":1271102583,"question_id":353,"lang":"cpp","lang_name":"C++","time":"8 months, 2 weeks","timestamp":1716962524,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/1271102583/","is_pending":"Not Pending","title":"Design Snake Game","memory":"N/A","code":"class SnakeGame {\nprivate:\n    vector<vector<int>> food_stream;\n    int game_width, game_height;\n    int snake_w, snake_h;\n    int game_status;\n    int steps;\n\npublic:\n    SnakeGame(int width, int height, vector<vector<int>>& food) {  //[3,2,[[1,2],[0,1]]]\n        game_width = width;\n        game_height = height;\n        food_stream = food; //[[1,2],[0,1]]\n        snake_w = 0;  //snake location\n        snake_h = 0;\n        steps = 0;\n    }\n    \n    int move(string direction) { //[\"R\"],[\"D\"],[\"R\"],[\"U\"],[\"L\"],[\"U\"]\n        if (direction == \"R\") { //move right.\n            if(snake_w+1>game_width-1)\n                return -1; //game over because snake collides with border\n            snake_w++;\n            //if(steps<food_stream.size()) //is there food?\n            if(steps<food_stream.size() && food_stream[steps][0]==snake_h && food_stream[steps][1]==snake_w )  {//food[steps][0]   1 (height)  food[steps][1] 2 (width)\n                steps++;\n                return steps;\n            }\n           \n        } else if (direction == \"L\") { //left\n            if(snake_w-1<0)\n                return -1; //game over because snake collides with border\n            snake_w--;\n            //if(steps<food_stream.size()) //is there food?\n            if(steps<food_stream.size() && food_stream[steps][0]==snake_h && food_stream[steps][1]==snake_w )  {//\n                steps++;\n                return steps;\n            }\n\n        } else if (direction == \"D\") { //up\n            if(snake_h+1>game_height-1)\n                return -1; //game over because snake collides with border\n            snake_h++;\n            //if(steps<food_stream.size()) //is there food?\n            if(steps<food_stream.size() && food_stream[steps][0]==snake_h && food_stream[steps][1]==snake_w )  {//\n                steps++;\n                return steps;\n            }\n            \n        } else if (direction == \"U\") {//down\n            if(snake_h-1<0)\n                return -1; //game over because snake collides with border\n            snake_h--;\n            //if(steps<food_stream.size()) //is there food?\n            if(steps<food_stream.size() && food_stream[steps][0]==snake_h && food_stream[steps][1]==snake_w )  {//\n                steps++;\n                return steps;\n            }\n            \n        }\n        return steps;\n    }\n};\n\n/**\n * Your SnakeGame object will be instantiated and called as such:\n * SnakeGame* obj = new SnakeGame(width, height, food);\n * int param_1 = obj->move(direction);\n */","compare_result":"11111111111111111111111111111111101111111001111111111111111111111111111010111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"design-snake-game","has_notes":false,"flag_type":1}