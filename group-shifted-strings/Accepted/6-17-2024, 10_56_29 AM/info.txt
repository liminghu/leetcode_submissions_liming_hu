{"id":1291571974,"question_id":249,"lang":"cpp","lang_name":"C++","time":"7 months, 3 weeks","timestamp":1718646989,"status":10,"status_display":"Accepted","runtime":"7 ms","url":"/submissions/detail/1291571974/","is_pending":"Not Pending","title":"Group Shifted Strings","memory":"10.2 MB","code":"class Solution {\npublic:\n    vector<vector<string>> groupStrings(vector<string>& strings) { //1 <= strings.length <= 200 1 <= strings[i].length <= 50 strings[i] consists of lowercase English letters.\n        \n        int sz = strings.size();\n        \n        unordered_map<string, vector<string>> hash;\n        int diff;\n        string shifted_cur;\n        for(int i=0; i<sz; i++) {\n            string cur = strings[i];\n            shifted_cur = cur;\n            //shift until the first letter is 'a'\n            diff = cur[0]-'a';\n            if(diff >0 ) {\n                for(int j=0; j<cur.length(); j++) {\n                    shifted_cur[j] = cur[j]-'a'>=diff? cur[j]-diff: cur[j]-diff+26;               \n                }\n            }\n            hash[shifted_cur].push_back(cur);\n            \n        }\n        \n        vector<vector<string>> ans;\n        \n        unordered_map<string, vector<string>>::iterator it;\n        for(it=hash.begin(); it!=hash.end(); it++) {\n            ans.push_back(it->second);\n        };\n        \n        return ans;\n        \n    }\n};","compare_result":"1111111111111111111111111","title_slug":"group-shifted-strings","has_notes":false,"flag_type":1}