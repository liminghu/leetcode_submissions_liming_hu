{"id":1526755398,"question_id":902,"lang":"cpp","lang_name":"C++","time":"6 days, 21 hours","timestamp":1738351909,"status":10,"status_display":"Accepted","runtime":"14 ms","url":"/submissions/detail/1526755398/","is_pending":"Not Pending","title":"Minimum Number of Refueling Stops","memory":"20.8 MB","code":"class Solution {\npublic:\n    int minRefuelStops(int target, int startFuel, vector<vector<int>>& stations) {//0 <= stations.length <= 500\n        //stations[i] = [positioni, fueli]\n        vector<long long> dp(501, 0); //dp[t] means the furthest distance that we can get with t times of refueling.\n        dp[0] = startFuel;\n        for(int i=0; i<stations.size(); i++) { //for every station s[i],\n            for(int t=i; t>=0 && dp[t] >= stations[i][0]; t--) //if the current distance dp[t] >= s[i][0], we can refuel:\n                dp[t+1] = max(dp[t+1], dp[t]+stations[i][1]);\n        }\n        for(int t=0; t<=stations.size(); t++) {\n            if(dp[t]>=target)\n                return t;\n        }\n        return -1;\n    }\n};","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"minimum-number-of-refueling-stops","has_notes":false,"flag_type":1}