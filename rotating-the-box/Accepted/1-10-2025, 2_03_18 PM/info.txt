{"id":1504500090,"question_id":1972,"lang":"cpp","lang_name":"C++","time":"3 weeks, 6 days","timestamp":1736546598,"status":10,"status_display":"Accepted","runtime":"7 ms","url":"/submissions/detail/1504500090/","is_pending":"Not Pending","title":"Rotating the Box","memory":"56.7 MB","code":"class Solution {\npublic:\n    vector<vector<char>> rotateTheBox(vector<vector<char>>& boxGrid) {\n        int m = boxGrid.size();\n        int n = boxGrid[0].size();\n        // '#'(stone), '*'(obstacles), '.'(empty)\n        vector<vector<char>> rotated(n, vector<char>(m, '.'));\n        for(int i=0; i<m; i++) { //new column.\n            int lowestRowWithEmptyCell = n-1; \n            for(int j=n-1; j>=0; j--) { //new rows.\n                //roated[j][i]    //boxGrid[i][j]\n                //Each stone falls down until it lands on an obstacle, another stone, or the bottom of the box.\n                if(boxGrid[i][j] == '#') {\n                    rotated[lowestRowWithEmptyCell][m-i-1] = '#';\n                    lowestRowWithEmptyCell--;\n                }\n                if(boxGrid[i][j]== '*') {\n                   rotated[j][m-i-1] = '*';\n                   lowestRowWithEmptyCell = j-1; \n                }\n            }\n        }\n        return rotated;\n    }\n};","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"rotating-the-box","has_notes":false,"flag_type":1}