{"id":1287431518,"question_id":831,"lang":"cpp","lang_name":"C++","time":"7 months, 4 weeks","timestamp":1718308674,"status":10,"status_display":"Accepted","runtime":"3 ms","url":"/submissions/detail/1287431518/","is_pending":"Not Pending","title":"Largest Sum of Averages","memory":"9.6 MB","code":"class Solution {\npublic:\n/*\nYou are given an integer array nums and an integer k. You can partition the array into at most k non-empty adjacent subarrays. \nThe score of a partition is the sum of the averages of each subarray.\nNote that the partition must use every integer in nums, and that the score is not necessarily an integer.\nReturn the maximum score you can achieve of all the possible partitions. Answers within 10-6 of the actual answer will be accepted.\n*/\n    double largestSumOfAverages(vector<int>& nums, int K) { //1 <= nums.length <= 100; 1 <= nums[i] <= 104; 1 <= k <= nums.length\n        double ans = 0.0;\n        const int sz = nums.size();\n        vector<vector<double>> dp_partition_k_sum(K+1, vector<double>(sz+1, 0.0));\n        //at most k non-empty adjacent subarrays\n\n        vector<double> sum(sz+1, 0.0);\n        for(int i=1; i<=sz; i++) {\n            sum[i] = sum[i-1]+nums[i-1];\n            dp_partition_k_sum[1][i]=sum[i]/i;\n        };\n        \n        // partition k will depends on partition k-1.       max( partion k-1 + average rest)       \n        //  dp[k][i] = max(dp[k-1][j]    + avg(nums[j+1], nums[i]) )     j=                    i\n        for(int k=2; k<=K; k++) {  //how many partitions.\n            for(int i=k; i<=sz; i++)  { //how many elements.\n                for(int j=k-1; j<i; j++) {                                    //where is the end of k-1 partition. j\n                    dp_partition_k_sum[k][i] = max(dp_partition_k_sum[k][i], dp_partition_k_sum[k-1][j]+ (sum[i]-sum[j])/(i-j));\n                }            \n            }\n        }\n\n        return dp_partition_k_sum[K][sz];\n    }\n};","compare_result":"111111111111111111111111111111111111111111111111111","title_slug":"largest-sum-of-averages","has_notes":false,"flag_type":1}