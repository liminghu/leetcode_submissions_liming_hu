{"id":1433736066,"question_id":404,"lang":"cpp","lang_name":"C++","time":"3 months, 2 weeks","timestamp":1729891592,"status":10,"status_display":"Accepted","runtime":"0 ms","url":"/submissions/detail/1433736066/","is_pending":"Not Pending","title":"Sum of Left Leaves","memory":"15.1 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    int sumOfLeftLeaves(TreeNode* root) {\n        if(root==NULL)\n            return 0;\n        if(root->left == NULL && root->right == NULL)\n            return 0;\n        if(root->left) {\n            if( isLeaf(root->left) )\n                return root->left->val + sumOfLeftLeaves(root->right);\n            else\n                return sumOfLeftLeaves(root->left) + sumOfLeftLeaves(root->right);\n        } else {\n            return sumOfLeftLeaves(root->right);\n        }\n        \n    }\nbool isLeaf(TreeNode* node) {\n    return node->left == NULL && node->right == NULL;\n    }\n};","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"sum-of-left-leaves","has_notes":false,"flag_type":1}