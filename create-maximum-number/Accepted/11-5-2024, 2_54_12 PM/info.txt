{"id":1444272374,"question_id":321,"lang":"cpp","lang_name":"C++","time":"3Â months","timestamp":1730847252,"status":10,"status_display":"Accepted","runtime":"19 ms","url":"/submissions/detail/1444272374/","is_pending":"Not Pending","title":"Create Maximum Number","memory":"30.9 MB","code":"class Solution {\npublic:\n    vector<int> maxNumber(vector<int>& nums1, vector<int>& nums2, int k) {\n        int m = nums1.size();\n        int n = nums2.size();\n        vector<int> ans;\n        for(int k1=0; k1<=k; k1++) {\n            int k2 = k-k1;\n            if(k1>m || k2>n)\n                continue;\n            vector<int> maxNum_k1 = maxNumber(nums1, k1);\n            vector<int> maxNum_k2 = maxNumber(nums2, k2);\n            ans = max(ans, maxNumber(maxNum_k1, maxNum_k2));\n        }\n        return ans;\n    }\nprivate:\n    vector<int> maxNumber(vector<int>& nums, int k ) {\n        if(k==0) \n            return {};\n        int to_pop = nums.size()-k;\n        vector<int> ans;\n        for(auto num:nums) {\n            while(!ans.empty() && num > ans.back() && to_pop > 0) {\n                ans.pop_back();\n                to_pop--;\n            };\n            ans.push_back(num);\n        }   \n        while(ans.size() > k)\n            ans.pop_back();\n        return ans; \n    } \n    vector<int> maxNumber(vector<int>& nums1, vector<int>& nums2) {\n        vector<int> ans;\n        auto s1 = nums1.begin();\n        auto e1 = nums1.end();\n        auto s2 = nums2.begin();\n        auto e2 = nums2.end();\n        while(s1!=e1 || s2!=e2) {\n            //Returns true if the range [first1,last1) compares lexicographically less than the range [first2,last2).\n            bool cmp = lexicographical_compare(s1, e1, s2, e2);\n            if(cmp) { //less\n                ans.push_back(*s2);\n                s2++;\n            } else {\n                ans.push_back(*s1);\n                s1++;\n            }\n        }        \n        return ans;\n    }\n   \n};","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"create-maximum-number","has_notes":false,"flag_type":1}