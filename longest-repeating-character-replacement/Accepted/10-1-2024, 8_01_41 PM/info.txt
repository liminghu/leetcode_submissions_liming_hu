{"id":1408861581,"question_id":424,"lang":"cpp","lang_name":"C++","time":"4 months, 1 week","timestamp":1727838101,"status":10,"status_display":"Accepted","runtime":"17 ms","url":"/submissions/detail/1408861581/","is_pending":"Not Pending","title":"Longest Repeating Character Replacement","memory":"8.4 MB","code":"/*\nYou are given a string s and an integer k. You can choose any character of the string and change it to any other uppercase English character. You can perform this operation at most k times.\nReturn the length of the longest substring containing the same letter you can get after performing the above operations.\nConstraints:\n\n1 <= s.length <= 105\ns consists of only uppercase English letters.\n0 <= k <= s.length\n*/\nclass Solution {\npublic:\n    int characterReplacement(string s, int k) {\n        vector<int> count(26,0);\n        int ret = 0;\n        int i=0;\n        for(int j=0; j<s.size(); j++) {//check [i..j] whether it is ok.\n            count[ s[j]-'A']++;\n            while( j-i+1 - *max_element(count.begin(), count.end()) > k ) { //not ok\n                count [s[i]-'A']--;\n                i++;\n            };\n            ret = max(ret, j-i+1);\n        }\n        return ret;\n    }\n};","compare_result":"1111111111111111111111111111111111111111111111","title_slug":"longest-repeating-character-replacement","has_notes":false,"flag_type":1}