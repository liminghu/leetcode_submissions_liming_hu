{"id":1370410643,"question_id":202,"lang":"cpp","lang_name":"C++","time":"5 months, 1 week","timestamp":1724784668,"status":12,"status_display":"Memory Limit Exceeded","runtime":"N/A","url":"/submissions/detail/1370410643/","is_pending":"Not Pending","title":"Happy Number","memory":"N/A","code":"/*\nWrite an algorithm to determine if a number n is happy.\nA happy number is a number defined by the following process:\nStarting with any positive integer, replace the number by the \nsum of the squares of its digits.\nRepeat the process until the number equals 1 (where it will stay), \nor it loops endlessly in a cycle which does not include 1.\nThose numbers for which this process ends in 1 are happy.\nReturn true if n is a happy number, and false if not.\n*/\nclass Solution {\npublic:\n    bool isHappy(int n) {\n        //1 <= n <= 231 - 1\n        unordered_set<int> set(n);\n        int start = n;\n        while( n!=1) {\n            int sumSqure = 0;\n            while(n>0) {\n                int digits = n%10;\n                sumSqure += digits*digits;\n                n = n/10;  \n            };\n            n = sumSqure;            \n            if(n == 1)\n                return true;\n            if(set.find(n)!=set.end())\n                return false;\n            else\n                set.insert(n);            \n        }\n\n        return n==1;\n    }\n};","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111111111000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000","title_slug":"happy-number","has_notes":false,"flag_type":1}