{"id":1370414763,"question_id":202,"lang":"cpp","lang_name":"C++","time":"5 months, 1 week","timestamp":1724784925,"status":10,"status_display":"Accepted","runtime":"0 ms","url":"/submissions/detail/1370414763/","is_pending":"Not Pending","title":"Happy Number","memory":"8.3 MB","code":"/*\nWrite an algorithm to determine if a number n is happy.\nA happy number is a number defined by the following process:\nStarting with any positive integer, replace the number by the \nsum of the squares of its digits.\nRepeat the process until the number equals 1 (where it will stay), \nor it loops endlessly in a cycle which does not include 1.\nThose numbers for which this process ends in 1 are happy.\nReturn true if n is a happy number, and false if not.\n*/\nclass Solution {\npublic:\n    bool isHappy(int n) {\n        //1 <= n <= 231 - 1\n        unordered_set<int> seen;\n        while(n!=1 && seen.find(n) == seen.end()) {\n            seen.insert(n);\n            n = getNext(n);\n        }\n        return n==1;\n    }\n    int getNext(int n) {\n        int sumSquare = 0;\n        while(n>0) {\n            int digit = n%10;\n            n = n/10;\n            sumSquare += digit*digit;\n        }\n        return sumSquare;\n    }\n };","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"happy-number","has_notes":false,"flag_type":1}