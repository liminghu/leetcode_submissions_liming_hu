{"id":1528100478,"question_id":1017,"lang":"cpp","lang_name":"C++","time":"5 days, 14 hours","timestamp":1738464059,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/1528100478/","is_pending":"Not Pending","title":"Odd Even Jump","memory":"N/A","code":"class Solution {\npublic:\n    int oddEvenJumps(vector<int>& arr) {\n        int n = arr.size();\n        if(n<=1)\n            return n;\n        vector<bool> odd(n, false);\n        vector<bool> even(n, false);\n        odd[n-1] = true;\n        even[n-1] = true;\n        multimap<int, int> mp;\n        mp.insert({arr.back(), n-1});\n        for(int i=n-2; i>=0; i--) {\n            int v = arr[i];\n            if(mp.find(v)!=mp.end()) {\n                auto it = mp.find(v);\n                odd[i] = even[it->second];\n                even[i] = odd[it->second];\n            }\n            auto iter1 = mp.lower_bound(v); //>=arr[i]\n            if( iter1 != mp.end() ) {\n                if(even[iter1->second])\n                    odd[i] = true;\n            }\n            auto iter2 = mp.upper_bound(v); //>arr[i]     <=\n            if(iter1 != mp.begin()) {\n                iter2 = prev(iter2, 1);\n                if(odd[iter2->second])\n                    even[i] = true;\n            }            \n            mp.insert({v,i});\n        }\n        int count = 0;\n        for(int i=0; i<n; i++) {\n            if(odd[i])\n                count++;\n        }\n        return count;\n    }\n};","compare_result":"11111101111111111110111111111111111111101111111111111111111101111","title_slug":"odd-even-jump","has_notes":false,"flag_type":1}