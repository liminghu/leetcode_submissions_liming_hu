{"id":1275803137,"question_id":643,"lang":"cpp","lang_name":"C++","time":"8 months, 1 week","timestamp":1717376442,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/1275803137/","is_pending":"Not Pending","title":"Maximum Average Subarray I","memory":"N/A","code":"class Solution {\npublic:\n    double findMaxAverage(vector<int>& nums, int k) {\n        //edge cases;\n        int n=nums.size();\n        if(k>n)\n            return 0;\n        \n        float Inf = numeric_limits<float>::infinity();\n        double ans = -Inf;\n        int start = 0;\n        int end = k-1;\n        double sum =0;\n        for(int j=start; j<start+k; j++) {\n            sum+= nums[j];        \n        }\n\n        if(k==n)\n            return (double)sum/k;\n\n        for(int i=k; i<n; i++) {\n            sum = sum-nums[i-k]+nums[i];\n            if(sum>ans) \n                ans = sum;\n        }\n\n        return ans/k;\n\n        \n    }\n};","compare_result":"1111111111111111010111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"maximum-average-subarray-i","has_notes":false,"flag_type":1}