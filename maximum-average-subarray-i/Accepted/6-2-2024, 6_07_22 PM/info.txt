{"id":1275806016,"question_id":643,"lang":"cpp","lang_name":"C++","time":"8 months, 1 week","timestamp":1717376842,"status":10,"status_display":"Accepted","runtime":"121 ms","url":"/submissions/detail/1275806016/","is_pending":"Not Pending","title":"Maximum Average Subarray I","memory":"112.5 MB","code":"class Solution {\npublic:\n    double findMaxAverage(vector<int>& nums, int k) {\n        //edge cases;\n        int n=nums.size();\n        if(k>n)\n            return 0;\n        \n        double cur_sum = 0;\n        for(int j=0; j<k; j++) {\n            cur_sum+= nums[j];        \n        }\n        double ans = cur_sum;\n\n        if(k==n)\n            return (double)cur_sum/k;\n\n        for(int i=k; i<n; i++) {\n            cur_sum = cur_sum-nums[i-k]+nums[i];\n            if(cur_sum>ans) \n                ans = cur_sum;\n        }\n\n        return ans/k;\n\n        \n    }\n};","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"maximum-average-subarray-i","has_notes":false,"flag_type":1}