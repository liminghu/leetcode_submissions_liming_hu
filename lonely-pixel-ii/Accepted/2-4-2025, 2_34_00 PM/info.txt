{"id":1531586915,"question_id":533,"lang":"cpp","lang_name":"C++","time":"2 days, 18 hours","timestamp":1738708440,"status":10,"status_display":"Accepted","runtime":"7 ms","url":"/submissions/detail/1531586915/","is_pending":"Not Pending","title":"Lonely Pixel II","memory":"27.3 MB","code":"class Solution {\npublic:\n    int findBlackPixel(vector<vector<char>>& picture, int target) {\n        int m = picture.size();\n        if(!m) return 0;\n        int n = picture[0].size();\n        if(!n) return 0;\n        vector<int> rows(m,0), cols(n,0);\n        unordered_map<string,int> um;\n        vector<string> srows;\n        for(int i = 0; i < m; ++i){\n            string s; //s is a whole row.\n            for(int j = 0; j < n; ++j){\n                if(picture[i][j] == 'B'){\n                    rows[i]++;\n                    cols[j]++;\n                }\n                s.push_back(picture[i][j]); \n            }\n            um[s]++;\n            srows.push_back(s); //row strings.\n        }\n        int res = 0;\n        for(int i = 0; i < m; ++i)\n            if(rows[i] == target && um[srows[i]] == target)\n                for(int j = 0; j < n; ++j)\n                     if(picture[i][j] == 'B' && cols[j] == target) \n                        res++;        \n        return res;        \n    }\n};","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"lonely-pixel-ii","has_notes":false,"flag_type":1}