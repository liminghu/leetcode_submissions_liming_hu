{"id":1531574812,"question_id":533,"lang":"cpp","lang_name":"C++","time":"2 days, 18 hours","timestamp":1738707078,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/1531574812/","is_pending":"Not Pending","title":"Lonely Pixel II","memory":"N/A","code":"class Solution {\npublic:\n    int findBlackPixel(vector<vector<char>>& picture, int target) {\n        int m = picture.size();\n        int n = picture[0].size();\n        //Row r and column c both contain exactly target black pixels.\n        unordered_set<int> rowB;\n        for(int i=0; i<m; i++) {\n            int rCount = 0;\n            for(int j=0; j<n; j++) {\n                if(picture[i][j]=='B')\n                    rCount++;\n            };\n            if(rCount==target)\n                rowB.insert(i);\n        }\n        unordered_set<int> colB;\n        for(int j=0; j<n; j++) {\n            int cCount = 0;\n            for(int i=0; i<m; i++) {\n                if(picture[i][j]=='B')\n                    cCount++;\n            };\n            if(cCount==target)\n                colB.insert(j);\n        };\n        int ret = 0;\n        for(int i=0; i<m; i++) {\n            if (rowB.find(i) != rowB.end()) {\n                for(int j=0; j<n; j++) {\n                    if(picture[i][j]=='B' && colB.find(j) != colB.end()) {\n                        ret++;\n                    }\n                };\n            }\n        }   \n        return ret;             \n    }\n};","compare_result":"11111111111101111111111111111111111111111111111101101011110111111101111111111111111111111111111111111111111100000000101","title_slug":"lonely-pixel-ii","has_notes":false,"flag_type":1}