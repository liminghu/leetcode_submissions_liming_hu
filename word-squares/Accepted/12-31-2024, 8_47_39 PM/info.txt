{"id":1493792458,"question_id":425,"lang":"cpp","lang_name":"C++","time":"1 month, 1 week","timestamp":1735706859,"status":10,"status_display":"Accepted","runtime":"66 ms","url":"/submissions/detail/1493792458/","is_pending":"Not Pending","title":"Word Squares","memory":"64.1 MB","code":"class Solution {\npublic:\n    vector<vector<string>> wordSquares(vector<string>& words) { //1 <= words[i].length <= 4\n        unordered_map<string, unordered_set<string>> prefixMap; //prefix->set of words that has it as the prefix.\n        for(auto word: words)\n            add(word, prefixMap);\n        vector<vector<string>> ans;\n        int len = words[0].length();\n        vector<string> cur(len, string(len, ' '));\n        search(words, prefixMap, ans, cur, 0);\n        return ans;\n    };\n    void add(string word, unordered_map<string, unordered_set<string>>& prefixMap) {\n        int n = word.length();\n        string curWord(n, ' ');\n        prefixMap[curWord].insert(word);\n        for(int i=0; i<n; i++) {\n            curWord[i] = word[i];\n            prefixMap[curWord].insert(word); \n        }\n    }\n    void search(vector<string>& words, unordered_map<string, unordered_set<string>>& prefixMap, vector<vector<string>>& ans, vector<string>& cur, int i) {\n        if(i==cur.size()) {\n            ans.push_back(cur);\n            return;\n        }\n        for(auto& word: prefixMap[cur[i]]) {\n            string ori = cur[i];\n            cur[i] = word;\n            bool ok = true;\n            for(int j=i+1; j<cur.size() && ok; j++) {\n                cur[j][i] = word[j];\n                if(!prefixMap.count(cur[j]))\n                    ok = false;\n            }\n            if(ok)\n                search(words, prefixMap, ans, cur, i+1);\n            for(int j=i+1; j<cur.size(); j++)\n                cur[j][i] = ' ';\n            cur[i] = ori;\n        }\n    }\n};","compare_result":"11111111111111111","title_slug":"word-squares","has_notes":false,"flag_type":1}