{"id":1338015490,"question_id":3479,"lang":"cpp","lang_name":"C++","time":"6 months, 1 week","timestamp":1722315411,"status":10,"status_display":"Accepted","runtime":"1602 ms","url":"/submissions/detail/1338015490/","is_pending":"Not Pending","title":"Count the Number of Substrings With Dominant Ones","memory":"445.9 MB","code":"class Solution {\npublic:\n    int numberOfSubstrings(string s) {\n        /*\n        You are given a binary string s.\n        Return the number of \n        substrings\n        with dominant ones.\n        A string has dominant ones if the number of ones in the string is greater than or equal to the square of the number of zeros in the string.\n        */\n\n        /*1 <= s.length <= 4 * 104\n            s consists only of characters '0' and '1'.\n        */\n       /* int sz = s.length();\n        vector<int> numZeros(sz+1, 0);\n        vector<int> numOnes(sz+1, 0);\n        for(int i=0; i<sz; i++) {\n            if(s[i] == '0') {\n                numZeros[i+1] =  numZeros[i] + 1;\n                numOnes[i+1] = numOnes[i];\n            } else {\n                numOnes[i+1] =  numOnes[i] + 1;\n                numZeros[i+1] = numZeros[i];               \n            };\n        }\n\n        int start = 0;\n        int end = sz -1;\n\n        int ans = 0;\n        for(int i=0; i<sz; i++) {\n            for(int j=i; j<sz; j++) {\n                int numZeroij = numZeros[j+1] - numZeros[i];\n                int numOneij = numOnes[j+1] - numOnes[i];\n                if( numOneij >= numZeroij * numZeroij )\n                    ans++;\n            } \n        }\n        return ans;*/\n        int sz = s.length();\n        int cnt = 0;\n        \n        vector<int> zero_index;\n        for (int i = 0; i < sz; i ++)\n            if (s[i] == '0') zero_index.push_back(i);\n        \n        if (zero_index.empty()) return sz*(sz+1)/2;\n        int zro_ind = 0;\n        \n        for (int l = 0; l < sz; l ++) {\n            while (zro_ind < zero_index.size() && zero_index[zro_ind] < l) zro_ind ++;\n            \n            vector<int> valid_zro;\n            for (int z = zro_ind; z < zero_index.size() && z < (zro_ind+201); z ++)\n                valid_zro.push_back(zero_index[z]);\n            valid_zro.push_back(sz);\n            \n            int zro_cnt = 0;\n            int last = l;\n            \n            for (auto ind : valid_zro) {\n                int min_one = zro_cnt*zro_cnt;\n                int min_ind = max(l + min_one + zro_cnt - 1, last);\n\n                if (min_ind < ind) cnt += (ind - min_ind); \n                \n                last = ind;\n                zro_cnt ++;\n            }\n        }\n        return cnt;\n    }\n};","compare_resulttitle_slug":"count-the-number-of-substrings-with-dominant-ones","has_notes":false,"flag_type":1}