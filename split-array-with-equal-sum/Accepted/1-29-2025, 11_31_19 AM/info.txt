{"id":1524721022,"question_id":548,"lang":"cpp","lang_name":"C++","time":"1 week, 1 day","timestamp":1738179079,"status":10,"status_display":"Accepted","runtime":"77 ms","url":"/submissions/detail/1524721022/","is_pending":"Not Pending","title":"Split Array with Equal Sum","memory":"16.7 MB","code":"class Solution {\npublic:\n    bool splitArray(vector<int>& nums) {\n        //triplet (i, j, k)\n        //0 < i, i + 1 < j, j + 1 < k < n - 1\n        //The sum of subarrays (0, i - 1), (i + 1, j - 1), (j + 1, k - 1) and (k + 1, n - 1) is equal.\n        int n = nums.size();\n        if(n<7)\n            return false;\n        vector<int> sum(n, 0);\n        sum[0] = nums[0];\n        for(int i=1; i<n; i++)\n            sum[i] = nums[i] + sum[i-1];\n        for(int j=3; j<n-3; j++) {\n            unordered_set<int> st;\n            for(int i=1; i<j-1; i++) {\n                if(sum[i-1]==sum[j-1]-sum[i])\n                    st.insert(sum[i-1]);\n            }\n            for(int k=j+2; k<n-1; k++) {\n                if(sum[n-1]-sum[k] == sum[k-1]-sum[j] && st.find(sum[k-1]-sum[j])!=st.end())\n                    return true;\n            }\n        } \n        return false;\n    }\n};","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"split-array-with-equal-sum","has_notes":false,"flag_type":1}