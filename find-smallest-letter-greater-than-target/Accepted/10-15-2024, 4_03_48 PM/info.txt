{"id":1423706456,"question_id":745,"lang":"cpp","lang_name":"C++","time":"3 months, 3 weeks","timestamp":1729033428,"status":10,"status_display":"Accepted","runtime":"13 ms","url":"/submissions/detail/1423706456/","is_pending":"Not Pending","title":"Find Smallest Letter Greater Than Target","memory":"19.8 MB","code":"/*\nYou are given an array of characters letters that is sorted in non-decreasing order, and a character target. \nThere are at least two different characters in letters.\nReturn the smallest character in letters that is lexicographically greater than target. If such a character \ndoes not exist, return the first character in letters.\n\nExample 1:\nInput: letters = [\"c\",\"f\",\"j\"], target = \"a\"\nOutput: \"c\"\nExplanation: The smallest character that is lexicographically greater than 'a' in letters is 'c'.\n\nExample 2:\nInput: letters = [\"c\",\"f\",\"j\"], target = \"c\"\nOutput: \"f\"\nExplanation: The smallest character that is lexicographically greater than 'c' in letters is 'f'.\n\nExample 3:\nInput: letters = [\"x\",\"x\",\"y\",\"y\"], target = \"z\"\nOutput: \"x\"\nExplanation: There are no characters in letters that is lexicographically greater than 'z' so we return letters[0].\n \nConstraints:\n2 <= letters.length <= 104\nletters[i] is a lowercase English letter.\nletters is sorted in non-decreasing order.\nletters contains at least two different characters.\ntarget is a lowercase English letter.\n*/\nclass Solution {\npublic:\n    char nextGreatestLetter(vector<char>& letters, char target) { //letters that is sorted in non-decreasing order\n        int n = letters.size();\n        if(letters[0] > target)\n            return letters[0];\n\n        int left = 0;\n        int right = n-1;\n        while(left<=right) {\n            int mid = (left+right)/2;\n            if(letters[mid] <= target )\n                left = mid+1;\n            else //if(letters[mid] > target) \n                right = mid-1;\n        };\n        return left==letters.size()? letters[0]: letters[left];\n    }\n};","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"find-smallest-letter-greater-than-target","has_notes":false,"flag_type":1}