{"id":1311673272,"question_id":3463,"lang":"cpp","lang_name":"C++","time":"7Â months","timestamp":1720277644,"status":10,"status_display":"Accepted","runtime":"11 ms","url":"/submissions/detail/1311673272/","is_pending":"Not Pending","title":"Alternating Groups I","memory":"25.9 MB","code":"class Solution {\npublic:\n    int numberOfAlternatingGroups(vector<int>& colors) { //colors[i] == 0 means that tile i is red.\n                                                        //colors[i] == 1 means that tile i is blue\n        unsigned int sz = colors.size();\n        if( sz < 3 )\n            return 0;\n        \n        int ans = 0;\n        for( unsigned int i = 0; i < sz; i++ ) {\n            if( colors[i] != colors[ (i-1+sz) % sz ] && colors[i] != colors[ (i+1+sz) % sz ] ) {\n                ans++;\n                cout << i << endl;\n                cout << colors[ (i-1) % sz ] << \" \" << colors[ i ] << \" \"<< colors[ (i+1) % sz ] << \" \" << endl;\n                cout << \"ans = \" << ans << endl;\n            }\n        }\n        \n        return ans;\n        \n    }\n};","compare_resulttitle_slug":"alternating-groups-i","has_notes":false,"flag_type":1}