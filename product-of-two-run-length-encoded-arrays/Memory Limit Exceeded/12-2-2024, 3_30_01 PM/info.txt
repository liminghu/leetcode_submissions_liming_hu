{"id":1468742443,"question_id":2019,"lang":"cpp","lang_name":"C++","time":"2Â months","timestamp":1733182201,"status":12,"status_display":"Memory Limit Exceeded","runtime":"N/A","url":"/submissions/detail/1468742443/","is_pending":"Not Pending","title":"Product of Two Run-Length Encoded Arrays","memory":"N/A","code":"class Solution {\npublic:\n    vector<vector<int>> findRLEArray(vector<vector<int>>& encoded1, vector<vector<int>>& encoded2) {\n        vector<int> decoded1 = decode(encoded1);\n        vector<int> decoded2 = decode(encoded2);\n        vector<int> prod;\n        for(int i=0; i<decoded1.size(); i++)\n            prod.push_back(decoded1[i]*decoded2[i]);\n        return encode(prod);\n    }\n    vector<int> decode(vector<vector<int>>& encoded) {\n        vector<int> rets;\n        for(auto item:encoded) {\n            int val = item[0];\n            int freq = item[1];\n            while(freq--)\n                rets.push_back(val); \n        };\n        return rets;\n    }\n    vector<vector<int>> encode(vector<int>& arr) {\n        vector<vector<int>> rets;\n        int i=0;\n        while(i<arr.size()) {\n            int val = arr[i];\n            int j=i;\n            while(j<arr.size() && arr[j] == val)\n                j++;\n            int freq = j-i;\n            rets.push_back({val, freq}); \n            i = j;\n        };\n        return rets;\n    }\n};","compare_result":"1111111111111111111111111111111111111111111111111110","title_slug":"product-of-two-run-length-encoded-arrays","has_notes":false,"flag_type":1}