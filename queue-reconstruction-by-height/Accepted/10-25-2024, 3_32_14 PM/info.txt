{"id":1433764093,"question_id":406,"lang":"cpp","lang_name":"C++","time":"3 months, 2 weeks","timestamp":1729895534,"status":10,"status_display":"Accepted","runtime":"75 ms","url":"/submissions/detail/1433764093/","is_pending":"Not Pending","title":"Queue Reconstruction by Height","memory":"29.8 MB","code":"class Solution {\npublic:\n    vector<vector<int>> reconstructQueue(vector<vector<int>>& people) {\n        sort(people.begin(), people.end(), [](vector<int> p1, vector<int> p2){\n            return p1[0] > p2[0] || (p1[0] ==p2[0] && p1[1] < p2[1]);\n        }); //descending...\n        vector<vector<int>> sol;\n        for(auto person: people) {\n            sol.insert( sol.begin() + person[1], person ); //gradually insert short person in front. if same height, lower count first.\n        };\n        return sol;\n    }\n};","compare_result":"111111111111111111111111111111111111","title_slug":"queue-reconstruction-by-height","has_notes":false,"flag_type":1}