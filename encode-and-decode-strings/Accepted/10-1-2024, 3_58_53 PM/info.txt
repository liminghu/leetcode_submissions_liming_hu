{"id":1408734382,"question_id":271,"lang":"cpp","lang_name":"C++","time":"4 months, 1 week","timestamp":1727823533,"status":10,"status_display":"Accepted","runtime":"23 ms","url":"/submissions/detail/1408734382/","is_pending":"Not Pending","title":"Encode and Decode Strings","memory":"25.2 MB","code":"/*\nDesign an algorithm to encode a list of strings to a string. The encoded string is then sent \nover the network and is decoded back to the original list of strings.\nMachine 1 (sender) has the function:\nstring encode(vector<string> strs) {\n  // ... your code\n  return encoded_string;\n}\nMachine 2 (receiver) has the function:\nvector<string> decode(string s) {\n  //... your code\n  return strs;\n}\nSo Machine 1 does:\nstring encoded_string = encode(strs);\nand Machine 2 does:\nvector<string> strs2 = decode(encoded_string);\nstrs2 in Machine 2 should be the same as strs in Machine 1.\nImplement the encode and decode methods.\nYou are not allowed to solve the problem using any serialize methods (such as eval).\n1 <= strs.length <= 200\n0 <= strs[i].length <= 200\nstrs[i] contains any possible characters out of 256 valid ASCII characters.\n*/\nclass Codec {\npublic:\n\n    // Encodes a list of strings to a single string.\n    string encode(vector<string>& strs) {\n        int n = strs.size();\n        cout << \"number of strings: \" << n << endl;\n        string encoded = \"\";\n        for(int i=0; i<n; i++) {\n            int len = strs[i].length();\n            encoded += to_string(len) + \"@\";\n            encoded += strs[i];\n            //cout << \"encoded: \" << encoded << \" after i: \" << i << endl;\n        };\n        //cout << \"encoded: \" << encoded;\n        return encoded;\n    }\n\n    // Decodes a single string to a list of strings.\n    vector<string> decode(string s) {\n        vector<string> decoded;\n        int i = 0;\n        while( i < s.length() ) {\n            int pos = s.find(\"@\", i);  //find @ pos. first.\n            int len = stoi( s.substr(i, pos-i) ); //get the number.\n            i = pos + 1; //move to the head of the real string.\n            decoded.push_back( s.substr(i,len) ); //get the string.\n            i += len; //move the head to the next one.\n        }\n        return decoded;\n    }\n};\n\n// Your Codec object will be instantiated and called as such:\n// Codec codec;\n// codec.decode(codec.encode(strs));","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"encode-and-decode-strings","has_notes":false,"flag_type":1}