{"id":1414183434,"question_id":265,"lang":"cpp","lang_name":"C++","time":"4Â months","timestamp":1728256395,"status":10,"status_display":"Accepted","runtime":"15 ms","url":"/submissions/detail/1414183434/","is_pending":"Not Pending","title":"Paint House II","memory":"13.9 MB","code":"/*\nThere are a row of n houses, each house can be painted with one of the k colors. The cost of painting each house with a certain color is different. \nYou have to paint all the houses such that no two adjacent houses have the same color.\nThe cost of painting each house with a certain color is represented by an n x k cost matrix costs.\nFor example, costs[0][0] is the cost of painting house 0 with color 0; costs[1][2] is the cost of painting house 1 with color 2, and so on...\nReturn the minimum cost to paint all houses.\n\nExample 1:\nInput: costs = [[1,5,3],[2,9,4]]\nOutput: 5\nExplanation:\nPaint house 0 into color 0, paint house 1 into color 2. Minimum cost: 1 + 4 = 5; \nOr paint house 0 into color 2, paint house 1 into color 0. Minimum cost: 3 + 2 = 5.\n\nExample 2:\nInput: costs = [[1,3],[2,4]]\nOutput: 5\n \n\nConstraints:\ncosts.length == n\ncosts[i].length == k\n1 <= n <= 100\n2 <= k <= 20\n1 <= costs[i][j] <= 20\n \nFollow up: Could you solve it in O(nk) runtime?\n*/\nclass Solution {\npublic:\n    int minCostII(vector<vector<int>>& costs) { //n x k cost matrix costs.\n        int n = costs.size();\n        int k = costs[0].size();\n        int min1 = -1;  //the minimum\n        int min2 = -1;  // the second minimum.\n        for(int i=0; i<n; i++) {\n            int prevMin1 = min1;\n            int prevMin2 = min2;\n            min1 = -1;\n            min2 = -1;\n            for(int j=0; j<k; j++) {\n                if( j != prevMin1 )\n                    costs[i][j] += prevMin1<0? 0: costs[i-1][prevMin1];   //paint house i with color j with the cost cost[i][j], and and the previous house cost costs[i-1][prevMin1].\n                else \n                    costs[i][j] += prevMin2<0? 0: costs[i-1][prevMin2];   //\n                if(min1<0 || costs[i][j] < costs[i][min1]) {\n                    min2 = min1;\n                    min1 = j;\n                } else if(min2<0 || costs[i][j]<costs[i][min2]) \n                    min2 = j;\n            }\n        }\n        return costs[n-1][min1];\n    }\n};","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"paint-house-ii","has_notes":false,"flag_type":1}