{"id":1369475388,"question_id":1267,"lang":"cpp","lang_name":"C++","time":"5 months, 2 weeks","timestamp":1724713597,"status":10,"status_display":"Accepted","runtime":"12 ms","url":"/submissions/detail/1369475388/","is_pending":"Not Pending","title":"Remove Zero Sum Consecutive Nodes from Linked List","memory":"16.5 MB","code":"/*\nGiven the head of a linked list, we repeatedly delete consecutive sequences of nodes that sum to 0 until there are no such sequences.\nAfter doing so, return the head of the final linked list.  You may return any such answer.\n*/\n/**\n * Definition for singly-linked list.\n * struct ListNode {\n *     int val;\n *     ListNode *next;\n *     ListNode() : val(0), next(nullptr) {}\n *     ListNode(int x) : val(x), next(nullptr) {}\n *     ListNode(int x, ListNode *next) : val(x), next(next) {}\n * };\n */\nclass Solution {\npublic:\n    ListNode* removeZeroSumSublists(ListNode* head) {\n       ListNode* fakehead = new ListNode(0, head);\n       ListNode* current = fakehead;\n       int prefixSum = 0;\n       unordered_map<int, ListNode*> mp;\n       mp[0] = fakehead;\n\n       while(current != nullptr) {\n            prefixSum += current->val;\n            mp[prefixSum] = current;\n            current = current->next;\n       };\n\n       prefixSum = 0;\n       current = fakehead;\n       while(current!=nullptr) {\n            prefixSum += current->val;\n            current->next = mp[prefixSum]->next;\n            current = current ->next;\n       }\n       return fakehead->next;\n\n \n    /*    if(head == nullptr)\n            return head;\n        \n        while(head != nullptr) {\n            if(head->val == 0) {\n                head = head->next;\n                continue;\n            };\n\n            unordered_map<int, ListNode*> mp; //sum, pointer to the lowest node.\n            int sum = 0;\n            ListNode* cur = head;\n            while(cur != nullptr) {\n                sum += cur->val;\n                // -3 3 0 0 5\n                if(sum == 0) {\n                    head = cur->next;\n                    break;\n                } else if(mp.find(sum)!=mp.end()) {\n                    // 1 2 3 -3 4\n                    // 1 3 6  3 7\n                    ListNode* prev = mp[sum];\n                    prev->next = cur->next;\n                    break;\n                } else {\n                    mp[sum] = cur;\n                };\n                cur = cur->next;\n            }\n            if(cur == nullptr)\n                return head;\n        };\n        return head;*/\n    }\n};","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"remove-zero-sum-consecutive-nodes-from-linked-list","has_notes":false,"flag_type":1}