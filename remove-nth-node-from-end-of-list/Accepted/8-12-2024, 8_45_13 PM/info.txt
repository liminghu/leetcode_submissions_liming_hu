{"id":1353832260,"question_id":19,"lang":"cpp","lang_name":"C++","time":"5 months, 4 weeks","timestamp":1723520713,"status":10,"status_display":"Accepted","runtime":"2 ms","url":"/submissions/detail/1353832260/","is_pending":"Not Pending","title":"Remove Nth Node From End of List","memory":"14.6 MB","code":"/**\n * Definition for singly-linked list.\n * struct ListNode {\n *     int val;\n *     ListNode *next;\n *     ListNode() : val(0), next(nullptr) {}\n *     ListNode(int x) : val(x), next(nullptr) {}\n *     ListNode(int x, ListNode *next) : val(x), next(next) {}\n * };\n */\nclass Solution {\npublic:\n    ListNode* removeNthFromEnd(ListNode* head, int n) {\n        ListNode* fakehead = new ListNode(0);\n        fakehead->next = head;\n        ListNode* slow = fakehead;\n        ListNode* fast = fakehead;\n        while(n>0 && fast !=nullptr) {\n            fast = fast->next;\n            n= n-1;\n        };\n       // cout << \"fast:\" << fast->val << endl;\n        if(fast == nullptr && n>0)\n            return fakehead->next;\n        \n        ListNode* cur = slow;\n        while(fast != nullptr) {\n            fast = fast->next;\n            cur = slow;\n            slow = slow->next;\n        };\n        cur->next = slow->next; //remove slow\n        return fakehead->next;\n    }\n};","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"remove-nth-node-from-end-of-list","has_notes":false,"flag_type":1}