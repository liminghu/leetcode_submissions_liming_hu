{"id":1114662569,"question_id":2075,"lang":"cpp","lang_name":"C++","time":"1 year, 2 months","timestamp":1701985165,"status":10,"status_display":"Accepted","runtime":"429 ms","url":"/submissions/detail/1114662569/","is_pending":"Not Pending","title":"Brightest Position on Street","memory":"102.3 MB","code":"class Solution {\npublic:\n    int brightestPosition(vector<vector<int>>& lights) {\n        map<int, int> street;\n        for(size_t i=0; i<lights.size(); i++) {\n            int left = lights[i][0] - lights[i][1];\n            int right = lights[i][0] + lights[i][1] + 1;\n            street[left]++;\n            street[right]--;\n        }\n        \n        int result = street.begin()->first;\n        int prev = street.begin()->second;\n        int sum = 0;\n        for(auto& itr:street) {\n            sum += itr.second;\n            if(sum>prev) {\n                result = itr.first;\n                prev = sum;\n            }\n        }\n        return result;\n\n    }\n};","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"brightest-position-on-street","has_notes":false,"flag_type":1}