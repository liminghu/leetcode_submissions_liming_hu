{"id":1322089335,"question_id":42,"lang":"cpp","lang_name":"C++","time":"6 months, 3 weeks","timestamp":1721065653,"status":10,"status_display":"Accepted","runtime":"8 ms","url":"/submissions/detail/1322089335/","is_pending":"Not Pending","title":"Trapping Rain Water","memory":"23.4 MB","code":"//Given n non-negative integers representing an elevation map where the width of each bar is 1, \n//compute how much water it can trap after raining.\nclass Solution {\npublic:\n    int trap(vector<int>& height) {\n        /*\n            n == height.length\n            1 <= n <= 2 * 104\n            0 <= height[i] <= 105\n        */\n        int ans = 0;\n        int sz = height.size();\n        if( sz <= 2 )\n            return 0;\n        \n        stack<int> st; \n        int i = 0;\n        while (i < sz ) {\n            while( !st.empty() && height[i] >= height[st.top()]) { //have a trap.\n               int top = st.top();\n               st.pop();\n               if(st.empty())\n                    break; //no trap.\n                int distance = i - st.top() - 1;\n                int bounded_height = min(height[i], height[st.top()]) - height[top];\n                ans += distance * bounded_height;\n            };\n            st.push(i); //We add the index of the bar to the stack if bar is smaller than or equal to the bar at top of stack\n            i++;\n        }\n        return ans;\n        \n    }\n};","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"trapping-rain-water","has_notes":false,"flag_type":1}