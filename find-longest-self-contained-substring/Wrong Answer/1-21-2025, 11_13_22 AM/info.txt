{"id":1516121950,"question_id":3410,"lang":"cpp","lang_name":"C++","time":"2 weeks, 2 days","timestamp":1737486802,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/1516121950/","is_pending":"Not Pending","title":"Find Longest Self-Contained Substring","memory":"N/A","code":"class Solution {\npublic:\n    int maxSubstringLength(string s) {\n        int n = s.length();\n        int ret = -1;\n        vector<int> totalCount(26);\n        for(char c:s)\n            totalCount[c-'a']++;\n        for(int i=1; i<=26; i++) { //i is the number of unique chars in the sub\n            int valid = 0, unique = 0, left = 0;\n            vector<int> count(26, 0);\n            for(int right=0; right<n; right++) {\n                count[s[right]-'a']++; // Add the char to the sub\n                if(count[s[right]-'a'] == 1)// we saw a new char\n                    unique++;\n                if(count[s[right]-'a'] == totalCount[s[right]-'a']) // all of this char is in this sub\n                    valid++;\n                for(; unique>i; left++) {\n                    count[s[left]-'a']--; \n                    if(count[s[left]-'a'] == 0)\n                        unique--;\n                    if(count[s[left]-'a'] == totalCount[s[left]-'a']) // all of this char is in this sub\n                        valid--;\n                }\n                if(valid==i && right-left+1!=n)\n                    ret = max(ret, right-left+1);\n            }\n        }\n        return ret;\n    }\n};","compare_resulttitle_slug":"find-longest-self-contained-substring","has_notes":false,"flag_type":1}