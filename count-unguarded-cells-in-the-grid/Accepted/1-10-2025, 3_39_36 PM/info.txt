{"id":1504543583,"question_id":2343,"lang":"cpp","lang_name":"C++","time":"3 weeks, 6 days","timestamp":1736552376,"status":10,"status_display":"Accepted","runtime":"64 ms","url":"/submissions/detail/1504543583/","is_pending":"Not Pending","title":"Count Unguarded Cells in the Grid","memory":"173.1 MB","code":"class Solution {\npublic:\n    const int UNGUARDED = 0;\n    const int GUARDED = 1;\n    const int GUARD = 2;\n    const int WALL = 3;\n    int countUnguarded(int m, int n, vector<vector<int>>& guards, vector<vector<int>>& walls) {\n        //guards[i] = [rowi, coli] and walls[j] = [rowj, colj] represent the positions of the ith guard and jth wall respectively.\n        //A guard can see every cell in the four cardinal directions (north, east, south, or west) starting from their position \n        //unless obstructed by a wall or another guard. A cell is guarded if there is at least one guard that can see it.\n        vector<vector<int>> grid(m, vector<int>(n, UNGUARDED));\n        for(auto& guard:guards) {\n            grid[guard[0]][guard[1]] = GUARD;\n        };\n        for(auto& wall:walls)\n            grid[wall[0]][wall[1]] = WALL;\n        for(auto& guard:guards) {\n            markguarded(guard[0], guard[1], grid);\n        }\n        int count = 0;\n        for(int i=0; i<m; i++) {\n            for(int j=0; j<n; j++) {\n                if(grid[i][j]==UNGUARDED)  \n                    count++;\n            }\n        }\n        return count;\n    }\n    void markguarded(int row, int col, vector<vector<int>>& grid) {\n        for(int r = row-1; r>=0; r--) {\n            if(grid[r][col]==WALL || grid[r][col]==GUARD)\n                break;\n            grid[r][col]=GUARDED;\n        }\n       for(int r = row+1; r<grid.size(); r++) {\n            if(grid[r][col]==WALL || grid[r][col]==GUARD)\n                break;\n            grid[r][col]=GUARDED;\n        }        \n        for(int c = col-1; c>=0; c--) {\n            if(grid[row][c]==WALL || grid[row][c]==GUARD)\n                break;\n            grid[row][c]=GUARDED;\n        }\n       for(int c = col+1; c<grid[0].size(); c++) {\n            if(grid[row][c]==WALL || grid[row][c]==GUARD)\n                break;\n            grid[row][c]=GUARDED;\n        }              \n    }\n};","compare_result":"1111111111111111111111111111111111111111111111111","title_slug":"count-unguarded-cells-in-the-grid","has_notes":false,"flag_type":1}