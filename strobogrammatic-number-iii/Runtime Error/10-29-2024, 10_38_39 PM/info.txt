{"id":1437914966,"question_id":248,"lang":"cpp","lang_name":"C++","time":"3 months, 1 week","timestamp":1730266719,"status":15,"status_display":"Runtime Error","runtime":"N/A","url":"/submissions/detail/1437914966/","is_pending":"Not Pending","title":"Strobogrammatic Number III","memory":"N/A","code":"class Solution {\npublic:\n    int strobogrammaticInRange(string low, string high) {\n        int n1 = low.size();\n        int n2 = high.size();\n        int count = 0;\n        for(int n=n1; n<=n2; n++) {\n            vector<string> strobeSet = findStrobogrammatic(n);\n            for(auto res: strobeSet) {\n                if(stoi(res)>=stoi(low) && stoi(res)<=stoi(high))\n                    count++;\n            };\n        };\n        return count;\n    }\n\n   unordered_map<char, char> mp;\n    vector<string> findStrobogrammatic(int n) {\n        mp['0'] = '0';\n        mp['1'] = '1';\n        mp['6'] = '9';\n        mp['9'] = '6';\n        mp['8'] = '8';\n        return generateStroboNumbers(n, n);\n    }\n    vector<string> generateStroboNumbers(int n, int finalLength) {\n        vector<string> res;\n        if( n == 0 )\n            return { \"\" };\n        if( n == 1 )\n            return { \"0\", \"1\", \"8\" };\n        vector<string> prevStroboNums = generateStroboNumbers(n-2, finalLength);\n        vector<string> curStrobeNums;\n        for(string& prevStroboNum: prevStroboNums) {\n            for(auto item: mp) {\n                if(! (item.first == '0' && n == finalLength) ) { // for the final string, no leading zero.\n                    //except when the current reversible pair is '00' and n == finalLength \n                    //(because we can't append '0' at the beginning of a number) and push this new number in ans. \n                    curStrobeNums.push_back(item.first + prevStroboNum + item.second);\n                }\n            }\n        }\n        return curStrobeNums;\n    }\n\n/*   int strobogrammaticInRange(string low, string high) {\n        if(low == high) {\n            if(isStrobogrammatic(low))\n                return 1;\n            else\n                return 0;\n        };\n        int lowI = stoi(low);\n        int highI = stoi(high);\n        if(lowI > highI)\n            return 0;\n    \n        int midI = lowI+(highI-lowI)/2;\n        string mid = to_string(midI);\n        int ret = 0;\n        if(isStrobogrammatic(mid))\n            ret++;\n        return strobogrammaticInRange(low, to_string(midI-1)) + strobogrammaticInRange(to_string(midI+1), high)+ret;\n\n    }\n    bool isStrobogrammatic(string num) {\n        string rotated_num;\n        for(int i=num.length()-1; i>=0; i--) {\n            if(num[i] == '0' || num[i] == '1' || num[i] == '8')\n                rotated_num.push_back(num[i]);\n            else if(num[i] == '6')\n                rotated_num.push_back('9');\n            else if(num[i] == '9')\n                rotated_num.push_back('6');\n            else\n                return false;\n        }\n        return rotated_num == num;\n    }*/\n};","compare_result":"111111111111000","title_slug":"strobogrammatic-number-iii","has_notes":false,"flag_type":1}