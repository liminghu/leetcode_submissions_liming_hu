{"id":1286472174,"question_id":456,"lang":"cpp","lang_name":"C++","time":"7 months, 4 weeks","timestamp":1718235523,"status":10,"status_display":"Accepted","runtime":"80 ms","url":"/submissions/detail/1286472174/","is_pending":"Not Pending","title":"132 Pattern","memory":"70.8 MB","code":"class Solution {\npublic:\n/*\n    Given an array of n integers nums, a 132 pattern is a subsequence of three integers nums[i], nums[j] and nums[k] such that i < j < k and nums[i] < nums[k] < nums[j].   \n    Return true if there is a 132 pattern in nums, otherwise, return false.\n*/\n    bool find132pattern(vector<int>& nums) {\n        if(nums.size() <3) \n            return false;\n        \n        stack<int> stk;\n        vector<int> min_array(nums.size());\n        min_array[0] = nums[0];\n        for(int i=1; i<nums.size(); i++) {\n            min_array[i] = min(min_array[i-1], nums[i]);\n        }\n\n        for(int j=nums.size()-1; j>0; j--) {\n            if(nums[j]<=min_array[j])\n                continue;\n            while(!stk.empty() && stk.top() <=min_array[j]) {\n                stk.pop();\n            }\n\n            if(!stk.empty() && stk.top() < nums[j]) {\n                return true;\n            }\n            stk.push(nums[j]);\n        }\n\n        return false;\n        \n    }\n};","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"132-pattern","has_notes":false,"flag_type":1}