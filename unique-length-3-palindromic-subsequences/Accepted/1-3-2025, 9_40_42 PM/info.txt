{"id":1496974942,"question_id":2059,"lang":"cpp","lang_name":"C++","time":"1Â month","timestamp":1735969242,"status":10,"status_display":"Accepted","runtime":"183 ms","url":"/submissions/detail/1496974942/","is_pending":"Not Pending","title":"Unique Length-3 Palindromic Subsequences","memory":"16 MB","code":"class Solution {\npublic:\n    int countPalindromicSubsequence(string s) {\n       unordered_set<char> letters;\n       for(char c:s) \n            letters.insert(c);\n\n       int ans = 0;\n       for(char letter:letters) {\n            int i = -1;\n            int j = 0;\n            for(int k=0; k<s.length(); k++) {\n                if(s[k]==letter) {\n                    if(i==-1)\n                        i=k; //the first one. the leftiest...\n                    j = k;  //to the rightest\n                }\n \n            }\n            unordered_set<char> between;\n            for(int k=i+1; k<j; k++) \n                between.insert(s[k]);\n            ans += between.size();\n       }\n       return ans;\n    }\n};","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"unique-length-3-palindromic-subsequences","has_notes":false,"flag_type":1}