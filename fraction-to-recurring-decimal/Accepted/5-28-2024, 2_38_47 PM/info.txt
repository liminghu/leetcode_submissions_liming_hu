{"id":1270832753,"question_id":166,"lang":"cpp","lang_name":"C++","time":"8 months, 2 weeks","timestamp":1716932327,"status":10,"status_display":"Accepted","runtime":"0 ms","url":"/submissions/detail/1270832753/","is_pending":"Not Pending","title":"Fraction to Recurring Decimal","memory":"7.6 MB","code":"class Solution {\npublic:\n    string fractionToDecimal(int numerator, int denominator) {\n        string ans;\n\n        //edge cases.\n        if(numerator == 0)\n            return \"0\";\n        if(numerator<0 ^ denominator <0) {\n            ans.append(\"-\");\n        };\n\n        long long dividend = labs((long long)numerator);\n        long long divisor = labs((long long)denominator);\n        ans.append(to_string(dividend/divisor));\n        long long reminder = dividend % divisor;\n        if(reminder == 0) {\n            return ans;\n        };\n        ans.append(\".\");\n\n        unordered_map<long long, int> map;\n        while(reminder!=0) {\n            if(map.find(reminder) != map.end()) {\n                ans.insert(map[reminder], \"(\");\n                ans.append(\")\");\n                break;\n            };\n            map[reminder] = ans.length();\n            reminder *= 10;\n            ans.append(to_string(reminder/divisor));\n            reminder %= divisor;\n        }\n        return ans;\n    }\n};","compare_result":"111111111111111111111111111111111111111","title_slug":"fraction-to-recurring-decimal","has_notes":false,"flag_type":1}