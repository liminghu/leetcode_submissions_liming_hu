{"id":1418536330,"question_id":1086,"lang":"cpp","lang_name":"C++","time":"3 months, 4 weeks","timestamp":1728603491,"status":10,"status_display":"Accepted","runtime":"2 ms","url":"/submissions/detail/1418536330/","is_pending":"Not Pending","title":"Divisor Game","memory":"7.4 MB","code":"/*\nAlice and Bob take turns playing a game, with Alice starting first.\nInitially, there is a number n on the chalkboard. On each player's turn, that player makes a move consisting of:\nChoosing any x with 0 < x < n and n % x == 0.\nReplacing the number n on the chalkboard with n - x.\nAlso, if a player cannot make a move, they lose the game.\nReturn true if and only if Alice wins the game, assuming both players play optimally.\n\nExample 1:\nInput: n = 2\nOutput: true\nExplanation: Alice chooses 1, and Bob has no more moves.\n\nExample 2:\nInput: n = 3\nOutput: false\nExplanation: Alice chooses 1, Bob chooses 1, and Alice has no more moves.\n \n\nConstraints:\n1 <= n <= 1000\n*/\nclass Solution {\npublic:\n    bool divisorGame(int n) {\n        if( n == 1 )\n            return false;\n        if( n == 2 )\n            return true;\n\n        return n % 2 == 0; \n        \n    }\n};","compare_result":"1111111111111111111111111111111111111111","title_slug":"divisor-game","has_notes":false,"flag_type":1}