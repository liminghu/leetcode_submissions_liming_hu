{"id":1451927570,"question_id":536,"lang":"cpp","lang_name":"C++","time":"2 months, 3 weeks","timestamp":1731526376,"status":10,"status_display":"Accepted","runtime":"18 ms","url":"/submissions/detail/1451927570/","is_pending":"Not Pending","title":"Construct Binary Tree from String","memory":"27.2 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    TreeNode* str2tree(string s) {//preorder\n        if(s.empty())\n            return NULL;\n        istringstream in(s);\n        TreeNode* node = str2tree(in);\n        return node;\n    }\n    TreeNode* str2tree(istringstream& in) {\n        int num;\n        TreeNode* node;\n        if(in>>num) {\n            node = new TreeNode(num);\n        }\n        char c;\n        while(in >> c) {\n            if( c=='(' && !(node->left) ) \n                node->left = str2tree(in);\n            else if( c=='(' && node->left)\n                node->right = str2tree(in);\n            else if(c==')')\n                break;\n        }\n        return node;\n    }\n};","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"construct-binary-tree-from-string","has_notes":false,"flag_type":1}