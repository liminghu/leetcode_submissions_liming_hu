{"id":1507600700,"question_id":1679,"lang":"cpp","lang_name":"C++","time":"3 weeks, 3 days","timestamp":1736795191,"status":10,"status_display":"Accepted","runtime":"3 ms","url":"/submissions/detail/1507600700/","is_pending":"Not Pending","title":"Shortest Subarray to be Removed to Make Array Sorted","memory":"70.6 MB","code":"class Solution {\npublic:\n    int findLengthOfShortestSubarray(vector<int>& arr) {\n       //Given an integer array arr, remove a subarray (can be empty) from arr such that the remaining elements in arr are non-decreasing.\n       //Return the length of the shortest subarray to remove. \n       int n = arr.size();\n       int left = 0;\n       int right = n-1;\n       while(right>0 && arr[right]>=arr[right-1])\n            right--;\n        int ans = right;\n       while(left<right && (left==0 || arr[left-1]<=arr[left])) {\n            while(right<n && arr[left]>arr[right])\n                right++;\n            ans = min(ans, right-left-1);\n            left++;\n       }\n       return ans;\n    }\n};","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"shortest-subarray-to-be-removed-to-make-array-sorted","has_notes":false,"flag_type":1}