{"id":1351375564,"question_id":2884,"lang":"cpp","lang_name":"C++","time":"6Â months","timestamp":1723323557,"status":10,"status_display":"Accepted","runtime":"1846 ms","url":"/submissions/detail/1351375564/","is_pending":"Not Pending","title":"Length of the Longest Valid Substring","memory":"484.3 MB","code":"/*You are given a string word and an array of strings forbidden.\nA string is called valid if none of its substrings are present in forbidden.\nReturn the length of the longest valid substring of the string word.\nA substring is a contiguous sequence of characters in a string, possibly empty.\n*/\nusing LL = long long;\nclass Solution {\npublic:\n    unordered_set<LL> st;\n    unordered_map<int, vector<int>> mp;\n\n    int longestValidSubstring(string word, vector<string>& forbidden) {\n        /*  1 <= word.length <= 105\n            word consists only of lowercase English letters.\n            1 <= forbidden.length <= 105\n            1 <= forbidden[i].length <= 10\n            forbidden[i] consists only of lowercase English letters.\n            */\n\n            for(auto& s: forbidden) {\n                LL code = 0;\n                for(auto ch:s) {\n                    code = (code << 5) + (ch -'a')+1;\n                }\n                st.insert(code);                \n            }\n\n            for(int len = 1; len<=10; len++)\n                slide(word, len);\n\n            int w_sz = word.length();\n            int rightBound = w_sz;\n            int ret = 0;\n            for(int i=w_sz-1; i>=0; i--) {\n                if(mp.find(i) != mp.end()) {\n                    for(int j: mp[i])\n                        rightBound = min(rightBound, j);\n                }\n                ret = max(ret, rightBound-i);\n            }\n            return ret;\n    }\n\n    void slide(string word, int len) {\n        int n = word.length();\n        LL code = 0;\n        for(int i=0; i<n; i++) {\n            if(i>=len)\n                code = code & ((1ll << (5*(len-1)))-1);\n            code = (code << 5) + word[i]-'a'+1;\n\n            if(i>=len-1 && st.find(code)!=st.end())\n                mp[i-len+1].push_back(i);\n        }\n    }\n};","compare_resulttitle_slug":"length-of-the-longest-valid-substring","has_notes":false,"flag_type":1}