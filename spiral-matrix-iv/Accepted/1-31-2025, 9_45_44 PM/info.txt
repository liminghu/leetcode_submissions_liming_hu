{"id":1527077266,"question_id":2411,"lang":"cpp","lang_name":"C++","time":"6 days, 11 hours","timestamp":1738388744,"status":10,"status_display":"Accepted","runtime":"13 ms","url":"/submissions/detail/1527077266/","is_pending":"Not Pending","title":"Spiral Matrix IV","memory":"138.4 MB","code":"/**\n * Definition for singly-linked list.\n * struct ListNode {\n *     int val;\n *     ListNode *next;\n *     ListNode() : val(0), next(nullptr) {}\n *     ListNode(int x) : val(x), next(nullptr) {}\n *     ListNode(int x, ListNode *next) : val(x), next(next) {}\n * };\n */\nclass Solution {\npublic:\n    vector<vector<int>> spiralMatrix(int m, int n, ListNode* head) {//You are also given the head of a linked list of integers.\n        vector<vector<int>> res(m, vector<int>(n, -1));\n        int i = 0;\n        int j = 0;\n        int cur_d = 0;\n        vector<vector<int>> dirs = {{0, 1}, {1, 0}, {0, -1}, {-1, 0}}; \n        for(; head!=NULL; head=head->next) {\n            res[i][j] = head->val;\n            int newi= i+dirs[cur_d][0];\n            int newj = j+dirs[cur_d][1];\n            if(newi<0 || newj<0 || newi>=m || newj >=n || res[newi][newj]!=-1)\n                cur_d = (cur_d+1)%4;\n            i+= dirs[cur_d][0];\n            j+= dirs[cur_d][1];\n        };\n        return res;\n    }\n};","compare_result":"11111111111111111111111111111111111111111111111111","title_slug":"spiral-matrix-iv","has_notes":false,"flag_type":1}