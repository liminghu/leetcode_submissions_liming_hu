{"id":1438390488,"question_id":257,"lang":"cpp","lang_name":"C++","time":"3 months, 1 week","timestamp":1730309000,"status":10,"status_display":"Accepted","runtime":"2 ms","url":"/submissions/detail/1438390488/","is_pending":"Not Pending","title":"Binary Tree Paths","memory":"18.5 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    vector<string> binaryTreePaths(TreeNode* root) {\n        if(root==NULL)\n            return {};\n        if(root->left == NULL && root->right == NULL)\n            return {to_string(root->val)};\n        vector<string> leftPath;\n        if(root->left) \n            leftPath = binaryTreePaths(root->left);\n        vector<string> rets;\n        for(int i=0; i<leftPath.size(); i++) {\n            string path_i = leftPath[i];\n            string path = to_string(root->val) + \"->\";\n            path = path + path_i;\n            rets.push_back(path);\n        }\n        vector<string> rightPath;\n         if(root->right) \n            rightPath = binaryTreePaths(root->right);\n        for(int i=0; i<rightPath.size(); i++) {\n            string path_i = rightPath[i];\n            string path = to_string(root->val) + \"->\";\n            path = path + path_i;\n            rets.push_back(path);\n        };\n        return rets;\n    }\n};","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"binary-tree-paths","has_notes":false,"flag_type":1}