{"id":1511943764,"question_id":3698,"lang":"cpp","lang_name":"C++","time":"2 weeks, 6 days","timestamp":1737154186,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/1511943764/","is_pending":"Not Pending","title":"Minimum Operations to Make Subarray Elements Equal","memory":"N/A","code":"class Solution {\npublic:\n    long long minOperations(vector<int>& nums, int k) {\n        //Return the minimum number of operations required to ensure that at least one subarray of size k in nums has all elements equal.\n        int n = nums.size();\n        multiset<int> below_median; //multiset for sorted duplicates\n        multiset<int> above_median;\n        long long below_sum = 0;\n        long long above_sum = 0;\n        for(int i=0; i<k-1; i++) {\n            below_median.insert(nums[i]);\n            below_sum += nums[i];\n        }\n        int median_idx = k/2;\n        bool odd = (k%2==1);\n        long long min_cost = LLONG_MAX;\n        for(int l = 0; l<=n-k; l++) {\n            int r = l+k-1;\n            int r_num = nums[r];\n            below_median.insert(r_num);\n            below_sum += r_num;\n            while(below_median.size()>median_idx) {\n                auto it = prev(below_median.end());\n                int r_of_below = *it;\n                below_sum -= r_of_below;\n                below_median.erase(it);\n                above_median.insert(r_of_below);\n                above_sum += r_of_below;\n            }\n            long long local_cost = above_sum - below_sum;\n            if(odd)\n                local_cost -= *above_median.begin();\n            min_cost = min(min_cost, local_cost);\n            int removal_val = nums[l];\n            if(below_median.find(removal_val)!=below_median.end()) {\n                below_median.erase(below_median.find(removal_val));\n                below_sum -= removal_val;\n            } else {\n                above_median.erase(above_median.find(removal_val));\n                above_sum -= removal_val;                \n            }\n        }\n        return min_cost;\n\n    }\n};","compare_resulttitle_slug":"minimum-operations-to-make-subarray-elements-equal","has_notes":false,"flag_type":1}