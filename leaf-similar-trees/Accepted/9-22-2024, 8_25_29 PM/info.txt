{"id":1399157151,"question_id":904,"lang":"cpp","lang_name":"C++","time":"4 months, 2 weeks","timestamp":1727061929,"status":10,"status_display":"Accepted","runtime":"4 ms","url":"/submissions/detail/1399157151/","is_pending":"Not Pending","title":"Leaf-Similar Trees","memory":"17.1 MB","code":"/*\nConsider all the leaves of a binary tree, from left to right order, the values of those leaves form a leaf value sequence.\nFor example, in the given tree above, the leaf value sequence is (6, 7, 4, 9, 8).\nTwo binary trees are considered leaf-similar if their leaf value sequence is the same.\nReturn true if and only if the two given trees with head nodes root1 and root2 are leaf-similar.\nConstraints:\nThe number of nodes in each tree will be in the range [1, 200].\nBoth of the given trees will have values in the range [0, 200].\n*/\n/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    bool leafSimilar(TreeNode* root1, TreeNode* root2) {\n        vector<int> leaf1 = leaf(root1);\n        vector<int> leaf2 = leaf(root2);\n        if(leaf1 == leaf2)\n            return true;\n        else\n            return false;\n    }\n    vector<int> leaf(TreeNode* root) {\n        vector<int> ret;\n        if(root== NULL)\n            return ret;\n        if(root->left == NULL && root->right == NULL) {\n            ret.push_back(root->val);\n            return ret;\n        };\n        ret =  leaf(root->left);\n        vector<int> right =  leaf(root->right);\n        ret.insert( ret.end(), right.begin(), right.end() );\n        return ret;\n    }\n};","compare_result":"11111111111111111111111111111111111111111111111","title_slug":"leaf-similar-trees","has_notes":false,"flag_type":1}