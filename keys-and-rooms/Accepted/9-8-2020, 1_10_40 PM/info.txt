{"id":392950316,"question_id":871,"lang":"cpp","lang_name":"C++","time":"4 years, 5 months","timestamp":1599595840,"status":10,"status_display":"Accepted","runtime":"20 ms","url":"/submissions/detail/392950316/","is_pending":"Not Pending","title":"Keys and Rooms","memory":"11.2 MB","code":"class Solution {\npublic:\n    bool canVisitAllRooms(vector<vector<int>>& rooms) {\n        //directed graph + DFS\n\t\tunordered_set<int> visited;\n\t\tdfs(rooms, 0, visited);\n\t\treturn visited.size() == rooms.size();\n    };\nprivate:\n\tvoid dfs(const vector<vector<int>>& rooms,\n\t\t\tint cur, unordered_set<int>& visited) {\n\t\t  if(visited.count(cur)) return;\n\t\t  visited.insert(cur);\n\t\t  for ( int nxt : rooms[cur])\n\t\t\t  dfs(rooms, nxt, visited);\n\t\t}\n};","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111","title_slug":"keys-and-rooms","has_notes":false,"flag_type":1}