{"id":1476460110,"question_id":697,"lang":"cpp","lang_name":"C++","time":"1 month, 3 weeks","timestamp":1733949404,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/1476460110/","is_pending":"Not Pending","title":"Degree of an Array","memory":"N/A","code":"class Solution {\npublic:\n    int findShortestSubArray(vector<int>& nums) {\n        unordered_map<int, pair<pair<int,int>,int>> count;\n        int maxFreq = 0;\n        int left = 0;\n        int right = 0;\n        for(int i=0; i<nums.size(); i++) {\n            if(count.find(nums[i])==count.end()) {\n                count[nums[i]].first.first = i;\n                count[nums[i]].first.second = i;\n                count[nums[i]].second = 1;\n            } else {\n                count[nums[i]].first.second = i;\n                count[nums[i]].second++;\n            }\n        };\n\n        maxFreq = 0;\n        int ret = 0;\n        for(auto& item: count) {\n            pair<pair<int,int>,int> itemProp = item.second;\n            if( itemProp.second > maxFreq) {\n                maxFreq = itemProp.second;\n                ret = itemProp.first.second - itemProp.first.first+1;\n                //cout << maxFreq << endl;\n            }\n        }\n        return ret;\n    }\n};","compare_result":"11111111111111111111111111111111111111111111111111111101111111111111111111111111111111111","title_slug":"degree-of-an-array","has_notes":false,"flag_type":1}