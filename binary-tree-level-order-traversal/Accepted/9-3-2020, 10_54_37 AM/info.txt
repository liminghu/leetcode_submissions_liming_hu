{"id":390562639,"question_id":102,"lang":"cpp","lang_name":"C++","time":"4 years, 5 months","timestamp":1599155677,"status":10,"status_display":"Accepted","runtime":"4 ms","url":"/submissions/detail/390562639/","is_pending":"Not Pending","title":"Binary Tree Level Order Traversal","memory":"12.6 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    vector<vector<int>> levelOrder(TreeNode* root) {\n        vector<vector<int>> res;\n\t\tif(root == nullptr) return res;\n\t\tqueue<TreeNode*> q; //using only one queue / use a marker NULL\n\t\tq.push(root);\n\t\tq.push(NULL);\n\t\tvector<int> level_vec;\n\t\twhile( !q.empty() ) {\n\t\t\tTreeNode* t = q.front();\n\t\t\tq.pop();\n\t\t\tif(t==NULL)  { // to the end of one level.\n\t\t\t\tres.push_back(level_vec);\n\t\t\t\tlevel_vec.resize(0);\n\t\t\t\tif(q.size()>0) {\n\t\t\t\t\tq.push(NULL);\n\t\t\t\t};\n            } else {\n\t\t\t\tlevel_vec.push_back(t->val);\n\t\t\t\tif(t->left) q.push(t->left); //Insert element\n\t\t\t\tif(t->right) q.push(t->right);\n\t\t\t}\n\t\t}\n\t\treturn res;\n    }\n};","compare_result":"1111111111111111111111111111111111","title_slug":"binary-tree-level-order-traversal","has_notes":false,"flag_type":1}