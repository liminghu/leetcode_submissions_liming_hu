{"id":1285431865,"question_id":102,"lang":"cpp","lang_name":"C++","time":"8Â months","timestamp":1718155530,"status":10,"status_display":"Accepted","runtime":"3 ms","url":"/submissions/detail/1285431865/","is_pending":"Not Pending","title":"Binary Tree Level Order Traversal","memory":"14.7 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    vector<vector<int>> levelOrder(TreeNode* root) {\n        //queue\n        queue<TreeNode*> q_level;\n        vector<vector<int>> ans= {};\n        if(root == nullptr) \n            return ans;\n        vector<int> level_result;\n        q_level.push(root);\n        while(!q_level.empty()) {\n            int sz = q_level.size();\n            while(sz--) {\n                TreeNode* cur = q_level.front(); q_level.pop();\n                level_result.push_back(cur->val);\n                if(cur->left) q_level.push(cur->left);\n                if(cur->right) q_level.push(cur->right);\n            }\n            ans.push_back(level_result);\n            level_result.clear();\n\n        }\n        return ans;\n    }\n};","compare_result":"11111111111111111111111111111111111","title_slug":"binary-tree-level-order-traversal","has_notes":false,"flag_type":1}