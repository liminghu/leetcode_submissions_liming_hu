{"id":1440119289,"question_id":272,"lang":"cpp","lang_name":"C++","time":"3 months, 1 week","timestamp":1730484089,"status":10,"status_display":"Accepted","runtime":"0 ms","url":"/submissions/detail/1440119289/","is_pending":"Not Pending","title":"Closest Binary Search Tree Value II","memory":"20.2 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    vector<int> closestKValues(TreeNode* root, double target, int k) {\n        vector<int> res;\n        helper(res, root, target, k);\n        return res;\n    }\n    void helper(vector<int>& res, TreeNode* root, double target, int k) {\n        if(root==NULL)\n            return;\n        helper(res, root->left, target, k);\n        if(res.size() == k) {\n            if( abs(target - root->val) < abs(target-res[0]) ) {\n                res.erase(res.begin());\n            } else\n                return;\n        }\n        res.push_back(root->val);\n        helper(res, root->right, target, k);\n    }\n};","compare_result":"11111111111111111111111111111111111111111111111111111111111111111","title_slug":"closest-binary-search-tree-value-ii","has_notes":false,"flag_type":1}