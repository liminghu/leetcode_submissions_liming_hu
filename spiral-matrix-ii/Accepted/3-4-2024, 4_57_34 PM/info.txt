{"id":1194120695,"question_id":59,"lang":"cpp","lang_name":"C++","time":"11 months, 1 week","timestamp":1709600254,"status":10,"status_display":"Accepted","runtime":"0 ms","url":"/submissions/detail/1194120695/","is_pending":"Not Pending","title":"Spiral Matrix II","memory":"7.8 MB","code":"class Solution {\npublic:\n    vector<vector<int>> generateMatrix(int n) {\n        vector<vector<int>> result(n, vector<int>(n));\n        int cnt = 1;\n        for (int layer = 0; layer <(n+1)/2; layer++) {  //layer start from 0\n                //direction 1: same row, column: left to right\n                //row: layer, col: layer to n-layer-1\n                for(int col_ptr=layer; col_ptr <= n - layer - 1; col_ptr++) {\n                    result[layer][col_ptr] = cnt++;\n                }\n\n                //direction 2: row: top to down, same col\n                //row:layer+1 to n-layer-1     col: n-layer-1 \n                for(int row_ptr=layer+1; row_ptr <= n - layer-1; row_ptr++) {\n                    result[row_ptr][n-layer-1] = cnt++;\n                }\n\n                //direction 3: same row, column: right to left\n                //row: n-layer-1;    col: n-layer-2 to layer;\n                for(int col_ptr = n - layer - 2; col_ptr >= layer; col_ptr--) {\n                    result[n-layer-1][col_ptr] = cnt++;\n                }\n\n                //direction 4: row: bottom to top,  same column\n                //row: n-layer-2 to layer+1        col:layer \n                for(int row_ptr=n-layer-2; row_ptr>=layer+1; row_ptr--) {\n                    result[row_ptr][layer] = cnt++;\n                }\n\n        }\n        return result;\n    }\n};","compare_result":"11111111111111111111","title_slug":"spiral-matrix-ii","has_notes":false,"flag_type":1}