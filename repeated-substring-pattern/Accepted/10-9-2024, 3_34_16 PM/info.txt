{"id":1417474500,"question_id":459,"lang":"cpp","lang_name":"C++","time":"4Â months","timestamp":1728513256,"status":10,"status_display":"Accepted","runtime":"32 ms","url":"/submissions/detail/1417474500/","is_pending":"Not Pending","title":"Repeated Substring Pattern","memory":"46.9 MB","code":"/*\nGiven a string s, check if it can be constructed by taking a substring of it and appending multiple copies of the substring together.\nExample 1:\nInput: s = \"abab\"\nOutput: true\nExplanation: It is the substring \"ab\" twice.\n\nExample 2:\nInput: s = \"aba\"\nOutput: false\n\nExample 3:\nInput: s = \"abcabcabcabc\"\nOutput: true\nExplanation: It is the substring \"abc\" four times or the substring \"abcabc\" twice.\n \n\nConstraints:\n1 <= s.length <= 104\ns consists of lowercase English letters.\n\n*/\nclass Solution {\npublic:\n    bool repeatedSubstringPattern(string s) {\n        int len = s.length();\n        if(len ==1 )\n            return false;\n        for(int i=len/2; i>=1; i--) { //length of the substring\n            string buildStr;\n            if(len % i == 0) {\n                int grpNum = len / i;\n                string sub = s.substr(0,i);\n                for(int j=0; j<grpNum; j++)\n                    buildStr += sub;\n            }\n            if( s == buildStr )\n                return true;\n        }\n        return false;\n    }\n};","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"repeated-substring-pattern","has_notes":false,"flag_type":1}