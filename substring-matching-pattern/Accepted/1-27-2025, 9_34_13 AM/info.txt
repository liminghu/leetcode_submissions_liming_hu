{"id":1522396849,"question_id":3684,"lang":"cpp","lang_name":"C++","time":"1 week, 3 days","timestamp":1737999253,"status":10,"status_display":"Accepted","runtime":"7 ms","url":"/submissions/detail/1522396849/","is_pending":"Not Pending","title":"Substring Matching Pattern","memory":"9.1 MB","code":"class Solution {\npublic:\n    bool hasMatch(string s, string p) {\n        int star_pos = p.find('*');\n        string first=\"\";\n        if(star_pos != 0)\n            first = p.substr(0, star_pos);\n        cout << \"first: \"<< first << endl;\n        string second = \"\";\n        if(star_pos != s.length()-1)\n            second=p.substr(star_pos+1);\n        cout << \"second: \"<< second << endl;        \n        bool firstMatch = first.length()>0 && s.find(first)!=string::npos || first.length()==0;\n        bool secondMatch = false;\n        int start = s.find(first);\n        if(first.length()>0 && start!=string::npos)\n            start += first.length();\n        else\n            start = 0;\n        secondMatch = second.length()>0 && s.find(second, start)!=string::npos || second.length()==0;\n        cout << \"second match: \"<< secondMatch << endl;\n        return firstMatch && secondMatch;\n    }\n};","compare_resulttitle_slug":"substring-matching-pattern","has_notes":false,"flag_type":1}