{"id":1402364042,"question_id":135,"lang":"cpp","lang_name":"C++","time":"4 months, 2 weeks","timestamp":1727307424,"status":10,"status_display":"Accepted","runtime":"12 ms","url":"/submissions/detail/1402364042/","is_pending":"Not Pending","title":"Candy","memory":"20.4 MB","code":"/*\nThere are n children standing in a line. Each child is assigned a rating value given in the integer array ratings.\nYou are giving candies to these children subjected to the following requirements:\nEach child must have at least one candy.\nChildren with a higher rating get more candies than their neighbors.\nReturn the minimum number of candies you need to have to distribute the candies to the children.\nn == ratings.length\n1 <= n <= 2 * 104\n0 <= ratings[i] <= 2 * 104\n*/\nclass Solution {\npublic:\n    int candy(vector<int>& ratings) {\n        int n = ratings.size();\n        vector<int> assigned(n,1);\n        for(int i=1; i<n; i++) {\n            if(ratings[i] > ratings[i-1]) //look left\n                assigned[i] = max(assigned[i], assigned[i-1]+1);\n        }\n        for(int i=n-2; i>=0; i--) {\n            if(ratings[i] > ratings[i+1]) //look right.\n                assigned[i] = max(assigned[i], assigned[i+1]+1);\n        };\n        int sum = accumulate(assigned.begin(), assigned.end(), 0);\n        return sum;\n    }\n};","compare_result":"111111111111111111111111111111111111111111111111","title_slug":"candy","has_notes":false,"flag_type":1}