{"id":1477211093,"question_id":1484,"lang":"cpp","lang_name":"C++","time":"1Â month, 3Â weeks","timestamp":1734025506,"status":10,"status_display":"Accepted","runtime":"0 ms","url":"/submissions/detail/1477211093/","is_pending":"Not Pending","title":"Linked List in Binary Tree","memory":"32.3 MB","code":"/**\n * Definition for singly-linked list.\n * struct ListNode {\n *     int val;\n *     ListNode *next;\n *     ListNode() : val(0), next(nullptr) {}\n *     ListNode(int x) : val(x), next(nullptr) {}\n *     ListNode(int x, ListNode *next) : val(x), next(next) {}\n * };\n */\n/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    bool isSubPath(ListNode* head, TreeNode* root) {\n        if(head==NULL)\n            return true;\n        if(root==NULL)\n            return false;\n\n        return isSubPath(head, root->left) || isSubPath(head, root->right) || dfs(head, root);\n    }\n    bool dfs(ListNode* head, TreeNode* root) {\n        if(head==NULL)\n            return true;\n        if(root==NULL)\n            return false;\n        return (root->val == head->val) && ( dfs(head->next, root->left)  || dfs(head->next, root->right) );      \n    }\n};","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111","title_slug":"linked-list-in-binary-tree","has_notes":false,"flag_type":1}