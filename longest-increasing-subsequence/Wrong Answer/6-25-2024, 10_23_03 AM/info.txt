{"id":1300078443,"question_id":300,"lang":"cpp","lang_name":"C++","time":"7 months, 2 weeks","timestamp":1719336183,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/1300078443/","is_pending":"Not Pending","title":"Longest Increasing Subsequence","memory":"N/A","code":"class Solution {\npublic:\n//Given an integer array nums, return the length of the longest strictly increasing subsequence.\n    int lengthOfLIS(vector<int>& nums) {\n        int sz = nums.size();\n        //dp[i] => s[1:i]里以s[i]结尾的、最长的递增子序列的长度\n        vector<int> dp(sz,0);\n        dp[0] = 1;\n        if(sz==1)\n            return 1;\n\n        int ret = INT_MIN;\n        for(int i=1; i<sz; i++) {\n            for(int j=0; j<i; j++) {\n                if(nums[j]< nums[i])\n                    dp[i] = max(dp[i], dp[j]+1);\n                else\n                    dp[i] = max(dp[i], dp[j]);\n            }\n            ret = max(ret, dp[i]);\n        }\n        return ret;\n    }\n};","compare_result":"1111111111111010010011111010001010000000000000000000001","title_slug":"longest-increasing-subsequence","has_notes":false,"flag_type":1}