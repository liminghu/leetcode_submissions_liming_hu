{"id":1439287341,"question_id":270,"lang":"cpp","lang_name":"C++","time":"3 months, 1 week","timestamp":1730401343,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/1439287341/","is_pending":"Not Pending","title":"Closest Binary Search Tree Value","memory":"N/A","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    int closestValue(TreeNode* root, double target) {\n        int cur = INT_MAX;\n        closestValue(root, target, cur);\n        return cur;\n    }\n    int closestValue(TreeNode* root, double target, int& cur) {\n        if(root == NULL) \n            return cur;\n        double diff = abs(root->val - target);\n        if(root->left == NULL && root->right == NULL) {\n            cout << \"diff: \" << diff << endl;\n            cout << \"cur: \" << cur << endl;\n            if(diff < cur) {\n                cur = root->val;\n                return cur;\n            } \n        }\n        if(target >= root->val) {\n            if (diff < closestValue(root->right, target, cur) ) {\n                cur = root->val;\n            };\n        } else {\n            if (diff < closestValue(root->left, target, cur) ) {\n                cur = root->val;\n            };           \n        };\n        return cur;\n    } \n};","compare_result":"11101111000011110000000001000000111011000000000110001110010001001","title_slug":"closest-binary-search-tree-value","has_notes":false,"flag_type":1}