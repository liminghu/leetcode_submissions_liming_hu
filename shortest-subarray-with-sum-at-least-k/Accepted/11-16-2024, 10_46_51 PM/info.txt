{"id":1455047305,"question_id":892,"lang":"cpp","lang_name":"C++","time":"2 months, 3 weeks","timestamp":1731826011,"status":10,"status_display":"Accepted","runtime":"36 ms","url":"/submissions/detail/1455047305/","is_pending":"Not Pending","title":"Shortest Subarray with Sum at Least K","memory":"107.7 MB","code":"class Solution {\npublic:\n    int shortestSubarray(vector<int>& nums, int k) {\n        int n = nums.size();\n        vector<long long> preSum(n+1, 0);\n        for(int i=1; i<=n; i++)\n            preSum[i] = preSum[i-1]+nums[i-1];\n        deque<int> dq;\n        int len = INT_MAX;\n        for(int i=0; i<=n; i++) {\n            while( !dq.empty() && preSum[dq.back()] >= preSum[i])\n                dq.pop_back();\n            while( !dq.empty() && preSum[i]- preSum[dq.front()] >= k) {\n                len = min(len,  i - dq.front());\n                dq.pop_front();\n            }\n            dq.push_back(i);\n        }\n        return len==INT_MAX?-1:len;\n    }\n};","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"shortest-subarray-with-sum-at-least-k","has_notes":false,"flag_type":1}