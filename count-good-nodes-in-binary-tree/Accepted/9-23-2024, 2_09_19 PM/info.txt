{"id":1400053297,"question_id":1544,"lang":"cpp","lang_name":"C++","time":"4 months, 2 weeks","timestamp":1727125759,"status":10,"status_display":"Accepted","runtime":"94 ms","url":"/submissions/detail/1400053297/","is_pending":"Not Pending","title":"Count Good Nodes in Binary Tree","memory":"85 MB","code":"/*\nGiven a binary tree root, a node X in the tree is named good if \nin the path from root to X there are no nodes with a value greater than X.\nReturn the number of good nodes in the binary tree.\nThe number of nodes in the binary tree is in the range [1, 10^5].\nEach node's value is between [-10^4, 10^4].\n*/\n/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    int goodNodes(TreeNode* root) {\n        if(root == NULL)\n            return 0;\n        if(root && root->left == NULL && root->right == NULL)\n            return 1;\n        return helper(root, root->val);\n    }\n    int helper(TreeNode* root, int minVal) {\n        if(root == NULL)\n            return 0;\n\n        int ret = 0;\n        TreeNode* left = root->left;\n        TreeNode* right = root->right;\n        if(root->val >= minVal)\n            ret++;\n            if(left) \n                ret += helper(left, max(left->val, minVal));\n            if(right) \n                ret += helper(right, max(right->val, minVal));\n        return ret; \n    }\n};","compare_result":"111111111111111111111111111111111111111111111111111111111111111","title_slug":"count-good-nodes-in-binary-tree","has_notes":false,"flag_type":1}