{"id":1452984528,"question_id":3151,"lang":"cpp","lang_name":"C++","time":"2 months, 3 weeks","timestamp":1731621004,"status":10,"status_display":"Accepted","runtime":"76 ms","url":"/submissions/detail/1452984528/","is_pending":"Not Pending","title":"Minimum Processing Time","memory":"104.8 MB","code":"class Solution {\npublic:\n    int minProcessingTime(vector<int>& processorTime, vector<int>& tasks) {\n        //The number of tasks to be executed is four times the number of processors\n        int n = tasks.size();   //the number of processors: n/4\n        //You are given an array processorTime representing the time each processor becomes available\n        int np = processorTime.size();   //n = 4*np.\n        sort(processorTime.begin(), processorTime.end()); //smaller first.\n        sort(tasks.rbegin(), tasks.rend()); //bigger first.\n        int j = 0;  //first task: from bigger task.\n        int time = 0;\n        for(int i=0; i<n; i++) { //for each processor\n            int pTime = processorTime[i/4];\n            int timeTaken = pTime + tasks[i];\n            time = max(time, timeTaken);\n        }\n        return time;\n    }\n};","compare_resulttitle_slug":"minimum-processing-time","has_notes":false,"flag_type":1}