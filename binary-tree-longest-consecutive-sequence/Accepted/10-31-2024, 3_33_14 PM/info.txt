{"id":1439395402,"question_id":298,"lang":"cpp","lang_name":"C++","time":"3 months, 1 week","timestamp":1730413994,"status":10,"status_display":"Accepted","runtime":"0 ms","url":"/submissions/detail/1439395402/","is_pending":"Not Pending","title":"Binary Tree Longest Consecutive Sequence","memory":"31.2 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\nprivate:\n    int res = 1;\npublic:\n    int longestConsecutive(TreeNode* root) { //Given the root of a binary tree, return the length of the longest consecutive sequence path.\n                                             //A consecutive sequence path is a path where the values increase by one along the path.\n        if(root == NULL)\n            return 0;\n        helper(root, root->val, 0);\n        return res;\n    }\n    void helper(TreeNode* root, int curr, int count) {\n        if(root==NULL)\n            return;\n        if(root->val == curr) {\n            count++;\n            res = max(res, count);\n            helper(root->left, curr+1, count);\n            helper(root->right, curr+1, count);\n        } else {\n            helper(root->left, root->val+1, 1);\n            helper(root->right, root->val+1, 1);            \n        }\n    }\n};","compare_result":"111111111111111111111111111111111111111111111111111111","title_slug":"binary-tree-longest-consecutive-sequence","has_notes":false,"flag_type":1}