{"id":1300310788,"question_id":1170,"lang":"cpp","lang_name":"C++","time":"7 months, 2 weeks","timestamp":1719357118,"status":10,"status_display":"Accepted","runtime":"21 ms","url":"/submissions/detail/1300310788/","is_pending":"Not Pending","title":"Shortest Common Supersequence ","memory":"25.6 MB","code":"class Solution {\npublic:\n/*\nGiven two strings str1 and str2, return the shortest string that has both str1 and str2 as subsequences. \nIf there are multiple valid strings, return any of them.\nA string s is a subsequence of string t if deleting some number of characters from t (possibly 0) results in the string s.\n*/\n    string shortestCommonSupersequence(string str1, string str2) {//1 <= str1.length, str2.length <= 1000; str1 and str2 consist of lowercase English letters.\n        int sz1= str1.length();\n        int sz2 = str2.length();\n        string res = \"\";\n\n        vector<vector<int>> dp(sz1+1, vector<int>(sz2+1, 0)); //compute LCS length \n        dp[0][0] = 0;\n        dp[0][1] = 0;\n        dp[1][0] = 0;\n        for(int i=0; i<sz1; i++) {\n            for(int j=0; j<sz2; j++) {\n                if(str1[i] == str2[j]) \n                    dp[i+1][j+1] = dp[i][j]+1;\n                else {\n                    dp[i+1][j+1] = max(dp[i][j+1], dp[i+1][j]);\n                }\n            }\n        }\n       \n       int i=sz1, j=sz2;\n       while(i>0 && j>0) { //print LCS\n            if(str1[i-1]==str2[j-1]) {\n                res.push_back(str1[i-1]);\n                i--;\n                j--;\n            }else {\n                if(dp[i-1][j] > dp[i][j-1]) {\n                    res.push_back(str1[i-1]);\n                    i--;\n                }else {\n                    res.push_back(str2[j-1]);\n                    j--;\n                }\n            }\n       }\n\n        while(i>0) {\n            res.push_back(str1[i-1]);\n            i--;\n        }\n        while(j>0) {\n            res.push_back(str2[j-1]);\n            j--;\n        }\n\n        reverse(res.begin(), res.end());\n        return res;\n    \n    }\n};","compare_result":"1111111111111111111111111111111111111111111111111","title_slug":"shortest-common-supersequence","has_notes":false,"flag_type":1}