{"id":1397864387,"question_id":1798,"lang":"cpp","lang_name":"C++","time":"4 months, 2 weeks","timestamp":1726959066,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/1397864387/","is_pending":"Not Pending","title":"Max Number of K-Sum Pairs","memory":"N/A","code":"/*\nYou are given an integer array nums and an integer k.\nIn one operation, you can pick two numbers from the array whose sum equals k and remove them from the array.\nReturn the maximum number of operations you can perform on the array.\n1 <= nums.length <= 105\n1 <= nums[i] <= 109\n1 <= k <= 109\n*/\nclass Solution {\npublic:\n    int maxOperations(vector<int>& nums, int k) {\n        int ret = 0;\n        int sz = nums.size();\n        if( sz <= 1 )\n            return 0;\n        unordered_map<int,int> mp;\n        for(int i=0; i<sz; i++) {\n            mp[ nums[i] ]++;\n        };\n        for(int i=0; i<sz; i++) {\n            if(mp.find(k-nums[i]) != mp.end()) {\n                if(nums[i] != k-nums[i] ) {\n                    mp[nums[i]]--;\n                    if(mp[nums[i]] == 0)\n                        mp.erase(nums[i]);\n                    mp[k-nums[i]]--;\n                    if(mp[k-nums[i]] == 0)\n                        mp.erase(k-nums[i]);\n                    ret++;\n                } else {\n                    if(mp[nums[i]]>=2) {\n                        mp[nums[i]] -= 2;\n                        if(mp[nums[i]] == 0)\n                            mp.erase(nums[i]);\n                        ret++;\n                    }\n                }\n            }\n        };\n        return ret;        \n    }\n};","compare_result":"111111111110100100100000000000010001001000000011111","title_slug":"max-number-of-k-sum-pairs","has_notes":false,"flag_type":1}