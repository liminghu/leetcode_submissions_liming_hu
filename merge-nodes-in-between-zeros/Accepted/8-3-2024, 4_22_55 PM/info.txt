{"id":1343606190,"question_id":2299,"lang":"cpp","lang_name":"C++","time":"6 months, 1 week","timestamp":1722727375,"status":10,"status_display":"Accepted","runtime":"452 ms","url":"/submissions/detail/1343606190/","is_pending":"Not Pending","title":"Merge Nodes in Between Zeros","memory":"257.9 MB","code":"/*You are given the head of a linked list, which contains a series of integers separated by 0's. \nThe beginning and end of the linked list will have Node.val == 0.\nFor every two consecutive 0's, merge all the nodes lying in between them into a single node whose \nvalue is the sum of all the merged nodes. The modified list should not contain any 0's.\n\nReturn the head of the modified linked list.\n*/\n/**\n * Definition for singly-linked list.\n * struct ListNode {\n *     int val;\n *     ListNode *next;\n *     ListNode() : val(0), next(nullptr) {}\n *     ListNode(int x) : val(x), next(nullptr) {}\n *     ListNode(int x, ListNode *next) : val(x), next(next) {}\n * };\n */\nclass Solution {\npublic:\n    ListNode* mergeNodes(ListNode* head) {\n        /*\n            The number of nodes in the list is in the range [3, 2 * 105].\n            0 <= Node.val <= 1000\n            There are no two consecutive nodes with Node.val == 0.\n            The beginning and end of the linked list have Node.val == 0.\n        */\n        ListNode* prev;\n        ListNode* cur;\n        ListNode* next;\n        prev = head;\n        cur = prev->next;\n        next = cur->next;\n       \n        while( next!= nullptr ) {\n            prev->val = cur->val;\n            while( next!=nullptr && next->val != 0 ) {\n                prev->val = prev->val + next->val;\n                cur = cur->next;\n                next = cur->next;\n                prev->next = cur;\n            }\n            if(next->val == 0 && next->next == nullptr) {\n                prev->next = nullptr;\n                break;\n            };\n\n            prev->next = next;\n            prev = next;\n            cur = prev->next;\n            next = cur->next;\n        }\n\n        return head;\n\n    }\n};","compare_result":"111111111111111111111111111111111111111","title_slug":"merge-nodes-in-between-zeros","has_notes":false,"flag_type":1}