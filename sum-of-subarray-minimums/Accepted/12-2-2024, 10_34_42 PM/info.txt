{"id":1468995517,"question_id":943,"lang":"cpp","lang_name":"C++","time":"2Â months","timestamp":1733207682,"status":10,"status_display":"Accepted","runtime":"11 ms","url":"/submissions/detail/1468995517/","is_pending":"Not Pending","title":"Sum of Subarray Minimums","memory":"43.6 MB","code":"class Solution {\npublic:\n    int sumSubarrayMins(vector<int>& arr) {\n       int mod = 1e9+7;\n       stack<int> st;\n       long sumOfMin = 0;\n       for(int i=0; i<=arr.size(); i++) {\n            while(!st.empty() && (i==arr.size() || arr[st.top()] >= arr[i])) {\n                int mid = st.top();\n                st.pop();\n                int left = st.empty()? -1: st.top();\n                int right = i;\n                long long count = (mid-left)*(right-mid)%mod;\n                sumOfMin += (count*arr[mid])%mod;\n                sumOfMin %= mod;\n            }\n            st.push(i);\n       } \n       return (int)sumOfMin;\n    }\n};","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"sum-of-subarray-minimums","has_notes":false,"flag_type":1}