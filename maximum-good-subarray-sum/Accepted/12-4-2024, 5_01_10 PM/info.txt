{"id":1470595515,"question_id":3265,"lang":"cpp","lang_name":"C++","time":"2Â months","timestamp":1733360470,"status":10,"status_display":"Accepted","runtime":"143 ms","url":"/submissions/detail/1470595515/","is_pending":"Not Pending","title":"Maximum Good Subarray Sum","memory":"141.7 MB","code":"class Solution {\npublic:\n    long long maximumSubarraySum(vector<int>& nums, int k) {\n        int n = nums.size();\n        long long maxSum = LONG_MIN;\n        unordered_map<int, int> mp;\n        vector<long long> prefixSum(n);\n        prefixSum[0] = nums[0];\n        for(int i=1; i<n; i++) \n            prefixSum[i] = prefixSum[i-1]+nums[i];\n        mp[nums[0]] = 0;\n        for(int i=1; i<n; i++) {\n            long long target1 = nums[i] + k;\n            long long target2 = nums[i] - k;\n            if(mp.find(target1)!=mp.end()) {\n                long long curSum = prefixSum[i]-prefixSum[ mp[target1] ] + nums[ mp[target1] ];//mp[target1] < i\n                maxSum = max(maxSum, curSum);\n            }\n            if(mp.find(target2)!=mp.end()) {\n                long long curSum = prefixSum[i]-prefixSum[ mp[target2] ] + nums[ mp[target2] ];\n                maxSum = max(maxSum, curSum);\n            } \n            if(mp.find(nums[i])!=mp.end()) {\n                if(prefixSum[i] >= prefixSum[mp[nums[i]]]) //too big, no need to update.\n                    continue;\n            }            \n            mp[nums[i]] = i;\n        }\n        if(maxSum==LONG_MIN)    \n            return 0;\n        return maxSum;\n    }\n};","compare_resulttitle_slug":"maximum-good-subarray-sum","has_notes":false,"flag_type":1}