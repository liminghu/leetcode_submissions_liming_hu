{"id":1275871669,"question_id":104,"lang":"cpp","lang_name":"C++","time":"8 months, 1 week","timestamp":1717384272,"status":10,"status_display":"Accepted","runtime":"11 ms","url":"/submissions/detail/1275871669/","is_pending":"Not Pending","title":"Maximum Depth of Binary Tree","memory":"17.4 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    int maxDepth(TreeNode* root) {   //dfs\n        int depth = 0;\n        if(root==NULL)\n            return depth;\n        if(root->left == NULL)\n            return maxDepth(root->right)+1;\n        if(root->right == NULL)\n            return maxDepth(root->left)+1;\n        \n        int d_left = maxDepth(root->left);\n        int d_right = maxDepth(root->right);\n\n        if(d_left>d_right)\n            return d_left+1;\n        else\n            return d_right+1;\n\n        \n    }\n};","compare_result":"111111111111111111111111111111111111111","title_slug":"maximum-depth-of-binary-tree","has_notes":false,"flag_type":1}