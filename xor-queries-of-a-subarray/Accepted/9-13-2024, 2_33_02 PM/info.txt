{"id":1389196297,"question_id":1435,"lang":"cpp","lang_name":"C++","time":"4 months, 3 weeks","timestamp":1726263182,"status":10,"status_display":"Accepted","runtime":"61 ms","url":"/submissions/detail/1389196297/","is_pending":"Not Pending","title":"XOR Queries of a Subarray","memory":"42.1 MB","code":"/*XOR Queries of a Subarray\nYou are given an array arr of positive integers. You are also given the array queries where queries[i] = [lefti, righti].\nFor each query i compute the XOR of elements from lefti to righti (that is, arr[lefti] XOR arr[lefti + 1] XOR ... XOR arr[righti] ).\nReturn an array answer where answer[i] is the answer to the ith query.\n1 <= arr.length, queries.length <= 3 * 104\n1 <= arr[i] <= 109\nqueries[i].length == 2\n0 <= lefti <= righti < arr.length\n*/\nclass Solution {\npublic:\n    vector<int> xorQueries(vector<int>& arr, vector<vector<int>>& queries) {\n        // a ^ a = 0\n        // a ^ 0 = a\n        // a ^ b = c -> a = c ^ b\n        // a ^ b ^ c = a ^ (b ^ c)\n        vector<int> prefXOR;\n        prefXOR.push_back(0);\n        for(int i=0; i<arr.size(); i++) {\n            prefXOR.push_back(prefXOR[i] ^ arr[i]);\n        };\n        \n        vector<int> ans(queries.size(), 0);\n        for(int i = 0; i < queries.size(); i++ ) {\n            int l = queries[i][0];\n            int r = queries[i][1];\n            //cout << \"left \" << l << \" right \" << r << endl;\n            //cout << \"prefXOR[l] \"<< prefXOR[l] << endl;\n            //cout << \"prefXOR[r+1] \"<< prefXOR[r+1] << endl;\n            ans[i] = prefXOR[l]  ^ prefXOR[r+1];\n        }\n        return ans;\n    }\n};","compare_result":"111111111111111111111111111111111111111111","title_slug":"xor-queries-of-a-subarray","has_notes":false,"flag_type":1}