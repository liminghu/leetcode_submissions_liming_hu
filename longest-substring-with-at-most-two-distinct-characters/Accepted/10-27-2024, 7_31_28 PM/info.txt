{"id":1435754977,"question_id":159,"lang":"cpp","lang_name":"C++","time":"3 months, 1 week","timestamp":1730082688,"status":10,"status_display":"Accepted","runtime":"1 ms","url":"/submissions/detail/1435754977/","is_pending":"Not Pending","title":"Longest Substring with At Most Two Distinct Characters","memory":"11.4 MB","code":"class Solution {\npublic:\n    int lengthOfLongestSubstringTwoDistinct(string s) {\n        if(s.empty())\n            return 0;\n        int dict[256];\n        fill_n(dict, 256, 0);\n        int start = 0, len = 1, count = 0;\n        for(int i=0; i<s.length(); i++) {\n            dict[s[i]]++;\n            if(dict[s[i]] == 1) {\n                count++;\n                while(count > 2) {\n                    dict[s[start]]--;\n                    if(dict[s[start]]==0)\n                        count--;\n                    start++;\n                }\n            }\n            if(i-start+1>len)\n                len = i-start+1;\n        }\n        return len;\n/*        int left = 0;\n        int right = 0;\n        int n = s.length();\n        int ret = 1;\n        unordered_map<char, int> mp;\n        mp[ s[left] ]++;\n        while(left< n && right < n) {\n            while( mp.size() <= 2 && (right+1) < n) {\n                right++;\n                mp[ s[right] ]++;\n            }\n            if(mp.size() == 3) {\n                mp.erase(s[right]);\n                right--;\n            };\n            ret = max(ret, right-left+1);\n            mp[s[left]]--;\n            if(mp[s[left]] == 0)\n                mp.erase(s[left]);\n            left++;\n        }\n        return ret;*/\n    }\n};","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"longest-substring-with-at-most-two-distinct-characters","has_notes":false,"flag_type":1}