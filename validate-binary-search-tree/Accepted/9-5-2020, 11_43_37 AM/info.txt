{"id":391455019,"question_id":98,"lang":"cpp","lang_name":"C++","time":"4 years, 5 months","timestamp":1599331417,"status":10,"status_display":"Accepted","runtime":"20 ms","url":"/submissions/detail/391455019/","is_pending":"Not Pending","title":"Validate Binary Search Tree","memory":"21.7 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n\tbool isValidBST(TreeNode* root) {\n\t\treturn isValidBST(root, LLONG_MIN, LLONG_MAX);\n\t}\nprivate:\n\tbool isValidBST(TreeNode*  root, long min_val, long max_val) {\n\t\tif(root==nullptr) return true;\n\t\tif(root->val <= min_val || root->val >= max_val) \n\t\t\treturn false;\n\t\treturn isValidBST(root->left, min_val, root->val)\n\t\t\t&& isValidBST(root->right, root->val, max_val);\n\t}\t\t\n};","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"validate-binary-search-tree","has_notes":false,"flag_type":1}