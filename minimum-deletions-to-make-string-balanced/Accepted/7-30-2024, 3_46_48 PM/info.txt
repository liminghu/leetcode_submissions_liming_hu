{"id":1338962768,"question_id":1756,"lang":"cpp","lang_name":"C++","time":"6 months, 1 week","timestamp":1722379608,"status":10,"status_display":"Accepted","runtime":"115 ms","url":"/submissions/detail/1338962768/","is_pending":"Not Pending","title":"Minimum Deletions to Make String Balanced","memory":"67.9 MB","code":"/*\nYou are given a string s consisting only of characters 'a' and 'b'​​​​.\nYou can delete any number of characters in s to make s balanced. s is \nbalanced if there is no pair of indices (i,j) \nsuch that i < j and s[i] = 'b' and s[j]= 'a'.\nReturn the minimum number of deletions needed to make s balanced.\n*/\nclass Solution {\npublic:\n    int minimumDeletions(string s) {\n        /*\n            1 <= s.length <= 105\n            s[i] is 'a' or 'b'​​. \n        */\n        int sz = s.length();\n        \n        vector<int>  num_a_after(sz, 0);  //num of 'a' after i;  num_b_before[sz-1] = 0;\n        vector<int>  num_b_before(sz, 0); //num of 'b' before i; num_b_before[0] = 0;\n        vector<int> min_del(sz, 0);\n\n        int b_count = 0;\n        for(int i=0; i<sz; i++) { //num of 'b' before i\n            num_b_before[i] = b_count;\n            if(s[i] == 'b') \n                b_count++;\n        }\n\n        int a_count = 0;\n        for(int i=sz-1; i>=0; i--) { //num of 'a' after i\n            num_a_after[i] = a_count;\n            if(s[i] == 'a') \n                a_count++;\n        }\n\n        int min_deletions = sz;\n        for(int i=0; i<sz; i++) { //num_a_after num_b_before\n            min_deletions = min(min_deletions, num_a_after[i]+num_b_before[i]);\n        };\n\n        return min_deletions;\n\n    }\n};","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"minimum-deletions-to-make-string-balanced","has_notes":false,"flag_type":1}