{"id":1403422362,"question_id":150,"lang":"cpp","lang_name":"C++","time":"4 months, 1 week","timestamp":1727392904,"status":10,"status_display":"Accepted","runtime":"13 ms","url":"/submissions/detail/1403422362/","is_pending":"Not Pending","title":"Evaluate Reverse Polish Notation","memory":"15.6 MB","code":"/*\nPostfix notation (\"Reverse Polish\")\nYou are given an array of strings tokens that represents an arithmetic expression in a Reverse Polish Notation.\nEvaluate the expression. Return an integer that represents the value of the expression.\n\nNote that:\n\nThe valid operators are '+', '-', '*', and '/'.\nEach operand may be an integer or another expression.\nThe division between two integers always truncates toward zero.\nThere will not be any division by zero.\nThe input represents a valid arithmetic expression in a reverse polish notation.\nThe answer and all the intermediate calculations can be represented in a 32-bit integer.\n 1 <= tokens.length <= 104\ntokens[i] is either an operator: \"+\", \"-\", \"*\", or \"/\", or an integer in the range [-200, 200].\n\n */\nclass Solution {\npublic:\n    int evalRPN(vector<string>& tokens) {\n        stack<int> num_st;\n        int n = tokens.size();\n        for(int i=0; i<n; i++) {\n            if( tokens[i]==\"+\" || tokens[i]==\"-\"|| tokens[i]==\"*\" || tokens[i]==\"/\" ) {\n                int num2 = num_st.top();\n                num_st.pop();\n                int num1 = num_st.top();\n                num_st.pop();\n                if(tokens[i] == \"+\") { \n                    num_st.push(  num1 + num2  );\n                } else if ( tokens[i] == \"-\") {\n                    num_st.push(  num1 - num2  );\n                } else if ( tokens[i] == \"*\") {\n                    num_st.push(  num1 * num2  );\n                } else if ( tokens[i] == \"/\") {\n                    num_st.push(  num1 / num2  );\n                } else  {\n                    cout << \"sth wrong!\" << endl;\n                };\n            } else \n                num_st.push( stoi(tokens[i]) );\n        };\n        return num_st.top();\n    }\n};","compare_result":"111111111111111111111","title_slug":"evaluate-reverse-polish-notation","has_notes":false,"flag_type":1}