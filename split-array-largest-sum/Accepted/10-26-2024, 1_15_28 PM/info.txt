{"id":1434592072,"question_id":410,"lang":"cpp","lang_name":"C++","time":"3 months, 1 week","timestamp":1729973728,"status":10,"status_display":"Accepted","runtime":"220 ms","url":"/submissions/detail/1434592072/","is_pending":"Not Pending","title":"Split Array Largest Sum","memory":"10.8 MB","code":"class Solution {\npublic:\n    int splitArray(vector<int>& nums, int K) {\n        int N = nums.size();\n        auto dp = vector<vector<long>>(N+1, vector<long>(K+1, INT_MAX));\n        nums.insert(nums.begin(), 0);\n        dp[0][0] = 0;\n        for(int i=1; i<=N; i++) {\n            for(int k=1; k<=min(K, i); k++) {\n                long sum = 0;\n                for(int j=i; j>=k; j--) {\n                    sum += nums[j];\n                    dp[i][k] = min(dp[i][k], max(dp[j-1][k-1], sum));\n                }\n            }\n        }\n        return dp[N][K];\n    }\n};","compare_result":"11111111111111111111111111111111","title_slug":"split-array-largest-sum","has_notes":false,"flag_type":1}