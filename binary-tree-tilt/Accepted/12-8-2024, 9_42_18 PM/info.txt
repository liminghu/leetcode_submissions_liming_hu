{"id":1474047547,"question_id":563,"lang":"cpp","lang_name":"C++","time":"2Â months","timestamp":1733722938,"status":10,"status_display":"Accepted","runtime":"3 ms","url":"/submissions/detail/1474047547/","is_pending":"Not Pending","title":"Binary Tree Tilt","memory":"23.8 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\n    int tiltSum = 0;\npublic:\n    int findTilt(TreeNode* root) {\n        dfs(root);\n        return tiltSum;\n    }\n    int dfs(TreeNode* root) {\n        if(root==NULL)\n            return 0;\n        int leftSum = dfs(root->left);\n        int rightSum = dfs(root->right);\n        tiltSum += abs(leftSum-rightSum);\n        return leftSum + rightSum + root->val;\n    }\n};","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"binary-tree-tilt","has_notes":false,"flag_type":1}