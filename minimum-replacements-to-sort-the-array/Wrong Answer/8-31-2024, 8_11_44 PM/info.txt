{"id":1374857228,"question_id":2450,"lang":"cpp","lang_name":"C++","time":"5 months, 1 week","timestamp":1725160304,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/1374857228/","is_pending":"Not Pending","title":"Minimum Replacements to Sort the Array","memory":"N/A","code":"/*\nYou are given a 0-indexed integer array nums. In one operation you can replace any element of the array with any two elements that sum to it.\nFor example, consider nums = [5,6,7]. In one operation, we can replace nums[1] with 2 and 4 and convert nums to [5,2,4,7].\nReturn the minimum number of operations to make an array that is sorted in non-decreasing order.\n*/\nclass Solution {\npublic:\n    long long minimumReplacement(vector<int>& nums) {\n        // 1<= nums.length <= 105\n        // 1 <= nums[i] <= 109\n        int n = nums.size();\n        int res = 0;\n\n        for(int i=n-2; i>=0; i--) {\n            if(nums[i]<=nums[i+1])\n                continue;\n            //nums[i] > nums[i+1]\n            if(nums[i+1]>=2) {\n                res += nums[i] / nums[i+1]-1;\n                nums[i] = nums[i] % nums[i+1];\n                if(nums[i] == 0) {\n                    nums[i] = nums[i+1];\n                };\n            } else {\n                res += nums[i]/nums[i+1]-1;\n                nums[i] = 1;\n            };\n        };\n\n        return res;\n    }\n};","compare_result":"11110001111000000000001010111000001011000000000","title_slug":"minimum-replacements-to-sort-the-array","has_notes":false,"flag_type":1}