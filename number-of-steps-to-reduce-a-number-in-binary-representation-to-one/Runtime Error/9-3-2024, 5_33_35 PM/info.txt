{"id":1378273451,"question_id":1520,"lang":"cpp","lang_name":"C++","time":"5Â months","timestamp":1725410015,"status":15,"status_display":"Runtime Error","runtime":"N/A","url":"/submissions/detail/1378273451/","is_pending":"Not Pending","title":"Number of Steps to Reduce a Number in Binary Representation to One","memory":"N/A","code":"/*Given the binary representation of an integer as a string s, return the number of steps to reduce it to 1 under the following rules:\nIf the current number is even, you have to divide it by 2.\nIf the current number is odd, you have to add 1 to it.\nIt is guaranteed that you can always reach one for all test cases.\n*/\nclass Solution {\npublic:\n    int numSteps(string s) {\n        /*  1 <= s.length <= 500\n            s consists of characters '0' or '1'\n            s[0] == '1'\n        */\n        long long num = stoi(s, 0, 2); //base = 2;\n        int res = 0;\n        while(num!=1) {\n            if(num%2 == 0) {\n                num = num/2;\n                res++;\n            } else {\n                num = num+1;\n                res++;\n            };\n        }\n\n        return res;\n\n        \n    }\n};","compare_result":"11111111111111111111111111110000000000000000000000000000000000000000000000","title_slug":"number-of-steps-to-reduce-a-number-in-binary-representation-to-one","has_notes":false,"flag_type":1}