{"id":394358364,"question_id":56,"lang":"cpp","lang_name":"C++","time":"4 years, 4 months","timestamp":1599860860,"status":10,"status_display":"Accepted","runtime":"128 ms","url":"/submissions/detail/394358364/","is_pending":"Not Pending","title":"Merge Intervals","memory":"28.5 MB","code":"class Solution {\npublic:\n    vector<vector<int>> merge(vector<vector<int>>& intervals) {\n\t\tif(intervals.empty()) return vector<vector<int>>{};\n\t\t\n\t\tvector<vector<int>> ans;\n\t\tsort(intervals.begin(), intervals.end(), [](vector<int> a, vector<int> b){return a[0] < b[0];});\n\t\tans.push_back(intervals[0]);\n\t\tfor(int i = 1; i < intervals.size(); i++) {\n\t\t\tif(ans.back()[1] < intervals[i][0]) \n\t\t\t\tans.push_back(intervals[i]);\n\t\t\telse\n\t\t\t\tans.back()[1] = max(ans.back()[1], intervals[i][1]);\n\t\t}\n\t\t\n\t\treturn ans;\n        \n    }\n};","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"merge-intervals","has_notes":false,"flag_type":1}