{"id":1380521866,"question_id":56,"lang":"cpp","lang_name":"C++","time":"5Â months","timestamp":1725581237,"status":10,"status_display":"Accepted","runtime":"286 ms","url":"/submissions/detail/1380521866/","is_pending":"Not Pending","title":"Merge Intervals","memory":"92 MB","code":"class Solution {\npublic:\n   static bool cmp(vector<int> a, vector<int> b) {\n        if(a[0] == b[0])\n            return a[1] > b[1];\n        else\n            return a[0] < b[0];\n    }\n    vector<vector<int>> merge(vector<vector<int>>& intervals) {\n     vector<vector<int>> diff;\n     for(auto& interval:intervals) {\n        diff.push_back({interval[0], 1});\n         diff.push_back({interval[1], -1});\n     };\n     sort(diff.begin(), diff.end(), cmp);\n     vector<vector<int>> result;\n     int start=0, end=0;\n     int sum = 0;\n     for(int i=0; i<diff.size(); i++) {\n        if(sum==0 && diff[i][1] == 1) {\n            start = diff[i][0];\n        }else if(sum ==1  && diff[i][1] == -1) {\n            end = diff[i][0];\n            result.push_back({start,end});\n        }\n        sum += diff[i][1];\n     };\n     return result;\n\n     /*   sort(intervals.begin(), intervals.end());\n        vector<vector<int>> merged;\n        for(auto interval: intervals) {\n            if(merged.empty() || merged.back()[1] < interval[0])\n                merged.push_back(interval);\n            else {\n                merged.back()[1] = max(merged.back()[1], interval[1]);\n            }\n        }\n        return merged;*/\n        \n    }\n};","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"merge-intervals","has_notes":false,"flag_type":1}