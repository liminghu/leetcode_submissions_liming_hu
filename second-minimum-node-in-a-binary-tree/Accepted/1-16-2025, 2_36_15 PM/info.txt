{"id":1510930201,"question_id":671,"lang":"cpp","lang_name":"C++","time":"3Â weeks","timestamp":1737066975,"status":10,"status_display":"Accepted","runtime":"0 ms","url":"/submissions/detail/1510930201/","is_pending":"Not Pending","title":"Second Minimum Node In a Binary Tree","memory":"9.1 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    int findSecondMinimumValue(TreeNode* root) {\n        //root.val = min(root.left.val, root.right.val)\n        if(root==NULL)\n            return -1;\n        if(root->left == NULL && root->right == NULL)\n            return -1;\n        int rootVal = root->val;\n        int leftVal = root->left->val;\n        int rightVal = root->right->val;\n        if(rootVal == leftVal) {\n            leftVal = findSecondMinimumValue(root->left);\n        }\n        if(rootVal == rightVal) {\n            rightVal = findSecondMinimumValue(root->right);\n        }        \n        if(leftVal!=-1 && rightVal!=-1)\n            return min(leftVal, rightVal);\n        if(leftVal!=-1)\n            return leftVal;\n        if(rightVal!=-1)\n            return rightVal;\n        return -1;\n    }\n};","compare_result":"111111111111111111111111111111111111111","title_slug":"second-minimum-node-in-a-binary-tree","has_notes":false,"flag_type":1}