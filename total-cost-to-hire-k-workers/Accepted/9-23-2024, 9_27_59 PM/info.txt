{"id":1400302227,"question_id":2553,"lang":"cpp","lang_name":"C++","time":"4 months, 2 weeks","timestamp":1727152079,"status":10,"status_display":"Accepted","runtime":"121 ms","url":"/submissions/detail/1400302227/","is_pending":"Not Pending","title":"Total Cost to Hire K Workers","memory":"77 MB","code":"/*\nYou are given a 0-indexed integer array costs where costs[i] is the cost of hiring the ith worker.\nYou are also given two integers k and candidates. We want to hire exactly k workers according to the following rules:\nYou will run k sessions and hire exactly one worker in each session.\nIn each hiring session, choose the worker with the lowest cost from either the first candidates workers or the last \ncandidates workers. Break the tie by the smallest index.\nFor example, if costs = [3,2,7,7,1,2] and candidates = 2, then in the first hiring session, we will choose the 4th worker \nbecause they have the lowest cost [3,2,7,7,1,2].\nIn the second hiring session, we will choose 1st worker because they have the same lowest cost as 4th worker but they have\n the smallest index [3,2,7,7,2]. Please note that the indexing may be changed in the process.\nIf there are fewer than candidates workers remaining, choose the worker with the lowest cost among them. Break the tie \nby the smallest index.\nA worker can only be chosen once.\nReturn the total cost to hire exactly k workers.\n1 <= costs.length <= 105 \n1 <= costs[i] <= 105\n1 <= k, candidates <= costs.length\n*/\nclass Solution {\npublic:\n    long long totalCost(vector<int>& costs, int k, int candidates) {\n        priority_queue<int, vector<int>, greater<int>> pqLeft; //min\n        priority_queue<int, vector<int>, greater<int>> pqRight; //min\n        long long ret=0;\n        int l = 0;\n        int r = costs.size()-1;\n        int count = 0;\n        while(count < k) {\n            while( pqLeft.size() < candidates && l <= r) { // l<=r to make sure that the candidate will not get into both queue, and always in the left queue.\n                pqLeft.push(costs[l]);\n                l++;\n            };\n            while(pqRight.size() < candidates && l <= r) {\n                pqRight.push(costs[r]);\n                r--;\n            };\n            int topLeft = pqLeft.size()>0? pqLeft.top(): INT_MAX;\n            int topRight = pqRight.size()>0? pqRight.top(): INT_MAX;\n            if( topLeft <= topRight ) { //Break the tie by the smallest index.\n                ret += topLeft;\n                pqLeft.pop();\n            } else {\n                ret += topRight;\n                pqRight.pop();                \n            }\n            count++;\n        }\n        return ret;\n    }\n};","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"total-cost-to-hire-k-workers","has_notes":false,"flag_type":1}