{"id":1379066851,"question_id":2405,"lang":"cpp","lang_name":"C++","time":"5Â months","timestamp":1725470777,"status":10,"status_display":"Accepted","runtime":"11 ms","url":"/submissions/detail/1379066851/","is_pending":"Not Pending","title":"Minimum Number of Keypresses","memory":"10.6 MB","code":"/*You have a keypad with 9 buttons, numbered from 1 to 9, each mapped to lowercase English letters. \nYou can choose which characters each button is matched to as long as:\nAll 26 lowercase English letters are mapped to.\nEach character is mapped to by exactly 1 button.\nEach button maps to at most 3 characters.\nTo type the first character matched to a button, you press the button once. To type the second character, \nyou press the button twice, and so on.\nGiven a string s, return the minimum number of keypresses needed to type s using your keypad.\nNote that the characters mapped to by each button, and the order they are mapped in cannot be changed.\n*/\n/*\n1 <= s.length <= 105\ns consists of lowercase English letters.\n*/\nclass Solution {\npublic:\n    int minimumKeypresses(string s) {\n        int n = s.length();\n        vector<int> freq(26, 0);\n        for(int i=0; i<n; i++)\n            freq[s[i]-'a']++;\n\n        sort(freq.begin(), freq.end()); //increasing.\n\n        int ret = 0;\n        for(int i=freq.size()-1; i>=0; i--) {\n            if( i >= 26-9 )\n                ret += freq[i];\n            else if (i>=26-9*2)\n                ret += freq[i]*2;\n            else\n                ret += freq[i]*3;\n        }\n        return ret;\n    }\n};","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"minimum-number-of-keypresses","has_notes":false,"flag_type":1}