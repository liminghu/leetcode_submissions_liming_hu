{"id":1410996437,"question_id":87,"lang":"cpp","lang_name":"C++","time":"4Â months","timestamp":1727998065,"status":10,"status_display":"Accepted","runtime":"25 ms","url":"/submissions/detail/1410996437/","is_pending":"Not Pending","title":"Scramble String","memory":"22.7 MB","code":"/*\nWe can scramble a string s to get a string t using the following algorithm:\nIf the length of the string is 1, stop.\nIf the length of the string is > 1, do the following:\nSplit the string into two non-empty substrings at a random index, i.e., if the string is s, divide it to x and y where s = x + y.\nRandomly decide to swap the two substrings or to keep them in the same order. i.e., after this step, s may become s = x + y or s = y + x.\nApply step 1 recursively on each of the two substrings x and y.\nGiven two strings s1 and s2 of the same length, return true if s2 is a scrambled string of s1, otherwise, return false.\ns1.length == s2.length\n1 <= s1.length <= 30\ns1 and s2 consist of lowercase English letters.\n */\nclass Solution {\n    unordered_map<string, int> mp;\npublic:\n    bool isScramble(string s1, string s2) {\n        if( mp.find( s1+\"_\"+s2 )!=mp.end() )\n            return mp[s1+\"_\"+s2];\n\n        int n = s1.length();\n        if(s1 == s2) {\n            mp[s1+\"_\"+s2] = 1;\n            return true;\n        }\n        if(counter(s1)!=counter(s2)) {\n            mp[s1+\"_\"+s2] = 0;\n            return false;\n        }\n        for(int k=1; k<n; k++) {\n            //s1 divide into s1_1 s1_2\n            string s1_1 = s1.substr(0, k);\n            string s1_2 = s1.substr(k, n-k);\n\n            string s2_1 = s2.substr(0, k);\n            string s2_2 = s2.substr(k, n-k);\n            if( isScramble(s1_1, s2_1) && isScramble(s1_2, s2_2) ) {\n                mp[s1+\"_\" + s2] = true;\n                return true;\n            }\n            s2_1 = s2.substr(0, n-k);\n            s2_2 = s2.substr(n-k, k);\n            if( isScramble(s1_1, s2_2) && isScramble(s1_2, s2_1) ) {\n                mp[s1+\"_\" + s2] = true;\n                return true;\n            }\n        };\n        mp[s1+\"_\" + s2] = 0;\n        return false;\n    }\n\n    vector<int> counter(string s) {\n        vector<int> ans(26, 0);\n        for(int i=0; i<s.length(); i++) {\n            ans[s[i]-'a']++;\n        };\n        return ans;\n    }\n};","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"scramble-string","has_notes":false,"flag_type":1}