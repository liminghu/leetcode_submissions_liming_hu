{"id":386982895,"question_id":41,"lang":"cpp","lang_name":"C++","time":"4 years, 5 months","timestamp":1598506228,"status":10,"status_display":"Accepted","runtime":"4 ms","url":"/submissions/detail/386982895/","is_pending":"Not Pending","title":"First Missing Positive","memory":"9.9 MB","code":"class Solution {\npublic:\n    int firstMissingPositive(vector<int>& nums) {\n      if (nums.size() == 0) \n          return 1;\n      int n= nums.size();\n      int containsOne =0; \n      \n      //step 1\n      for (int i=0; i<n; i++) {\n        if (nums[i] == 1) {\n            containsOne = 1;\n        } else if ((nums[i] <= 0) || (nums[i] > n)) {\n          nums[i] = 1;\n        }\n      }\n      \n      if (containsOne == 0) return 1;\n      \n      //step 2\n      for(int i=0; i<n; i++) {\n        int index = abs(nums[i])-1;\n        if(nums[index]>0) nums[index] = -1 * nums[index];\n      }\n      \n      //step 3\n      for (int i=0; i<n; i++) {\n        if(nums[i] >0) {\n            return i+1;\n        }\n      }\n      \n      //[1 2 3] -> 4\n      return n+1;\n    }\n};","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"first-missing-positive","has_notes":false,"flag_type":1}