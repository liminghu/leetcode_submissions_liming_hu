{"id":1379328772,"question_id":976,"lang":"cpp","lang_name":"C++","time":"5Â months","timestamp":1725490620,"status":10,"status_display":"Accepted","runtime":"330 ms","url":"/submissions/detail/1379328772/","is_pending":"Not Pending","title":"Minimum Area Rectangle","memory":"27.3 MB","code":"/*\nYou are given an array of points in the X-Y plane points where points[i] = [xi, yi].\nReturn the minimum area of a rectangle formed from these points, with sides parallel \nto the X and Y axes. If there is not any such rectangle, return 0.\n1 <= points.length <= 500\npoints[i].length == 2\n0 <= xi, yi <= 4 * 104\nAll the given points are unique.\n*/\nclass Solution {\npublic:\n    int minAreaRect(vector<vector<int>>& points) {\n        unordered_map<int, unordered_set<int>> mp;\n        for(auto p: points) {\n            mp[p[0]].insert(p[1]);\n        };\n        \n        int ret = INT_MAX;\n        for(int i=0; i<points.size(); i++) {\n            int x1 = points[i][0];\n            int y1 = points[i][1];\n            for(int j=i+1; j<points.size(); j++) {\n                int x2 = points[j][0];\n                int y2 = points[j][1];\n                if(x1==x2 || y1==y2) \n                    continue;\n                int x3 = x2;\n                int y3 = y1;\n                int x4 = x1;\n                int y4 = y2;\n                if(mp[x3].find(y3) == mp[x3].end())\n                    continue;\n                if(mp[x4].find(y4) == mp[x4].end())\n                    continue;    \n                ret = min(ret, abs((x2-x1)*(y2-y1)));                   \n            }\n        }\n        return ret==INT_MAX? 0:ret;\n    }\n};","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"minimum-area-rectangle","has_notes":false,"flag_type":1}