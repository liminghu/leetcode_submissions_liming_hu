{"id":1522514768,"question_id":3716,"lang":"cpp","lang_name":"C++","time":"1 week, 3 days","timestamp":1738005908,"status":10,"status_display":"Accepted","runtime":"567 ms","url":"/submissions/detail/1522514768/","is_pending":"Not Pending","title":"Longest Subsequence With Decreasing Adjacent Difference","memory":"339 MB","code":"class Solution {\npublic:\n    int longestSubsequence(vector<int>& nums) { //1 <= nums[i] <= 300\n        int res = 0;\n        int n = nums.size();\n        vector<vector<int>> dp(301, vector<int>(301, 0));\n        for(int i=n-1; i>=0; i--) {\n            for(int nextNum=1; nextNum<=300; nextNum++) {\n                int diff = abs(nums[i]-nextNum);\n                dp[nums[i]][diff] = max(dp[nums[i]][diff], dp[nextNum][diff]+1);\n            }\n            for(int diff=1; diff<300; diff++) {\n                dp[nums[i]][diff] = max(dp[nums[i]][diff], dp[nums[i]][diff-1]);\n                res = max(res, dp[nums[i]][diff]);\n            }\n        }\n        return res;\n    }\n};","compare_resulttitle_slug":"longest-subsequence-with-decreasing-adjacent-difference","has_notes":false,"flag_type":1}