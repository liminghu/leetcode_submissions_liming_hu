{"id":1451035075,"question_id":498,"lang":"cpp","lang_name":"C++","time":"2 months, 3 weeks","timestamp":1731450207,"status":10,"status_display":"Accepted","runtime":"0 ms","url":"/submissions/detail/1451035075/","is_pending":"Not Pending","title":"Diagonal Traverse","memory":"22 MB","code":"class Solution {\npublic:\n    vector<int> findDiagonalOrder(vector<vector<int>>& mat) {\n        int row = mat.size();\n        int col = mat[0].size();\n        vector<int> res; //row*col.\n        //(0,0) -> (row-1, col-1);      row+col-1-1;\n        int r = 0; \n        int c = 0;\n        bool up = true;\n        while(r < row && c < col) {\n            if(up) {\n                while(r>0 && c < col-1) {\n                    res.push_back(mat[r][c]);\n                    r--;\n                    c++;\n                }\n                res.push_back(mat[r][c]);\n                if(c == col-1)\n                    r++;\n                else\n                    c++;\n            } else {\n               while(r<row-1 && c >0) {\n                    res.push_back(mat[r][c]);\n                    r++;\n                    c--;\n                }\n                res.push_back(mat[r][c]);\n                if(r == row-1)\n                    c++;\n                else\n                    r++;                \n            }\n            up = !up;\n        }\n        return res;\n\n    }\n};","compare_result":"11111111111111111111111111111111","title_slug":"diagonal-traverse","has_notes":false,"flag_type":1}