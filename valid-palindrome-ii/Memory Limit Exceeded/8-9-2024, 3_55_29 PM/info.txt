{"id":1350456378,"question_id":680,"lang":"cpp","lang_name":"C++","time":"6Â months","timestamp":1723244129,"status":12,"status_display":"Memory Limit Exceeded","runtime":"N/A","url":"/submissions/detail/1350456378/","is_pending":"Not Pending","title":"Valid Palindrome II","memory":"N/A","code":"//Given a string s, return true if the s can be palindrome after deleting at most one character from it.\nclass Solution {\npublic:\n    bool validPalindrome(string s) {\n        //1 <= s.length <= 105\n        //s consists of lowercase English letters.\n        if(isPalindrome(s))\n            return true;\n        int sz = s.length();\n        for(int i=0; i<sz; i++) {\n            //delete s[i];\n            string new_s;\n            string new_s1 = s.substr(0, i);\n            string new_s2 = s.substr(i+1, sz-i-1);\n            new_s = new_s1 + new_s2;\n            if(isPalindrome(new_s))\n                return true;\n        }\n        return false;\n    }\n\n    bool isPalindrome(string s) {\n        int sz = s.length();\n        if(sz <=1)\n            return true;\n\n        int i=0;\n        int j = sz-1;\n        while(i<j) {\n            if(s[i]!=s[j])\n                return false;\n            i++;\n            j--;\n        }\n        return true;\n    }\n};","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111000000000000000000000000000000000000000000000000000000","title_slug":"valid-palindrome-ii","has_notes":false,"flag_type":1}