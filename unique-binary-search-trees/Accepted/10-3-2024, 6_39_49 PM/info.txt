{"id":1411059375,"question_id":96,"lang":"cpp","lang_name":"C++","time":"4Â months","timestamp":1728005989,"status":10,"status_display":"Accepted","runtime":"2026 ms","url":"/submissions/detail/1411059375/","is_pending":"Not Pending","title":"Unique Binary Search Trees","memory":"7.4 MB","code":"/*\nGiven an integer n, return the number of structurally unique BST's (binary search trees) \nwhich has exactly n nodes of unique values from 1 to n.\n\nConstraints:\n1 <= n <= 19\n*/\nclass Solution {\npublic:\n    int numTrees(int n) {\n        if(n<=1)\n            return 1;\n        \n        int res = 0;\n        for(int i=1; i<=n; i++) { //using i as the root.\n            res += numTrees(i-1) * numTrees(n-i);\n        }\n        return res;\n    }\n};","compare_result":"1111111111111111111","title_slug":"unique-binary-search-trees","has_notes":false,"flag_type":1}