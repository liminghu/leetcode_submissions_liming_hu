{"id":1437654008,"question_id":220,"lang":"cpp","lang_name":"C++","time":"3 months, 1 week","timestamp":1730238274,"status":10,"status_display":"Accepted","runtime":"173 ms","url":"/submissions/detail/1437654008/","is_pending":"Not Pending","title":"Contains Duplicate III","memory":"146.2 MB","code":"class Solution {\npublic:\n    bool containsNearbyAlmostDuplicate(vector<int>& nums, int indexDiff, int valueDiff) {\n        /*Find a pair of indices (i, j) such that:\n            i != j,\n            abs(i - j) <= indexDiff.\n            abs(nums[i] - nums[j]) <= valueDiff, and\n            Return true if such pair exists or false otherwise.\n        */\n        int n = nums.size();\n        set<int> set; //increasing...\n        for(int i=0; i<nums.size(); i++) {\n            auto s = set.lower_bound(nums[i]); \n            if (s != set.end() && *s <= nums[i] + valueDiff ) \n                return true;\n            if( s != set.begin() )  {\n                auto g = prev(s);\n                if(nums[i] <= *g + valueDiff)\n                    return true;\n            }\n            set.insert(nums[i]);\n            if(set.size()>indexDiff) {\n                set.erase(nums[i-indexDiff]);\n            }\n        }\n        return false;\n    }\n};","compare_result":"111111111111111111111111111111111111111111111111111111","title_slug":"contains-duplicate-iii","has_notes":false,"flag_type":1}