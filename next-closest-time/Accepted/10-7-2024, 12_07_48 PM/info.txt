{"id":1415132876,"question_id":681,"lang":"cpp","lang_name":"C++","time":"4Â months","timestamp":1728328068,"status":10,"status_display":"Accepted","runtime":"17 ms","url":"/submissions/detail/1415132876/","is_pending":"Not Pending","title":"Next Closest Time","memory":"13.9 MB","code":"/*\nGiven a time represented in the format \"HH:MM\", form the next closest time by reusing the current digits. \nThere is no limit on how many times a digit can be reused.\nYou may assume the given input string is always valid. For example, \"01:34\", \"12:09\" are all valid.\n \"1:34\", \"12:9\" are all invalid.\n\nExample 1:\nInput: time = \"19:34\"\nOutput: \"19:39\"\nExplanation: The next closest time choosing from digits 1, 9, 3, 4, is 19:39, which occurs 5 minutes later.\nIt is not 19:33, because this occurs 23 hours and 59 minutes later.\n\nExample 2:\nInput: time = \"23:59\"\nOutput: \"22:22\"\nExplanation: The next closest time choosing from digits 2, 3, 5, 9, is 22:22.\nIt may be assumed that the returned time is next day's time since it is smaller than the input time numerically.\n \nConstraints:\ntime.length == 5\ntime is a valid time in the form \"HH:MM\".\n0 <= HH < 24\n0 <= MM < 60\n*/\nclass Solution {\npublic:\n    string nextClosestTime(string time) { //\"HH:MM\"\n        set<char> s(time.begin(), time.end());\n        int hour = stoi(time.substr(0,2));\n        int min = stoi(time.substr(3,2));\n\n        while(true) {\n            min++;\n            if(min==60) {\n                min = 0;\n                hour++;\n                hour = hour % 24;\n            }\n            string h_s = to_string(hour);\n            if(h_s.size()==1)\n                h_s = \"0\" + h_s;\n            string m_s = to_string(min);\n            if(m_s.size()==1)\n                m_s = \"0\" + m_s;\n            string new_time = h_s + \":\" + m_s;\n            set<char> s2(new_time.begin(), new_time.end());\n            if(includes(s.begin(), s.end(), s2.begin(), s2.end()))\n                return new_time;\n        }\n        return time;\n    }\n};","compare_result":"111111111111111111111111111111111111111111111111111111111111111111","title_slug":"next-closest-time","has_notes":false,"flag_type":1}