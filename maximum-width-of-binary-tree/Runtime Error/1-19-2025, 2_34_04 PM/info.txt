{"id":1513991858,"question_id":662,"lang":"cpp","lang_name":"C++","time":"2 weeks, 4 days","timestamp":1737326044,"status":15,"status_display":"Runtime Error","runtime":"N/A","url":"/submissions/detail/1513991858/","is_pending":"Not Pending","title":"Maximum Width of Binary Tree","memory":"N/A","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    int widthOfBinaryTree(TreeNode* root) {\n        if(root==NULL)\n            return 0;\n        int res = 1;\n        queue<pair<TreeNode*, int>> q;\n        q.push({root, 0});\n        while(!q.empty()) {\n            int sz = q.size();\n            int start = q.front().second;\n            int end = q.back().second;\n            res = max(res, end-start+1);\n            for(int i=0; i<sz; i++) {\n                pair<TreeNode*, int> cur = q.front();\n                q.pop();\n                int idx = cur.second - start;\n                if(cur.first->left!=NULL) \n                    q.push({cur.first->left, 2*idx+1});\n               if(cur.first->right!=NULL) \n                    q.push({cur.first->right, 2*idx+2});\n            }\n        }\n        return res;\n    }\n};","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111110000","title_slug":"maximum-width-of-binary-tree","has_notes":false,"flag_type":1}