{"id":1433517308,"question_id":396,"lang":"cpp","lang_name":"C++","time":"3 months, 2 weeks","timestamp":1729873433,"status":10,"status_display":"Accepted","runtime":"5 ms","url":"/submissions/detail/1433517308/","is_pending":"Not Pending","title":"Rotate Function","memory":"98.5 MB","code":"class Solution {\npublic:\n    int maxRotateFunction(vector<int>& nums) {\n        int n = nums.size();\n        //Assume arrk to be an array obtained by rotating nums by k positions clock-wise.\n        //F(k) = 0 * arrk[0] + 1 * arrk[1] + ... + (n - 1) * arrk[n - 1].\n        int rets = INT_MIN;\n        int fk = 0;\n        int sum = 0;\n        for(int i= 0; i<n; i++) {\n            fk += i* nums[i];\n            sum += nums[i];\n        };\n        rets = max(rets, fk);\n        for(int k=1; k<n; k++) {\n            fk += sum - n * nums[(n-k) % n];\n            rets = max(rets, fk);\n        }\n        return rets;\n    }\n};","compare_result":"1111111111111111111111111111111111111111111111111111111111","title_slug":"rotate-function","has_notes":false,"flag_type":1}