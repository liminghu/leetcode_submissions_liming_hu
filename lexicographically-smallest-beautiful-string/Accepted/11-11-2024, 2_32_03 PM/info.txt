{"id":1450012874,"question_id":2687,"lang":"cpp","lang_name":"C++","time":"2 months, 3 weeks","timestamp":1731364323,"status":10,"status_display":"Accepted","runtime":"0 ms","url":"/submissions/detail/1450012874/","is_pending":"Not Pending","title":"Lexicographically Smallest Beautiful String","memory":"22.6 MB","code":"/*\nA string is beautiful if:\nIt consists of the first k letters of the English lowercase alphabet.\nIt does not contain any substring of length 2 or more which is a palindrome.\nYou are given a beautiful string s of length n and a positive integer k.\nReturn the lexicographically smallest string of length n, which is larger than s and is beautiful. If there is no such string, \nreturn an empty string.\nA string a is lexicographically larger than a string b (of the same length) if in the first position where a and b differ, a \nhas a character strictly larger than the corresponding character in b.\nFor example, \"abcd\" is lexicographically larger than \"abcc\" because the first position they differ is at the fourth character, \nand d is greater than c.\n \nExample 1:\nInput: s = \"abcz\", k = 26\nOutput: \"abda\"\nExplanation: The string \"abda\" is beautiful and lexicographically larger than the string \"abcz\".\nIt can be proven that there is no string that is lexicographically larger than the string \"abcz\", beautiful, and lexicographically \nsmaller than the string \"abda\".\n\nExample 2:\nInput: s = \"dc\", k = 4\nOutput: \"\"\nExplanation: It can be proven that there is no string that is lexicographically larger than the string \"dc\" and is beautiful.\n \nConstraints:\n1 <= n == s.length <= 105\n4 <= k <= 26\ns is a beautiful string.\n*/\nclass Solution {\npublic:\n    string smallestBeautifulString(string s, int k) {\n        int n = s.length();\n        string original = s;\n        int flag = 0;\n        for(int i=n-1; i>=0; i--) {\n            for(char ch=s[i]+1; ch<'a'+k; ch++) {\n                if(!checkOK(s, i, ch)) \n                    continue;\n                s[i] = ch;\n                for(int j = i+1; j<n; j++) {\n                    for(char c='a'; c<'a'+k; c++) {\n                        if(checkOK(s, j, c)) {\n                            s[j] = c;\n                            break;\n                        }\n                    }\n                }\n                flag = 1;\n                break;            \n            }\n            if(flag)\n                break;\n        }\n        if(s == original) \n            return \"\";\n        return s;\n    }\n    bool checkOK(string& s, int i, char ch) {\n        if(i>=1 && s[i-1] == ch)\n            return false;\n        if(i>=2 && s[i-2] == ch)\n            return false;\n        return true;\n    }\n};","compare_resulttitle_slug":"lexicographically-smallest-beautiful-string","has_notes":false,"flag_type":1}