{"id":1389223050,"question_id":1786,"lang":"cpp","lang_name":"C++","time":"4 months, 3 weeks","timestamp":1726266798,"status":10,"status_display":"Accepted","runtime":"44 ms","url":"/submissions/detail/1389223050/","is_pending":"Not Pending","title":"Count the Number of Consistent Strings","memory":"34 MB","code":"/*\nYou are given a string allowed consisting of distinct characters and \nan array of strings words. A string is consistent if all characters \nin the string appear in the string allowed.\nReturn the number of consistent strings in the array words.\n1 <= words.length <= 104\n1 <= allowed.length <= 26\n1 <= words[i].length <= 10\nThe characters in allowed are distinct.\nwords[i] and allowed contain only lowercase English letters.\n*/\nclass Solution {\npublic:\n    int countConsistentStrings(string allowed, vector<string>& words) {\n        vector<int> letter_dict(26, 0); //lowercase English letters.\n        for(int i=0; i<allowed.length(); i++) {\n            int c = allowed[i]-'a';\n            letter_dict[c]++;\n        };\n        int ans = 0;\n        for(int i=0; i<words.size(); i++) {\n            string word = words[i];\n            int k=0;\n            while(k<word.length()) {\n                if(letter_dict[word[k]-'a'] > 0) {\n                    k++;\n                    continue;\n                } else \n                    break;\n            };\n            if(k==word.length())\n                ans++;\n        };\n        return ans;\n        \n    }\n};","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"count-the-number-of-consistent-strings","has_notes":false,"flag_type":1}