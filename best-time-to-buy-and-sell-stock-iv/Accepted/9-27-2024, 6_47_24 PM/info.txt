{"id":1404451517,"question_id":188,"lang":"cpp","lang_name":"C++","time":"4 months, 1 week","timestamp":1727488044,"status":10,"status_display":"Accepted","runtime":"9 ms","url":"/submissions/detail/1404451517/","is_pending":"Not Pending","title":"Best Time to Buy and Sell Stock IV","memory":"16.6 MB","code":"/*\nYou are given an integer array prices where prices[i] is the price of a given stock on the ith day, and an integer k.\nFind the maximum profit you can achieve. You may complete at most k transactions: i.e. you may buy at most k times and sell at most k times.\nNote: You may not engage in multiple transactions simultaneously (i.e., you must sell the stock before you buy again).\n1 <= k <= 100\n1 <= prices.length <= 1000\n0 <= prices[i] <= 1000\n*/\nclass Solution {\npublic:\n    int maxProfit(int K, vector<int>& prices) {\n        int n = prices.size();\n        K = min(K, n/2+1);\n        vector<vector<int>> sold(n, vector<int>(K+1,0)); //finished k transactions without stock.\n        vector<vector<int>> hold(n, vector<int>(K+1,0)); //finsihed k transaction with stock hold.\n\n        for(int i=0; i<n; i++) {\n            for(int k=0; k<=K; k++) {\n                if(i==0 && k==0) {\n                    sold[0][0] = 0; //finsihed 0 transactions, no hold.\n                    hold[0][0] = -prices[0]; //finished 0 transactions. must hold \n                } else if(i==0) { // k>=1\n                    sold[0][k] = INT_MIN/2; //finsihed k transactions, no hold.\n                    hold[0][k] = INT_MIN/2; //finished k transactions. must hold \n                } else if(k==0) { //i>0. 0 transactions.\n                    sold[i][0] = sold[i-1][0]; ////finsihed 0 transactions, no hold.\n                    hold[i][0] = max( hold[i-1][0], sold[i-1][0] - prices[i] );\n                } else {\n                    sold[i][k] = max( sold[i-1][k], hold[i-1][k-1] + prices[i] );\n                    hold[i][k] = max( hold[i-1][k], sold[i-1][k]   - prices[i] ); //do nothing, buy\n                }\n            }\n        }\n        return *max_element(sold[n-1].begin(), sold[n-1].end());\n    }\n};","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"best-time-to-buy-and-sell-stock-iv","has_notes":false,"flag_type":1}