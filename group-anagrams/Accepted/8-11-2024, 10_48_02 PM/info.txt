{"id":1352784536,"question_id":49,"lang":"cpp","lang_name":"C++","time":"5 months, 4 weeks","timestamp":1723441682,"status":10,"status_display":"Accepted","runtime":"25 ms","url":"/submissions/detail/1352784536/","is_pending":"Not Pending","title":"Group Anagrams","memory":"25.2 MB","code":"/*Given an array of strings strs, group the anagrams together. You can return the answer in any order.\nAn Anagram is a word or phrase formed by rearranging the letters of a different word or phrase, \ntypically using all the original letters exactly once.\n*/\nclass Solution {\npublic:\n    vector<vector<string>> groupAnagrams(vector<string>& strs) {\n        /*1 <= strs.length <= 104\n            0 <= strs[i].length <= 100\n            strs[i] consists of lowercase English letters.*/\n        unordered_map<string, vector<string>> mp;\n        vector<vector<string>> res;\n        for(int i=0; i<strs.size(); i++) {\n            string cur_s = strs[i];\n            sort(cur_s.begin(), cur_s.end());\n            mp[cur_s].push_back(strs[i]);\n        }\n\n       for(auto i:mp) {\n        res.push_back(i.second);\n       }\n        return res;\n\n    }\n\n \n};","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"group-anagrams","has_notes":false,"flag_type":1}