{"id":1352772470,"question_id":49,"lang":"cpp","lang_name":"C++","time":"5 months, 4 weeks","timestamp":1723440791,"status":14,"status_display":"Time Limit Exceeded","runtime":"N/A","url":"/submissions/detail/1352772470/","is_pending":"Not Pending","title":"Group Anagrams","memory":"N/A","code":"/*Given an array of strings strs, group the anagrams together. You can return the answer in any order.\nAn Anagram is a word or phrase formed by rearranging the letters of a different word or phrase, \ntypically using all the original letters exactly once.\n*/\nclass Solution {\npublic:\n   bool isAnagram(string s, string t) {\n        if(s == t)\n            return true;\n        \n        sort(s.begin(), s.end());\n        sort(t.begin(), t.end());\n\n        if(s==t)\n            return true;\n        else\n            return false;\n    }\n\n    vector<vector<string>> groupAnagrams(vector<string>& strs) {\n        /*1 <= strs.length <= 104\n            0 <= strs[i].length <= 100\n            strs[i] consists of lowercase English letters.*/\n        vector<bool> saved(strs.size(), 0);\n        vector<vector<string>> res;\n        for(int i=0; i<strs.size(); i++) {\n            if(saved[i] == 1)\n                continue;\n            \n            res.push_back({strs[i]});\n            saved[i] = 1;\n            for(int j=1; j<strs.size(); j++) {    \n                if(saved[j] == 1)\n                    continue;\n                if(isAnagram(strs[i], strs[j]) ) {\n                    res[res.size()-1].push_back(strs[j]);\n                    saved[j] = 1;\n                } \n            };\n        }\n        return res;\n\n    }\n\n \n};","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111000000000000000","title_slug":"group-anagrams","has_notes":false,"flag_type":1}