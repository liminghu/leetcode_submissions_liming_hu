{"id":1434568841,"question_id":411,"lang":"cpp","lang_name":"C++","time":"3 months, 1 week","timestamp":1729971523,"status":10,"status_display":"Accepted","runtime":"2198 ms","url":"/submissions/detail/1434568841/","is_pending":"Not Pending","title":"Minimum Unique Word Abbreviation","memory":"254.5 MB","code":"class Solution {\npublic:\n    string minAbbreviation(string target, vector<string>& dictionary) {\n        int n = target.length();\n        int totalCount = (1 << n); //there are 2^n possible status.\n        string minAbbr = target;\n        int minLen = n;\n\n        for( int i = totalCount; i > 0; i-- ) { //i is a status.\n            string abbr = generateAbbr(target, i);\n            //cout << i << \" new abbr. for target:\" << abbr << endl;\n            if(abbr.length() >= minLen)\n                continue;\n            bool flag = true; //is there a qualified new abbr?\n            for(auto word: dictionary) {\n                if(word.length() == n) {\n                    string abbr2 = generateAbbr(word, i);\n                    if(abbr2 == abbr) {\n                        flag = false;\n                        break;\n                    };\n                };\n            };\n            if( flag ) {\n                if(abbr.length() < minLen) {\n                    minAbbr = abbr;\n                    minLen = abbr.length();\n                };\n            };\n        };\n        return minAbbr;\n    }\n    string generateAbbr(string word, int status) {//status: the bit mask of which char is chosen.\n        string ret;\n        int consecutiveCount = 0;\n        int len = word.length();\n        for(int i=0; i<len; i++) {\n            int curChar = (status & 1); //whether word[i] is chosen.\n            if(curChar == 1)\n                consecutiveCount++;\n            else { //this char is not chosen.\n                if( consecutiveCount > 0 ) {\n                    ret += to_string(consecutiveCount);\n                    consecutiveCount = 0;\n                };\n                ret += word[i];\n            } \n            status = (status >> 1);\n        }\n        \n        if(consecutiveCount > 0)\n            ret += to_string(consecutiveCount);\n        return ret;\n    };\n};\n\n\n","compare_result":"1111111111111111111111111111111111111111111111","title_slug":"minimum-unique-word-abbreviation","has_notes":false,"flag_type":1}