{"id":1510974986,"question_id":743,"lang":"cpp","lang_name":"C++","time":"3Â weeks","timestamp":1737072945,"status":10,"status_display":"Accepted","runtime":"8 ms","url":"/submissions/detail/1510974986/","is_pending":"Not Pending","title":"Closest Leaf in a Binary Tree","memory":"26.8 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    unordered_map<TreeNode*, vector<TreeNode*>> graph;\n    TreeNode* start = NULL;\n    int findClosestLeaf(TreeNode* root, int k) {\n        buildGraph(root, NULL, k);\n        unordered_set<TreeNode*> visited;\n        queue<TreeNode*> q;\n        q.push(start);\n        while(!q.empty()) {\n            TreeNode* cur = q.front();\n            q.pop();\n            if(!cur->left && !cur->right)\n                return cur->val; //first leaf node we find, return it.\n            visited.insert(cur);\n            for(auto& neighbor:graph[cur]) {\n                if(visited.find(neighbor)!=visited.end())\n                    continue;\n                q.push(neighbor);\n            }\n        }\n        return -1; //dummy.\n\n    }\n    void buildGraph(TreeNode* root, TreeNode* parent, int k) {\n        if(root==NULL)\n            return;\n        if(root->val == k)\n            start = root;\n        if(parent) {\n            graph[parent].push_back(root);\n            graph[root].push_back(parent);\n        }\n        buildGraph(root->left, root, k);\n        buildGraph(root->right, root, k);        \n    }\n};","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"closest-leaf-in-a-binary-tree","has_notes":false,"flag_type":1}