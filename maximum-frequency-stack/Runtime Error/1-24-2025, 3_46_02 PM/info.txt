{"id":1519527041,"question_id":931,"lang":"cpp","lang_name":"C++","time":"1 week, 6 days","timestamp":1737762362,"status":15,"status_display":"Runtime Error","runtime":"N/A","url":"/submissions/detail/1519527041/","is_pending":"Not Pending","title":"Maximum Frequency Stack","memory":"N/A","code":"class FreqStack {\n    unordered_map<int, int> freq;  //Hash map freq will count the frequence of elements\n    unordered_map<int, stack<int>> m;   //freq, vector<int>\n    int maxFreq = 0;\npublic:\n    FreqStack() {     \n    }\n    \n    void push(int val) {\n        freq[val]++;\n        maxFreq = max(maxFreq, freq[val]);\n        m[ freq[val] ].push(val);  //If element x has n frequence, we will push x n times in m[1], m[2] .. m[n]\n    }\n    \n    int pop() {\n        int val = m[maxFreq].top();\n        m[maxFreq].pop();\n\n        if(m[ freq[val] ].size() == 0) {\n            maxFreq--;\n            freq[val]--;\n        }\n        \n        return val;\n    }\n};\n\n/**\n * Your FreqStack object will be instantiated and called as such:\n * FreqStack* obj = new FreqStack();\n * obj->push(val);\n * int param_2 = obj->pop();\n */","compare_result":"11110000000000000000000000000000000000","title_slug":"maximum-frequency-stack","has_notes":false,"flag_type":1}