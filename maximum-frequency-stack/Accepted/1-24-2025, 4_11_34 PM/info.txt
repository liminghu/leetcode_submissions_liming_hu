{"id":1519537073,"question_id":931,"lang":"cpp","lang_name":"C++","time":"1 week, 6 days","timestamp":1737763894,"status":10,"status_display":"Accepted","runtime":"57 ms","url":"/submissions/detail/1519537073/","is_pending":"Not Pending","title":"Maximum Frequency Stack","memory":"108.2 MB","code":"class FreqStack {\n    unordered_map<int, int> freqMap;  //Hash map freq will count the frequence of elements\n    unordered_map<int, stack<int>> setMap;   //freq, vector<int>\n    int maxFreq = 0;\npublic:\n    FreqStack() {     \n    }\n    \n    void push(int val) {\n        int freq = freqMap[val];\n        freqMap[val] = freq+1;\n        maxFreq = max(maxFreq, freq+1);\n        //cout << \"push maxFreq: \" <<maxFreq << endl;\n        setMap[ freqMap[val] ].push(val);  //If element x has n frequence, we will push x n times in m[1], m[2] .. m[n]\n    }\n    \n    int pop() {\n        //cout << \"pop maxFreq: \" <<maxFreq << endl;\n        int val = setMap[maxFreq].top();\n        setMap[maxFreq].pop();\n        freqMap[val]--;\n        if(setMap[ maxFreq ].size() == 0 ) \n            maxFreq--;\n        //cout << \"pop val: \" <<val << endl;\n        return val;\n    }\n};\n\n/**\n * Your FreqStack object will be instantiated and called as such:\n * FreqStack* obj = new FreqStack();\n * obj->push(val);\n * int param_2 = obj->pop();\n */","compare_result":"11111111111111111111111111111111111111","title_slug":"maximum-frequency-stack","has_notes":false,"flag_type":1}