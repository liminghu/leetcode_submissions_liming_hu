{"id":1439411518,"question_id":296,"lang":"cpp","lang_name":"C++","time":"3 months, 1 week","timestamp":1730416462,"status":10,"status_display":"Accepted","runtime":"0 ms","url":"/submissions/detail/1439411518/","is_pending":"Not Pending","title":"Best Meeting Point","memory":"12.9 MB","code":"class Solution {\npublic:\n    int minTotalDistance(vector<vector<int>>& grid) {\n        int m = grid.size(); //rows.\n        int n = grid[0].size(); //columns\n        vector<int> row_sum(n, 0);\n        vector<int> col_num(m, 0);\n        for(int i=0; i<m; i++) {\n            for(int j=0; j<n; j++) {\n                row_sum[j] += grid[i][j];\n                col_num[i] += grid[i][j];\n            };\n        };\n\n        return minDistance1D(row_sum) + minDistance1D(col_num);\n    }\n    int minDistance1D(vector<int>& nums) {\n        int i = -1;\n        int j = nums.size();\n        int d = 0;\n        int left = 0;\n        int right = 0;\n        while( i != j ) {\n            if(left < right) {\n                 d += left;\n                 i++;\n                 left += nums[i];\n            } else {\n                d += right;\n                j--;\n                right += nums[j];\n            }\n        }\n        return d;\n    }\n};","compare_result":"1111111111111111111111111111111111111111111111111111111111","title_slug":"best-meeting-point","has_notes":false,"flag_type":1}