{"id":1343318506,"question_id":1496,"lang":"cpp","lang_name":"C++","time":"6 months, 1 week","timestamp":1722704244,"status":10,"status_display":"Accepted","runtime":"19 ms","url":"/submissions/detail/1343318506/","is_pending":"Not Pending","title":"Lucky Numbers in a Matrix","memory":"14.1 MB","code":"/*\nGiven an m x n matrix of distinct numbers, return all lucky numbers in the matrix in any order.\nA lucky number is an element of the matrix such that it is the minimum element in its row and maximum in its column.\n*/\nclass Solution {\npublic:\n    vector<int> luckyNumbers (vector<vector<int>>& matrix) {\n         /*\n            m == mat.length\n            n == mat[i].length\n            1 <= n, m <= 50\n            1 <= matrix[i][j] <= 105.\n            All elements in the matrix are distinct.\n        */\n        int m = matrix.size();\n        int n = matrix[0].size();\n        vector<int> minMax;\n        for(int i=0; i<m; i++) {\n            int minEle = INT_MAX;\n            int idx_col = -1;\n            for(int j=0; j<n; j++) {\n                if(matrix[i][j] < minEle) {\n                    minEle = matrix[i][j];\n                    idx_col = j;\n                }\n            };\n            // idx_col column.\n            int count = 0;\n            for(int k=0; k<m; k++) {\n                if(matrix[k][idx_col] > minEle)\n                    break;\n                else\n                    count++;\n            }\n            if(count == m )\n                minMax.push_back(minEle);\n        }\n        return minMax;\n    }\n};","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"lucky-numbers-in-a-matrix","has_notes":false,"flag_type":1}