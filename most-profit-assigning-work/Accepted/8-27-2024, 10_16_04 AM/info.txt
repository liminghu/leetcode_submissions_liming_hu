{"id":1370299558,"question_id":853,"lang":"cpp","lang_name":"C++","time":"5 months, 1 week","timestamp":1724778964,"status":10,"status_display":"Accepted","runtime":"47 ms","url":"/submissions/detail/1370299558/","is_pending":"Not Pending","title":"Most Profit Assigning Work","memory":"41.7 MB","code":"/*\nYou have n jobs and m workers. You are given three arrays: difficulty, profit, and worker where:\ndifficulty[i] and profit[i] are the difficulty and the profit of the ith job, and\nworker[j] is the ability of jth worker (i.e., the jth worker can only complete a job with \ndifficulty at most worker[j]).\nEvery worker can be assigned at most one job, but one job can be completed multiple times.\nFor example, if three workers attempt the same job that pays $1, then the total profit will be $3. \nIf a worker cannot complete any job, their profit is $0.\nReturn the maximum profit we can achieve after assigning the workers to the jobs.\n*/\nclass Solution {\npublic:\n    int maxProfitAssignment(vector<int>& difficulty, vector<int>& profit, vector<int>& worker) {\n        /*  n == difficulty.length\n            n == profit.length\n            m == worker.length\n            1 <= n, m <= 104\n            1 <= difficulty[i], profit[i], worker[i] <= 105\n        */\n        int n = difficulty.size();\n        int m = worker.size();\n        vector<pair<int,int>> jobs; //difficulty, profit.\n\n        for(int i=0; i<n; i++) {\n            jobs.push_back({difficulty[i], profit[i]});\n        };\n        sort(worker.begin(), worker.end());\n        sort(jobs.begin(), jobs.end());\n        int ans = 0;\n        int i=0;\n        int best = 0;\n        for(int level: worker) {\n            while(i<n && level >= jobs[i].first) {\n                best = max(best, jobs[i].second);\n                i++;\n            }\n            ans += best;\n        }\n        return ans;\n    }\n};","compare_result":"111111111111111111111111111111111111111111111111111111111111","title_slug":"most-profit-assigning-work","has_notes":false,"flag_type":1}