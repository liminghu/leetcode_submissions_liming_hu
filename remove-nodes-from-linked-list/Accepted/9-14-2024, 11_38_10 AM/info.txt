{"id":1390220367,"question_id":2573,"lang":"cpp","lang_name":"C++","time":"4 months, 3 weeks","timestamp":1726339090,"status":10,"status_display":"Accepted","runtime":"324 ms","url":"/submissions/detail/1390220367/","is_pending":"Not Pending","title":"Remove Nodes From Linked List","memory":"183.7 MB","code":"/*\nYou are given the head of a linked list.\nRemove every node which has a node with a greater value anywhere to the right side of it.\nReturn the head of the modified linked list.\nThe number of the nodes in the given list is in the range [1, 105].\n1 <= Node.val <= 105\n*/\n/**\n * Definition for singly-linked list.\n * struct ListNode {\n *     int val;\n *     ListNode *next;\n *     ListNode() : val(0), next(nullptr) {}\n *     ListNode(int x) : val(x), next(nullptr) {}\n *     ListNode(int x, ListNode *next) : val(x), next(next) {}\n * };\n */\nclass Solution {\npublic:\n    ListNode* removeNodes(ListNode* head) {\n        ListNode* cur = head;\n        stack<ListNode*> st;\n        while(cur != NULL) {\n            st.push(cur);\n            cur = cur->next;\n        }\n\n        cur = st.top();\n        st.pop();\n        int max_val = cur->val;\n        ListNode* res = new ListNode(max_val);\n\n        while(!st.empty()) {\n            cur = st.top();\n            st.pop();\n            if(cur->val < max_val)\n                continue;  //this node is ignored.\n            else {\n                ListNode* newnode = new ListNode(cur->val);\n                newnode->next = res;\n                res = newnode;\n                max_val = cur->val;\n            };\n        }\n        return res;\n    }\n};","compare_result":"11111111111111111111111111111111","title_slug":"remove-nodes-from-linked-list","has_notes":false,"flag_type":1}