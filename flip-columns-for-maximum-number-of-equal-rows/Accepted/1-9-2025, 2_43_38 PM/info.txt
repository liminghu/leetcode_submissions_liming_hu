{"id":1503470644,"question_id":1147,"lang":"cpp","lang_name":"C++","time":"4Â weeks","timestamp":1736462618,"status":10,"status_display":"Accepted","runtime":"25 ms","url":"/submissions/detail/1503470644/","is_pending":"Not Pending","title":"Flip Columns For Maximum Number of Equal Rows","memory":"74.8 MB","code":"class Solution {\npublic:\n    int maxEqualRowsAfterFlips(vector<vector<int>>& matrix) {\n        int m = matrix.size();\n        int n = matrix[0].size();\n        unordered_map<string, int> patternFreq;\n        for(auto& currow: matrix) {\n            string pattern = \"\";\n            for(int col=0; col<currow.size(); col++) {\n                if(currow[0] == currow[col])\n                    pattern += \"T\";\n                else\n                    pattern += \"F\";\n            }\n            patternFreq[pattern]++;\n        }\n        int maxFreq = 0;\n        for(auto& entry: patternFreq) {\n            maxFreq = max(entry.second, maxFreq);\n        }\n        return maxFreq;\n    }\n};","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"flip-columns-for-maximum-number-of-equal-rows","has_notes":false,"flag_type":1}