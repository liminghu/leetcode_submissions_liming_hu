{"id":1270636119,"question_id":908,"lang":"cpp","lang_name":"C++","time":"8 months, 2 weeks","timestamp":1716916538,"status":10,"status_display":"Accepted","runtime":"4 ms","url":"/submissions/detail/1270636119/","is_pending":"Not Pending","title":"Middle of the Linked List","memory":"8.7 MB","code":"/**\n * Definition for singly-linked list.\n * struct ListNode {\n *     int val;\n *     ListNode *next;\n *     ListNode() : val(0), next(nullptr) {}\n *     ListNode(int x) : val(x), next(nullptr) {}\n *     ListNode(int x, ListNode *next) : val(x), next(next) {}\n * };\n */\nclass Solution {\npublic:\n    ListNode* middleNode(ListNode* head) {\n        ListNode* fast;\n        ListNode* slow;\n        if(head == nullptr)\n            return head;\n        if(head->next == nullptr) \n            return head;\n        if(head->next->next == nullptr) \n            return head->next;\n        \n        fast = head;\n        slow = head;\n        while( fast != nullptr && fast->next != nullptr) {\n            slow = slow->next;\n            fast = fast->next->next;\n        }\n\n        return slow;\n    }\n};","compare_result":"111111111111111111111111111111111111","title_slug":"middle-of-the-linked-list","has_notes":false,"flag_type":1}