{"id":1314546438,"question_id":647,"lang":"cpp","lang_name":"C++","time":"7Â months","timestamp":1720486779,"status":10,"status_display":"Accepted","runtime":"1276 ms","url":"/submissions/detail/1314546438/","is_pending":"Not Pending","title":"Palindromic Substrings","memory":"420.2 MB","code":"class Solution {\npublic:\n/*\nGiven a string s, return the number of palindromic substrings in it.\nA string is a palindrome when it reads the same backward as forward.\nA substring is a contiguous sequence of characters within the string.\n*/\n    int countSubstrings(string s) { //1 <= s.length <= 1000\n        int sz = s.length();\n        if( sz <= 1 )\n            return sz;\n        \n        //dp\n        vector<vector<int>> dp(sz+1, vector<int>(sz+1, 0));   //dp[i][j]: numbers of valid palindroic strings from start i to end j.\n        for(int i=0; i<sz; i++) {\n            dp[i][i] = 1;   //length is 1.\n        };\n\n        for(int length=2; length<=sz; length++) {  //3\n            for(int i=0; i+length-1<sz; i++) { //start. //0+3-1<3\n                dp[i][i+length-1] = dp[i][i+length-2]+dp[i+1][i+length-1]- dp[i+1][i+length-2]+isValidPalindromic(s, i, i+length-1);\n            }\n        };\n\n        return dp[0][sz-1];        \n    }\n\n    int isValidPalindromic(string s, int start, int end) {\n        \n        if(start == end)\n            return 1;\n        while( start < end ) {\n            if(s[start]!= s[end])\n                return 0;\n            start++;\n            end--;\n        }\n        return 1;\n    }\n};","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"palindromic-substrings","has_notes":false,"flag_type":1}