{"id":1379245884,"question_id":402,"lang":"cpp","lang_name":"C++","time":"5Â months","timestamp":1725481450,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/1379245884/","is_pending":"Not Pending","title":"Remove K Digits","memory":"N/A","code":"/*\nGiven string num representing a non-negative integer num, and an integer k, \nreturn the smallest possible integer after removing k digits from num.\n1 <= k <= num.length <= 105\nnum consists of only digits.\nnum does not have any leading zeros except for the zero itself.\n*/\nclass Solution {\npublic:\n    string removeKdigits(string num, int k) {\n        int n = num.length();\n        if( k == n )\n            return \"0\";\n        \n        vector<bool> removed(n, false);\n\n        int count = 0;\n        for(int i=0; i<n; i++) {\n            if(removed[i])\n                continue;\n            if(count == k)\n                break;\n            if(num[i]>=num[i+1] && removed[i]== false && removed[i+1]== false && num[i] != '0')\n                removed[i] = true;\n            else\n                removed[i+1] = true;\n            count++;\n        }\n\n        string ans = \"\";\n        for(int i=0; i<n; i++) {\n            if(removed[i]!=true)\n                ans.push_back(num[i]);\n        };\n        while(ans[0] == '0')\n            ans.erase(0, 1);\n        return ans;\n    }\n};","compare_result":"1110100100011111101111000000101111000111100","title_slug":"remove-k-digits","has_notes":false,"flag_type":1}