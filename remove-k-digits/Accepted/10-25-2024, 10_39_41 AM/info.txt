{"id":1433583304,"question_id":402,"lang":"cpp","lang_name":"C++","time":"3 months, 2 weeks","timestamp":1729877981,"status":10,"status_display":"Accepted","runtime":"3 ms","url":"/submissions/detail/1433583304/","is_pending":"Not Pending","title":"Remove K Digits","memory":"10.2 MB","code":"/*\nGiven string num representing a non-negative integer num, and an integer k, \nreturn the smallest possible integer after removing k digits from num.\n1 <= k <= num.length <= 105\nnum consists of only digits.\nnum does not have any leading zeros except for the zero itself.\n*/\nclass Solution {\npublic:\n    string removeKdigits(string num, int k) {\n        if( k >= num.size() )\n            return \"0\";\n        stack<char> Stack;\n        int count = 0;\n        for(auto ch:num) {\n            if(Stack.empty() || Stack.top() <= ch)\n                Stack.push(ch);\n            else {\n                while(!Stack.empty() && Stack.top() > ch && count <k) {\n                    Stack.pop();\n                    count++;\n                }\n                Stack.push(ch);\n            }\n        }\n \n        for(int i=0; i<k-count; i++) \n            Stack.pop();\n      \n        string ret;\n        while(!Stack.empty()) {\n            ret.push_back(Stack.top());\n            Stack.pop();\n        }\n \n        while(ret != \"\" && ret.back() == '0')\n            ret.pop_back();\n        //cout << \"test1\"<< endl;\n        reverse(ret.begin(), ret.end());\n\n        if(ret==\"\")\n            ret = \"0\";\n\n        return ret;\n    \n    /*    string ans = \"\";\n        for(char &c:num) {\n            while(ans.size() && ans.back() > c && k ) {\n                ans.pop_back();\n                k--;\n            }\n            if( ans.size() || c != '0' ) //push the first non '0', or '0' if not leading.\n                ans.push_back(c);\n        }\n        while(ans.size() && k--) {         // <-------this look is to make sure we fulfil the deletion condition\n            ans.pop_back();\n        }\n        return ( ans == \"\" )? \"0\" : ans;*/\n \n \n \n /*       int n = num.length();\n        if( k == n )\n            return \"0\";        \n        if(k == 0)\n            return num;\n        \n        string ans = \"\";\n        stack<char> st; //top is the maximum.\n        st.push(num[0]); ////n>=1\n        for(int i=1; i<n; i++) {\n            while(k>0 && !st.empty() && num[i] < st.top()) { //pop/remove greater numbers.\n                st.pop();\n                k--;\n            };\n            st.push(num[i]);\n            // popping preceding zeroes\n            if(st.size() == 1 && num[i] == '0') //if we push a \"0\" and only one element.\n                st.pop();\n\n        }\n\n        while(k>0 && !st.empty()) {\n            st.pop();\n            k--;\n        }\n        while(!st.empty()) {\n            ans.push_back( st.top() ); //maximum.\n            st.pop();\n        }\n        reverse(ans.begin(), ans.end());\n\n\n        while(ans[0] == '0' && ans.length() > 1)\n            ans.erase(0, 1);\n\n        if(ans.length() == 0)\n            return \"0\";\n\n        return ans;*/\n    }\n};","compare_result":"1111111111111111111111111111111111111111111","title_slug":"remove-k-digits","has_notes":false,"flag_type":1}