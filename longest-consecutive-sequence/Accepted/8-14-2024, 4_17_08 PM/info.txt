{"id":1355925773,"question_id":128,"lang":"cpp","lang_name":"C++","time":"5 months, 3 weeks","timestamp":1723677428,"status":10,"status_display":"Accepted","runtime":"121 ms","url":"/submissions/detail/1355925773/","is_pending":"Not Pending","title":"Longest Consecutive Sequence","memory":"74.8 MB","code":"/*\nGiven an unsorted array of integers nums, return the length of the longest consecutive elements sequence.\nYou must write an algorithm that runs in O(n) time.\n*/\nclass Solution {\npublic:\n   /* unordered_map<int,int> Father;\n    int FindFather(int x) {\n        if(Father[x]!=x) \n            Father[x] = FindFather(Father[x]);\n        return Father[x];\n    }\n    void Union(int x, int y) {\n        x = Father[x];\n        y = Father[y];\n        if(x<y) \n            Father[x] = y;\n        else\n            Father[y] = x;\n    }*/\n    int longestConsecutive(vector<int>& nums) {\n        /*\n            0 <= nums.length <= 105\n            -109 <= nums[i] <= 109\n        */\n\n       /* unordered_set<int> nums2;\n        for(int i=0; i<nums.size(); i++) {\n            nums2.insert(nums[i]);\n            int x = nums[i];\n\n            if(Father.find(x)==Father.end()) {\n                Father[x] = x;\n            } else\n                continue;\n\n            if(Father.find(x-1) != Father.end() && FindFather(x-1)!= FindFather(x))\n                Union(x-1, x);\n            if(Father.find(x+1) != Father.end() && FindFather(x+1)!= FindFather(x))\n                Union(x+1, x);   \n        }\n\n        //compress path.\n        for(int x:nums2) {\n            Father[x] = FindFather(x);\n        }\n        unordered_map<int, int> count;\n        for(int x:nums2) {\n            count[Father[x]]++;\n        }\n        int res = 0;\n        for(auto c:count) {\n            res = max(res, c.second);\n        }\n\n        return res;*/\n\n        unordered_set<int> s(nums.begin(), nums.end());\n        int res = 0;\n        for(int x:s) {\n            if(s.find(x-1)== s.end()) { //x is the head.\n                int count = 0;\n                while(s.find(x)!= s.end()) {\n                    count++;\n                    x++;\n                }\n                res = max(res, count);\n            }\n        }\n        return res;\n\n    }\n};","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"longest-consecutive-sequence","has_notes":false,"flag_type":1}