{"id":1286695483,"question_id":747,"lang":"cpp","lang_name":"C++","time":"7 months, 4 weeks","timestamp":1718257516,"status":10,"status_display":"Accepted","runtime":"3 ms","url":"/submissions/detail/1286695483/","is_pending":"Not Pending","title":"Min Cost Climbing Stairs","memory":"16.3 MB","code":"class Solution {\npublic:\n    int minCostClimbingStairs(vector<int>& cost) {\n        int sz = cost.size();\n        \n        int ans = 0;\n        //if(sz==2) {\n        //    ans = min(cost[0], cost[1]);\n        //    return ans;\n        //}\n        \n        vector<int> dp_total(sz+1, 0);\n        dp_total[0] = 0;\n        dp_total[1] = 0;\n        dp_total[2] = min(cost[0], cost[1]);\n        //dp_total[2] = min(dp_total[0]+cost[2], dp_total[1]);\n        //dp_total[3] = min(dp_total[1]+cost[3], dp_total[2]);\n        for(int i=2; i<sz+1; i++) {\n            int takeOneStep = dp_total[i - 1] + cost[i - 1];\n            int takeTwoSteps = dp_total[i - 2] + cost[i - 2];\n            dp_total[i] = min(takeOneStep, takeTwoSteps);\n        }\n        \n        ans = dp_total[sz];\n        return ans;\n        \n        \n    }\n};","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"min-cost-climbing-stairs","has_notes":false,"flag_type":1}