{"id":1414317652,"question_id":264,"lang":"cpp","lang_name":"C++","time":"4Â months","timestamp":1728271261,"status":10,"status_display":"Accepted","runtime":"9 ms","url":"/submissions/detail/1414317652/","is_pending":"Not Pending","title":"Ugly Number II","memory":"11.6 MB","code":"/*\nAn ugly number is a positive integer whose prime factors are limited to 2, 3, and 5.\nGiven an integer n, return the nth ugly number.\n\nExample 1:\nInput: n = 10\nOutput: 12\nExplanation: [1, 2, 3, 4, 5, 6, 8, 9, 10, 12] is the sequence of the first 10 ugly numbers.\n\nExample 2:\nInput: n = 1\nOutput: 1\nExplanation: 1 has no prime factors, therefore all of its prime factors are limited to 2, 3, and 5.\n \nConstraints:\n1 <= n <= 1690\n*/\nclass Solution {\npublic:\n    int nthUglyNumber(int n) {\n        int i=0;\n        int j=0;\n        int k=0;\n        vector<int> rets({1});\n        for(int t=0; t<n-1; t++) {\n            int cur = min(rets[i]*2, min(rets[j]*3, rets[k]*5));\n            rets.push_back(cur);\n            if(cur == rets[i]*2)\n                i++;\n            if(cur == rets[j]*3)\n                j++;\n            if(cur == rets[k]*5)\n                k++;                                \n        }\n        return rets.back();\n    }\n};","compare_resulttitle_slug":"ugly-number-ii","has_notes":false,"flag_type":1}