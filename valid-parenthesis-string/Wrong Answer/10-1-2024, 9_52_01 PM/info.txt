{"id":1408944770,"question_id":678,"lang":"cpp","lang_name":"C++","time":"4 months, 1 week","timestamp":1727844721,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/1408944770/","is_pending":"Not Pending","title":"Valid Parenthesis String","memory":"N/A","code":"/*\nGiven a string s containing only three types of characters: '(', ')' and '*', return true if s is valid.\n\nThe following rules define a valid string:\n\nAny left parenthesis '(' must have a corresponding right parenthesis ')'.\nAny right parenthesis ')' must have a corresponding left parenthesis '('.\nLeft parenthesis '(' must go before the corresponding right parenthesis ')'.\n'*' could be treated as a single right parenthesis ')' or a single left parenthesis '(' or an empty string \"\".\n1 <= s.length <= 100\ns[i] is '(', ')' or '*'. \n*/\nclass Solution {\npublic:\n    bool checkValidString(string s) {\n        int countMax = 0; //max # of unmatched '(', try to use * as '(' if possible.\n        int coutMin = 0;  //min # of unmatched '(', try to use * as ')' if possible. \n        for(auto ch: s) {\n            if(ch=='(') {\n                countMax++;\n                coutMin++;\n            } else if(ch==')') {\n                countMax--;\n                coutMin--;                \n            } else {\n                countMax++;\n                coutMin--;\n                if(countMax < 0 )\n                    return false;                    \n            }\n        }\n        return coutMin <= 0;\n    }\n};","compare_result":"11111010111110111111110110010101010110011110110011011111010000101111100110011111110","title_slug":"valid-parenthesis-string","has_notes":false,"flag_type":1}