{"id":1432900766,"question_id":393,"lang":"cpp","lang_name":"C++","time":"3 months, 2 weeks","timestamp":1729813009,"status":10,"status_display":"Accepted","runtime":"0 ms","url":"/submissions/detail/1432900766/","is_pending":"Not Pending","title":"UTF-8 Validation","memory":"16.8 MB","code":"class Solution {\npublic:\n    bool validUtf8(vector<int>& data) {\n        int numberofBytes = 0;\n        int mask1 = 1 << 7; //mask to check the most significant bit.\n        int mask2 = 1 << 6; //mask to check the most 2 significant bits.\n\n        for(int i=0; i<data.size(); i++) {\n            if(numberofBytes == 0) { //we're starting\n                int mask = 1 << 7;\n                while( (mask & data[i]) != 0) {//1\n                    numberofBytes++;\n                    mask = mask >> 1;\n                };\n\n                if(numberofBytes == 0) { //one byte utf8\n                    continue;\n                }\n                if(numberofBytes > 4 || numberofBytes == 1)\n                    return false;\n\n            } else {\n                // data[i] should have most significant bit set and\n                // second most significant bit unset. So, we use the two masks\n                // to make sure this is the case.\n                if( !( ( data[i] & mask1 ) != 0 && ( mask2 & data[i] ) == 0 ) ) {\n                    return false;\n                }                \n            }\n            numberofBytes--; // We reduce the number of bytes to process by 1 after each integer.\n        }\n        return numberofBytes == 0;\n    }\n};","compare_result":"11111111111111111111111111111111111111111111111111111","title_slug":"utf-8-validation","has_notes":false,"flag_type":1}