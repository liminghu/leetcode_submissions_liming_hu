{"id":1479668811,"question_id":990,"lang":"cpp","lang_name":"C++","time":"1 month, 3 weeks","timestamp":1734291921,"status":10,"status_display":"Accepted","runtime":"0 ms","url":"/submissions/detail/1479668811/","is_pending":"Not Pending","title":"Verifying an Alien Dictionary","memory":"12.3 MB","code":"class Solution {\n    char dict[26];\npublic:\n    bool isAlienSorted(vector<string>& words, string order) {\n        for(int i=0; i<order.length(); i++) {\n            dict[ order[i]-'a'] = i;\n        };\n        for(int i=0; i<words.size()-1; i++) {\n            if(compareWord(words[i], words[i+1]))\n                continue;\n            else\n                return false;\n        }\n        return true;\n    }\n    bool compareWord(string a, string b) {\n        int i=0;\n        int j = 0;\n        while(i<a.length() && j<b.length()) {\n            if(dict[a[i]-'a'] == dict[b[j]-'a']) {\n                i++;\n                j++;\n            } else \n                return dict[a[i]-'a'] < dict[b[j]-'a'];\n        };\n        return a.length() <= b.length();\n    }\n};","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"verifying-an-alien-dictionary","has_notes":false,"flag_type":1}