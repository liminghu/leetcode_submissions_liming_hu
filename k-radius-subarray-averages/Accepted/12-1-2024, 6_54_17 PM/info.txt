{"id":1467918984,"question_id":2211,"lang":"cpp","lang_name":"C++","time":"2 months, 1 week","timestamp":1733108057,"status":10,"status_display":"Accepted","runtime":"7 ms","url":"/submissions/detail/1467918984/","is_pending":"Not Pending","title":"K Radius Subarray Averages","memory":"134.4 MB","code":"class Solution {\npublic:\n    vector<int> getAverages(vector<int>& nums, int k) {\n        int n = nums.size();\n        vector<int> avg(n, -1);\n        long long sum = 0;\n        for(int i=0; i<n && i<=2*k; i++) {\n           sum += nums[i]; \n        }\n        cout << sum << endl;\n        for(int i=k; i+k<n; i++) {\n            //cout << sum << endl;\n            avg[i] = floor(sum*1.0/(2*k+1.0) );\n            if(i+k+1<n)\n                sum += (nums[i+k+1] - nums[i-k]);\n        };\n        return avg;\n    }\n};","compare_result":"1111111111111111111111111111111111111111","title_slug":"k-radius-subarray-averages","has_notes":false,"flag_type":1}