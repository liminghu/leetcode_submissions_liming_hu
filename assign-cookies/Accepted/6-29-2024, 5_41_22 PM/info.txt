{"id":1304284655,"question_id":455,"lang":"cpp","lang_name":"C++","time":"7 months, 1 week","timestamp":1719708082,"status":10,"status_display":"Accepted","runtime":"15 ms","url":"/submissions/detail/1304284655/","is_pending":"Not Pending","title":"Assign Cookies","memory":"20.6 MB","code":"/*\nAssume you are an awesome parent and want to give your children some cookies. But, you should give each child at most one cookie.\n\nEach child i has a greed factor g[i], which is the minimum size of a cookie that the child will be content with; and each cookie j \nhas a size s[j]. If s[j] >= g[i], we can assign the cookie j to the child i, and the child i will be content. Your goal is to \nmaximize the number of your content children and output the maximum number.\n*/\nclass Solution {\npublic:\n    int findContentChildren(vector<int>& g, vector<int>& s) {   //1 <= g.length <= 3 * 104\n                                                                //0 <= s.length <= 3 * 104\n                                                                //1 <= g[i], s[j] <= 231 - 1\n        int num_children = g.size();\n        int num_cookies = s.size();\n        sort(g.begin(), g.end());\n        sort(s.begin(), s.end());\n        int ans = 0;\n        //If s[j] >= g[i], we can assign the cookie j to the child i, and the child i will be content.\n        int i = num_children -1;\n        int j = num_cookies -1;   \n        while( i>=0 && j>=0){ //g j    //s i\n                if( s[j] >= g[i] ) { //child i is content.\n                    ans++;\n                    //g[i] = s[num_cookies-1] + 1; //this children is marked as feeded.\n                    //s[j] = g[0] - 1; //this cookie is marked as used.\n                    j--;\n                }; \n                i--;\n        }\n        return ans;\n        \n    }\n};","compare_result":"111111111111111111111","title_slug":"assign-cookies","has_notes":false,"flag_type":1}