{"id":1524674333,"question_id":493,"lang":"cpp","lang_name":"C++","time":"1Â week, 1Â day","timestamp":1738175969,"status":10,"status_display":"Accepted","runtime":"375 ms","url":"/submissions/detail/1524674333/","is_pending":"Not Pending","title":"Reverse Pairs","memory":"148.6 MB","code":"class Solution {\npublic:\n    int reversePairs(vector<int>& nums) {\n        /*  A reverse pair is a pair (i, j) where:\n            0 <= i < j < nums.length and\n            nums[i] > 2 * nums[j].\n        */\n        int n = nums.size();\n        return mergesortCount(nums, 0, n-1);\n    }\n    int mergesortCount(vector<int>& nums, int start, int end) {\n        if(start<end) {\n            int mid = (start+end)/2;\n            int count = mergesortCount(nums, start, mid) + mergesortCount(nums, mid+1, end);\n            int j = mid+1;\n            for(int i=start; i<=mid; i++) {\n                while(j<=end && nums[i]> 2LL*nums[j])\n                    j++;\n                count += j-(mid+1);\n            }\n            merge(nums, start, mid, end);\n            return count;\n        } else\n            return 0;\n    }\n    void merge(vector<int>& nums, int start, int mid, int end) {\n        int n1 = mid-start+1;\n        int n2 = end-mid;\n        vector<int> L(n1, 0), R(n2, 0);\n        for(int i=0; i<n1; i++)\n            L[i] = nums[start+i];\n        for(int j=0; j<n2; j++)\n            R[j] = nums[mid+1+j];\n        int i=0, j=0;\n        for(int k=start; k<=end; k++) {\n            if(j>=n2 || (i<n1 && L[i]<=R[j]))\n                nums[k] = L[i++];\n            else\n                nums[k] = R[j++];\n        };        \n    }\n};","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"reverse-pairs","has_notes":false,"flag_type":1}