{"id":1430854752,"question_id":1617,"lang":"cpp","lang_name":"C++","time":"3Â months, 2Â weeks","timestamp":1729632217,"status":10,"status_display":"Accepted","runtime":"41 ms","url":"/submissions/detail/1430854752/","is_pending":"Not Pending","title":"Stone Game IV","memory":"13.6 MB","code":"/*\nAlice and Bob take turns playing a game, with Alice starting first.\nInitially, there are n stones in a pile. On each player's turn, that player makes a move consisting of \nremoving any non-zero square number of stones in the pile.\nAlso, if a player cannot make a move, he/she loses the game.\nGiven a positive integer n, return true if and only if Alice wins the game otherwise return false, \nassuming both players play optimally.\n\n Example 1:\nInput: n = 1\nOutput: true\nExplanation: Alice can remove 1 stone winning the game because Bob doesn't have any moves.\n\nExample 2:\nInput: n = 2\nOutput: false\nExplanation: Alice can only remove 1 stone, after that Bob removes the last one winning the game (2 -> 1 -> 0).\n\nExample 3:\nInput: n = 4\nOutput: true\nExplanation: n is already a perfect square, Alice can win with one move, removing 4 stones (4 -> 0).\n \nConstraints:\n1 <= n <= 105\n*/\nclass Solution {\npublic:\n    int dp[100001];\n    bool winnerSquareGame(int n) {\n        for(int i=1; i<=n; i++)\n            dp[i] = -1;\n        return solve(n);\n    }\n    bool solve(int n) {\n        if(dp[n] != -1)\n            return dp[n];\n        for(int i=1; i*i<=n; i++) {\n            if(solve(n-i*i)==false) {\n                dp[n] = 1;\n                return true;\n            }\n        }\n        dp[n] = 0;\n        return false;\n    }\n};","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"stone-game-iv","has_notes":false,"flag_type":1}