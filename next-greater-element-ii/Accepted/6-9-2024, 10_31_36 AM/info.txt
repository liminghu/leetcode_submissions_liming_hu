{"id":1283058437,"question_id":503,"lang":"cpp","lang_name":"C++","time":"8Â months","timestamp":1717954296,"status":10,"status_display":"Accepted","runtime":"23 ms","url":"/submissions/detail/1283058437/","is_pending":"Not Pending","title":"Next Greater Element II","memory":"26.5 MB","code":"class Solution {\npublic:\n    vector<int> nextGreaterElements(vector<int>& nums) { //Given a circular integer array nums (i.e., the next element of nums[nums.length - 1] is nums[0]), return the next greater number for every element in nums.\n        //The next greater number of a number x is the first greater number to its traversing-order next in the array, which means you could search circularly to find its next greater number. If it doesn't exist, return -1 for this number.\n        int n = nums.size();\n        vector<int> ans(n, -1);\n        stack<int> stack;\n        for(int i=2*n-1; i>=0; i--) {\n            while(!stack.empty() && nums[stack.top()]<=nums[i%n]) {\n                stack.pop();\n            }\n            ans[i%n] = stack.empty()? -1: nums[stack.top()];\n            stack.push(i%n); \n        }\n\n        return ans;\n    }\n};","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"next-greater-element-ii","has_notes":false,"flag_type":1}