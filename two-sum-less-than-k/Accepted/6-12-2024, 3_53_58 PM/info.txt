{"id":1286455021,"question_id":1083,"lang":"cpp","lang_name":"C++","time":"7 months, 4 weeks","timestamp":1718232838,"status":10,"status_display":"Accepted","runtime":"6 ms","url":"/submissions/detail/1286455021/","is_pending":"Not Pending","title":"Two Sum Less Than K","memory":"12.6 MB","code":"class Solution {\npublic:\n/*\n    Given an array nums of integers and integer k, return the maximum sum such that \n    there exists i < j with nums[i] + nums[j] = sum and sum < k. If no i, j exist satisfying this equation, return -1.\n*/\n    int twoSumLessThanK(vector<int>& nums, int k) { //1 <= nums.length <= 100 1 <= nums[i] <= 1000 1 <= k <= 2000\n        int ans = -1;\n        int count[1001] = {}; //first element will be ignored.\n        for(int num: nums) {\n            count[num]++;\n        };\n\n        int low = 1;\n        int high = 1000;\n        while( low <= high ) {\n            if( low+high >=k  || count[high] == 0  ) {\n                high--;\n            } else {\n                if( (count[low] > 0 && low<high ) || \n                    (count[low] > 1 && low==high) ) {\n                        ans = max(ans, low+high);\n                    };\n                    low++;\n            }\n        }\n        return ans;\n    }\n};","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"two-sum-less-than-k","has_notes":false,"flag_type":1}