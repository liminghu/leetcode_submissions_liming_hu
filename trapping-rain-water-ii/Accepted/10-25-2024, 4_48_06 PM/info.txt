{"id":1433792433,"question_id":407,"lang":"cpp","lang_name":"C++","time":"3 months, 2 weeks","timestamp":1729900086,"status":10,"status_display":"Accepted","runtime":"86 ms","url":"/submissions/detail/1433792433/","is_pending":"Not Pending","title":"Trapping Rain Water II","memory":"24.5 MB","code":"typedef vector<int> VI;\nclass Solution {\npublic:\n    int trapRainWater(vector<vector<int>>& heightMap) {\n        int m = heightMap.size();\n        int n = heightMap[0].size();\n        priority_queue<VI, vector<VI>, greater<>> pq;\n        auto visited = vector<vector<int>>(m, vector<int>(n,0));\n        auto dirs = vector<pair<int,int>>( { {1,0},{-1,0},{0,1},{0,-1} } );\n        for(int i=0; i<m; i++) {\n            for(int j=0; j<n; j++) {\n                if(i==0|| i==m-1|| j==0 || j==n-1) {\n                    pq.push({heightMap[i][j], i, j});\n                    visited[i][j] = 1;\n                }\n            }\n        }\n        int ret = 0;\n        int cur_height = INT_MIN;\n        while(!pq.empty()) {\n            int h = pq.top()[0];\n            int x = pq.top()[1];\n            int y = pq.top()[2];\n            pq.pop();\n            if(h>cur_height)\n                cur_height = h;\n            ret += cur_height-h;\n            for(int k=0; k<4; k++) {\n                int i=x+dirs[k].first;\n                int j=y+dirs[k].second;\n                if(i<0 || i>=m || j<0 || j>=n)\n                    continue;\n                if(visited[i][j])\n                    continue;\n                visited[i][j] = 1;\n                pq.push({heightMap[i][j], i, j});\n            }\n        }\n        return ret;\n    }\n};","compare_result":"111111111111111111111111111111111111111111","title_slug":"trapping-rain-water-ii","has_notes":false,"flag_type":1}