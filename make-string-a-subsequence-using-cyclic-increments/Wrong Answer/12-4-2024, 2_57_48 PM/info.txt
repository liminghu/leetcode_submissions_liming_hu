{"id":1470548028,"question_id":3018,"lang":"cpp","lang_name":"C++","time":"2Â months","timestamp":1733353068,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/1470548028/","is_pending":"Not Pending","title":"Make String a Subsequence Using Cyclic Increments","memory":"N/A","code":"class Solution {\npublic:\n    bool canMakeSubsequence(string str1, string str2) {\n        int n = str1.length();\n        int m = str2.length();\n        int left = 0;\n        int right = n-1;\n        while(right-left+1 >= m) {\n            if(isSubSequence(str1, str2))\n                return true;\n            string new_str1 = change(str1, left, right);\n            if(isSubSequence(new_str1, str2))\n                return true;\n            left++;\n        };\n        return false;\n    }\n    string change(string str1, int left, int right) {\n        for(int i=left; i<=right; i++) {\n            str1[i] = str1[i]+1>'z'? 'a':str1[i]+1;\n        }\n        return str1;\n    }\n    bool isSubSequence(string s1, string s2) {\n        int m = s1.length();\n        int n = s2.length();\n        int i = 0;\n        int j = 0;\n        while(i<m && j<n) {\n            if(s1[i] == s2[j]) \n                j++;\n            i++;\n        }\n        return j == n;\n    } \n};","compare_resulttitle_slug":"make-string-a-subsequence-using-cyclic-increments","has_notes":false,"flag_type":1}