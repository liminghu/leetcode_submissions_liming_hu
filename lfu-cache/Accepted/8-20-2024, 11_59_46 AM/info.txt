{"id":1362770152,"question_id":460,"lang":"cpp","lang_name":"C++","time":"5 months, 2 weeks","timestamp":1724180386,"status":10,"status_display":"Accepted","runtime":"420 ms","url":"/submissions/detail/1362770152/","is_pending":"Not Pending","title":"LFU Cache","memory":"195.1 MB","code":"class LFUCache {\nprivate:\n    unordered_map<int, int> key2value_;\n    unordered_map<int, list<int>::iterator> key2iter_; //key.\n    unordered_map<int,int> key2freq_;\n    unordered_map<int, list<int>> freq2list_; //frequency\n    int cap_;\n    int minfreq_;\npublic:\n    LFUCache(int capacity) {\n        cap_ = capacity;\n        minfreq_ = 0;\n    }\n    \n    int get(int key) {\n        if(key2value_.find(key) == key2value_.end())\n            return -1;\n        \n        int f = key2freq_[key];\n        freq2list_[f].erase(key2iter_[key]);\n\n        freq2list_[f+1].push_back(key);\n        key2iter_[key] = --freq2list_[f+1].end();\n        key2freq_[key] = f+1;\n        \n        if(freq2list_[minfreq_].size() == 0)\n            minfreq_++;\n        \n        return key2value_[key];\n    }\n    \n    void put(int key, int value) {\n        if( cap_ == 0 )\n            return;\n        if( get(key) != -1) { //all the related ds will be updated in get.\n            key2value_[key] = value;\n            return;\n        }\n\n        if(key2value_.size() == cap_) {\n            int k = freq2list_[minfreq_].front(); //key\n\n            freq2list_[minfreq_].pop_front();\n            key2value_.erase(k);\n            key2iter_.erase(k);\n            key2freq_.erase(k);\n\n        }\n\n            key2value_[key] = value;\n            key2freq_[key] = 1; \n            minfreq_ = 1;\n            freq2list_[1].push_back(key);\n       \n            key2iter_[key] = --freq2list_[1].end();\n        \n    }\n};\n\n/**\n * Your LFUCache object will be instantiated and called as such:\n * LFUCache* obj = new LFUCache(capacity);\n * int param_1 = obj->get(key);\n * obj->put(key,value);\n */","compare_result":"1111111111111111111111111","title_slug":"lfu-cache","has_notes":false,"flag_type":1}