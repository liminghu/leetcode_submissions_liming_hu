{"id":398814544,"question_id":84,"lang":"cpp","lang_name":"C++","time":"4 years, 4 months","timestamp":1600708321,"status":10,"status_display":"Accepted","runtime":"24 ms","url":"/submissions/detail/398814544/","is_pending":"Not Pending","title":"Largest Rectangle in Histogram","memory":"14.2 MB","code":"class Solution {\npublic:\n    int largestRectangleArea(vector<int>& heights) {\n        //https://www.youtube.com/watch?v=TH9UaZ6JGcA&t=182s\n        //increasing stack.\n        //less, calculate.\n        \n        if( heights.size() == 0) return 0;\n        if(heights.size()==1) return heights[0];\n        \n        int ans=0;\n        heights.push_back(0);\n        stack<int> mono_idx;\n        \n        \n        for(int i=0; i<heights.size(); i++) {\n            while(!mono_idx.empty() && heights[mono_idx.top()]>heights[i]) {\n                //start decreasing.\n                int h = heights[mono_idx.top()]; mono_idx.pop();\n                int l = mono_idx.empty()? -1: mono_idx.top(); //when empty i-(-1)-1 = i.\n                ans = max(ans, h*(i-l-1)); //does not count i. \n            }\n            mono_idx.push(i);\n        }\n        return ans;\n        \n    }\n};","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"largest-rectangle-in-histogram","has_notes":false,"flag_type":1}