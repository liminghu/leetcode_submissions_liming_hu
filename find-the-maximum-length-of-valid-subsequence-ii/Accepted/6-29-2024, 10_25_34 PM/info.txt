{"id":1304511300,"question_id":3491,"lang":"cpp","lang_name":"C++","time":"7 months, 1 week","timestamp":1719725134,"status":10,"status_display":"Accepted","runtime":"109 ms","url":"/submissions/detail/1304511300/","is_pending":"Not Pending","title":"Find the Maximum Length of Valid Subsequence II","memory":"88.2 MB","code":"/*\nYou are given an integer array nums and a positive integer k.\nA subsequence sub of nums with length x is called valid if it satisfies:\n(sub[0] + sub[1]) % k == (sub[1] + sub[2]) % k == ... == (sub[x - 2] + sub[x - 1]) % k.\nReturn the length of the longest valid subsequence of nums.\n*/\nclass Solution {\npublic:\n    int maximumLength(vector<int>& nums, int k) {\n        int sz = nums.size();\n        vector<vector<int>> dp(sz, vector<int>(k, 0));\n\n        int ans = 0;\n        for(int i=0; i < sz; i++) {\n            for(int j=0; j<i; j++) {\n                int val = (nums[i]+nums[j]) % k;\n                dp[i][val] = dp[j][val] +1;\n                ans = max(ans, dp[i][val]);\n            }\n        }\n\n        return ans+1;\n\n        \n    }\n};","compare_resulttitle_slug":"find-the-maximum-length-of-valid-subsequence-ii","has_notes":false,"flag_type":1}