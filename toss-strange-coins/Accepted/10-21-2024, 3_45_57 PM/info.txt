{"id":1429809657,"question_id":1166,"lang":"cpp","lang_name":"C++","time":"3 months, 2 weeks","timestamp":1729550757,"status":10,"status_display":"Accepted","runtime":"21 ms","url":"/submissions/detail/1429809657/","is_pending":"Not Pending","title":"Toss Strange Coins","memory":"57.4 MB","code":"/*\nYou have some coins.  The i-th coin has a probability prob[i] of facing heads when tossed.\nReturn the probability that the number of coins facing heads equals target if you toss every coin exactly once.\n\n Example 1:\nInput: prob = [0.4], target = 1\nOutput: 0.40000\n\nExample 2:\nInput: prob = [0.5,0.5,0.5,0.5,0.5], target = 0\nOutput: 0.03125\n \nConstraints:\n1 <= prob.length <= 1000\n0 <= prob[i] <= 1\n0 <= target <= prob.length\nAnswers will be accepted as correct if they are within 10^-5 of the correct answer.\n*/\nclass Solution {\npublic:\n    double probabilityOfHeads(vector<double>& prob, int target) {\n        int n = prob.size();\n        //dp[i][j] represents the probability of getting j heads using the first i coins. \n        //dp[n][target] is our answer, where n is the total number of coins.\n        vector<vector<double>> dp(n+1,vector<double>(target+1, 0)); \n        dp[0][0] = 1; \n\n        for(int i=1; i<=n; i++) {\n            dp[i][0] = dp[i-1][0] * ( 1 - prob[i-1] );\n            for(int j = 1; j <= target && j <= i; j++) {\n                dp[i][j] = dp[i-1][j-1] * prob[i-1] + dp[i-1][j] * ( 1 - prob[i-1] );\n            }\n        }\n        return dp[n][target];\n    }\n};","compare_result":"1111111111111111111111111111","title_slug":"toss-strange-coins","has_notes":false,"flag_type":1}