{"id":1296238449,"question_id":46,"lang":"cpp","lang_name":"C++","time":"7 months, 2 weeks","timestamp":1719032577,"status":10,"status_display":"Accepted","runtime":"0 ms","url":"/submissions/detail/1296238449/","is_pending":"Not Pending","title":"Permutations","memory":"10.1 MB","code":"class Solution {\npublic:\n    vector<vector<int>> res;\n    vector<int> path;\n    vector<bool> used;\n\n//an array nums of distinct integers, return all the possible permutations\n    vector<vector<int>> permute(vector<int>& nums) { //1 <= nums.length <= 6; -10 <= nums[i] <= 10; All the integers of nums are unique.\n        used = vector<bool>(nums.size(), false);\n        backtrack(nums);\n        return res;\n    }\n\n    void backtrack(vector<int>& nums) {\n        if(path.size()== nums.size()) {\n            res.push_back(path);\n            return;\n        };\n\n        for(int i=0; i<nums.size(); i++) {\n            if(used[i]) continue;\n\n            used[i] = true;\n            path.push_back(nums[i]);\n            backtrack(nums);\n            path.pop_back();\n            used[i] = false;\n        }\n  \n    };\n};","compare_result":"11111111111111111111111111","title_slug":"permutations","has_notes":false,"flag_type":1}