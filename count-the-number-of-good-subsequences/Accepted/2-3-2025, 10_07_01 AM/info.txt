{"id":1530119193,"question_id":2683,"lang":"cpp","lang_name":"C++","time":"3 days, 22 hours","timestamp":1738606021,"status":10,"status_display":"Accepted","runtime":"674 ms","url":"/submissions/detail/1530119193/","is_pending":"Not Pending","title":"Count the Number of Good Subsequences","memory":"729.4 MB","code":"class Solution {\n    int M = 1e9+7;\npublic:\n    int countGoodSubsequences(string s) {//A subsequence of a string is good if it is not empty and the frequency of each one of its characters is the same.\n        vector<int> freq(26, 0);\n        int n = s.length();\n        long long ans = 0;\n        for(char c:s)\n            freq[c-'a']++;\n        int maxf = 0;\n        for(int f: freq) {\n            maxf = max(maxf, f);\n        };\n        vector<vector<int>> ncr(maxf+1, vector<int>(maxf+1, 0)); //n choose r\n        ncr[0][0] = 1;\n        for(int i=1; i<=maxf; i++) {\n            ncr[i][0] = 1;\n            for(int r=1; r<=maxf; r++) \n                ncr[i][r] = ( ncr[i-1][r-1] + ncr[i-1][r] ) % M;\n        };\n\n        for(int k=1; k<=maxf; k++) {\n            long long  prod = 1;\n            for(int i=0; i<26; i++) {\n                if(freq[i]>=k) { \n                    prod *= ( 1 + ncr[ freq[i] ][k] );//1: empty(do not choose i) + freq[i] choose k.\n                    prod %= M;\n                };\n            }\n            ans += prod-1; //-1: reduce all the empty combination\n            ans %= M;\n        }\n        return int(ans % M);   \n    }\n};","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"count-the-number-of-good-subsequences","has_notes":false,"flag_type":1}