{"id":1364022466,"question_id":1130,"lang":"cpp","lang_name":"C++","time":"5 months, 2 weeks","timestamp":1724281445,"status":10,"status_display":"Accepted","runtime":"32 ms","url":"/submissions/detail/1364022466/","is_pending":"Not Pending","title":"Last Stone Weight II","memory":"21.7 MB","code":"/*You are given an array of integers stones where stones[i] is the weight of the ith stone.\nWe are playing a game with the stones. On each turn, we choose any two stones and smash them \ntogether. Suppose the stones have weights x and y with x <= y. The result of this smash is:\nIf x == y, both stones are destroyed, and\nIf x != y, the stone of weight x is destroyed, and the stone of weight y has new weight y - x.\nAt the end of the game, there is at most one stone left.\nReturn the smallest possible weight of the left stone. If there are no stones left, return 0.\n*/\nclass Solution {\npublic:\n    int lastStoneWeightII(vector<int>& stones) {\n        /*  1 <= stones.length <= 30\n            1 <= stones[i] <= 100\n        */\n        unordered_set<int> set({0});\n        for(auto x:stones) {\n            auto set_temp = set;\n            set.clear();\n            for(auto s:set_temp) {\n                set.insert(s+x);\n                set.insert(s-x);\n            };\n        }\n\n        int res = INT_MAX;\n        for(auto x:set) {\n            if(x>=0 && x<res)\n                res = x;\n        }\n        return res;\n    }\n};","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"last-stone-weight-ii","has_notes":false,"flag_type":1}