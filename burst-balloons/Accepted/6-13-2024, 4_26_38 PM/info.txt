{"id":1287521761,"question_id":312,"lang":"cpp","lang_name":"C++","time":"7 months, 4 weeks","timestamp":1718321198,"status":10,"status_display":"Accepted","runtime":"108 ms","url":"/submissions/detail/1287521761/","is_pending":"Not Pending","title":"Burst Balloons","memory":"11.9 MB","code":"class Solution {\npublic:\n/*\nYou are given n balloons, indexed from 0 to n - 1. Each balloon is painted with a number on it represented by an array nums. \nYou are asked to burst all the balloons.\nIf you burst the ith balloon, you will get nums[i - 1] * nums[i] * nums[i + 1] coins. \nIf i - 1 or i + 1 goes out of bounds of the array, then treat it as if there is a balloon with a 1 painted on it.\nReturn the maximum coins you can collect by bursting the balloons wisely.\n*/\n//https://www.youtube.com/watch?v=z3hu2Be92UA\n    int maxCoins(vector<int>& nums) { //1 <= n <= 300; 0 <= nums[i] <= 100\n        int sz = nums.size();\n        //padding\n        nums.insert(nums.begin(), 1);\n        nums.push_back(1);\n\n        //mc[i][j]: maxCoins(nums[i..j]);\n        vector<vector<int>> mc(sz+2, vector<int>(sz+2, 0));\n        for(int l=1; l<=sz; l++) { //length\n            for(int i=1; i<=sz-l+1; i++) {\n                int j=i+l-1;\n                for(int k=i; k<=j; k++) {\n                    mc[i][j] = max(mc[i][j], mc[i][k-1]+mc[k+1][j]+nums[k]*nums[i-1]*nums[j+1]);\n                }\n            }\n        };\n        return mc[1][sz];\n    }\n};","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"burst-balloons","has_notes":false,"flag_type":1}