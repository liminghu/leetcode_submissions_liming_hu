{"id":1315436485,"question_id":16,"lang":"cpp","lang_name":"C++","time":"7Â months","timestamp":1720544863,"status":15,"status_display":"Runtime Error","runtime":"N/A","url":"/submissions/detail/1315436485/","is_pending":"Not Pending","title":"3Sum Closest","memory":"N/A","code":"class Solution {\npublic:\n/*\nGiven an integer array nums of length n and an integer target, find three integers in nums such that the sum is closest to target.\nReturn the sum of the three integers.\nYou may assume that each input would have exactly one solution.\n*/\n    int threeSumClosest(vector<int>& nums, int target) { //3 <= nums.length <= 500\n                                                         //-1000 <= nums[i] <= 1000\n                                                         //-104 <= target <= 104     \n        int sz = nums.size();\n\n        if(sz == 3)\n            return nums[0]+nums[1]+nums[2];\n\n\n\t\tint closest = INT_MAX;\n        sort(nums.begin(), nums.end()); //O(nlog(n)), worst(n^2)\n\t\tfor (int i = 0; i < nums.size(); i++) {\t\t\n\t\t\tint low = i+1;\n\t\t\tint high = nums.size()-1;\n\t\t\twhile( low < high ) {\n                int sum3 = nums[low] + nums[high] + nums[i];\n                if( abs(sum3-target) < abs(closest-target) )\n                    closest = sum3;\n\t\t\t\tif( sum3 < target) {\n\t\t\t\t\tlow++;\n\t\t\t\t} else if( sum3 > target ) {\n\t\t\t\t\thigh--;\n\t\t\t\t} else {\n\t\t\t\t\treturn closest;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t\t\n\t\treturn closest;\n        \n    }\n};","compare_result":"111111111100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000","title_slug":"3sum-closest","has_notes":false,"flag_type":1}