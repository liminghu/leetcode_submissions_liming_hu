{"id":1454710633,"question_id":635,"lang":"cpp","lang_name":"C++","time":"2 months, 3 weeks","timestamp":1731797226,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/1454710633/","is_pending":"Not Pending","title":"Design Log Storage System","memory":"N/A","code":"class LogSystem {\n    string min = \"2000:01:01:00:00:00\";\n    string max = \"2017:12:31:23:59:59\";\n    map<string, vector<int>> log_ids;\n    unordered_map<string, int> idx;\npublic:\n    LogSystem() {//Year:Month:Day:Hour:Minute:Second, for example, 2017:01:01:23:59:59\n        idx[\"Year\"]   = 5;\n        idx[\"Month\"]  = 8;\n        idx[\"Day\"]    = 11;\n        idx[\"Hour\"]   = 14;\n        idx[\"Minute\"] = 17;\n        idx[\"Second\"] = 18;\n    }\n    \n    void put(int id, string timestamp) {\n        //Year:Month:Day:Hour:Minute:Second, for example, 2017:01:01:23:59:59\n        if(log_ids.find(timestamp)==log_ids.end())\n            log_ids[timestamp].push_back(id);\n    }\n    \n    vector<int> retrieve(string start, string end, string granularity) {\n        int i = idx[granularity];\n        start = start.substr(0, i) + min.substr(i);\n        end =  end.substr(0, i) + max.substr(i);\n        vector<int> res;\n\n        auto left  = log_ids.lower_bound(start); //Returns an iterator pointing to the first element in the range [first,last) which does not compare less than val.\n        auto right = log_ids.upper_bound(end);\n        for(auto i = left; i != right; i=next(i)) {\n            for(auto id:i->second)\n                res.push_back(id);\n        }\n        return res;\n    }\n};\n\n/**\n * Your LogSystem object will be instantiated and called as such:\n * LogSystem* obj = new LogSystem();\n * obj->put(id,timestamp);\n * vector<int> param_2 = obj->retrieve(start,end,granularity);\n */","compare_result":"11111110111011111111111111111111111111111111111111111111111111111","title_slug":"design-log-storage-system","has_notes":false,"flag_type":1}