{"id":1312326909,"question_id":3453,"lang":"cpp","lang_name":"C++","time":"7Â months","timestamp":1720321588,"status":10,"status_display":"Accepted","runtime":"15 ms","url":"/submissions/detail/1312326909/","is_pending":"Not Pending","title":"Generate Binary Strings Without Adjacent Zeros","memory":"19.5 MB","code":"class Solution {\npublic:\n    vector<string> validStrings(int n) { //1 <= n <= 18\n        //A binary string x is valid if all substrings of x of length 2 contain at least one \"1\".\n        //n =1   [\"0\",\"1\"]\n        //n=2    [01 10 11]\n        //n=3     \"010\", \"011\", \"101\", \"110\", and \"111\"\n        //vector<string> cur_result;\n        //backtrack(n, 0);\n        vector<string> result;\n        vector<string> new_result;\n        if(n == 1) {\n            result.push_back(\"0\");\n            result.push_back(\"1\");\n            return result;\n        };\n\n        result = validStrings(n-1);\n        for(int i=0; i<result.size(); i++) {\n            string cur_result_i = result[i];\n            if(cur_result_i.size() == 0) {\n                new_result.push_back(\"0\");\n                new_result.push_back(\"1\");\n            } else {\n                if(cur_result_i[cur_result_i.length()-1] == '1') {\n                    new_result.push_back(cur_result_i+\"0\");\n                    new_result.push_back(cur_result_i+\"1\");\n                } else { //0\n                    new_result.push_back(cur_result_i+\"1\");\n                }\n            };\n        }\n        \n        return new_result;\n        \n    }\n \n};","compare_result":"11111111111111111111","title_slug":"generate-binary-strings-without-adjacent-zeros","has_notes":false,"flag_type":1}