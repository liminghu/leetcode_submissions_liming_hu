{"id":1355871828,"question_id":346,"lang":"cpp","lang_name":"C++","time":"5 months, 3 weeks","timestamp":1723671102,"status":10,"status_display":"Accepted","runtime":"16 ms","url":"/submissions/detail/1355871828/","is_pending":"Not Pending","title":"Moving Average from Data Stream","memory":"18.9 MB","code":"/*\nGiven a stream of integers and a window size, calculate the moving average of all integers in the sliding window.\nImplement the MovingAverage class:\nMovingAverage(int size) Initializes the object with the size of the window size.\ndouble next(int val) Returns the moving average of the last size values of the stream.\n*/\nclass MovingAverage {\nprivate:\n  int max_size;\n  int cur_size;\n  queue<int> stream;\n  double sum;\n\npublic:\n    MovingAverage(int size) {\n        max_size = size;\n        cur_size = 0; \n        sum = 0;\n    }\n    \n    double next(int val) {\n        double result = 0;\n        if (cur_size < max_size) {\n            cur_size++;\n        } else { \n            sum = sum - stream.front();\n            stream.pop();\n        }\n        stream.push(val);\n        sum = sum+ val;\n        result = sum;\n        return result/cur_size;\n    }\n};\n\n/**\n * Your MovingAverage object will be instantiated and called as such:\n * MovingAverage* obj = new MovingAverage(size);\n * double param_1 = obj->next(val);\n */","compare_result":"11111111111","title_slug":"moving-average-from-data-stream","has_notes":false,"flag_type":1}