{"id":1528169766,"question_id":2653,"lang":"cpp","lang_name":"C++","time":"5 days, 13 hours","timestamp":1738466983,"status":10,"status_display":"Accepted","runtime":"0 ms","url":"/submissions/detail/1528169766/","is_pending":"Not Pending","title":"Check if There is a Path With Equal Number of 0's And 1's","memory":"13.5 MB","code":"class Solution {\npublic:\n    bool isThereAPath(vector<vector<int>>& grid) {\n        int m = grid.size();\n        int n = grid[0].size();\n        const int expected = (m+n)/2;     //(3+3)/2 = 3\n        if( (m+n-1)%2==1) \n            return false;\n\n        vector<vector<int>> memo(n+1, vector<int>(2, 0));\n        for(int r=1; r<=m; r++) { //Let's iterate through grid and remember the minimum and the maximum number of 1-s we've seen for each tile.\n            for(int c=1; c<=n; c++) {\n                memo[c][0] = min(memo[c][0], memo[c-1][0]);\n                memo[c][1] = max(memo[c][1], memo[c-1][1]);\n                if(grid[r-1][c-1]==1) {\n                    memo[c][0]++;   //min\n                    memo[c][1]++;   //max\n                }\n            }\n        } \n        return memo[n][0]<=expected && expected<= memo[n][1];\n    }\n};","compare_result":"111111111111111111111111111111111111111111111","title_slug":"check-if-there-is-a-path-with-equal-number-of-0s-and-1s","has_notes":false,"flag_type":1}