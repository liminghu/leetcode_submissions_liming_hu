{"id":1288636792,"question_id":695,"lang":"cpp","lang_name":"C++","time":"7 months, 3 weeks","timestamp":1718420513,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/1288636792/","is_pending":"Not Pending","title":"Max Area of Island","memory":"N/A","code":"class Solution {\npublic:\n    int maxAreaOfIsland(vector<vector<int>>& grid) { //1 <= m, n <= 50\n        //bfs\n        // if visited, marked it as -1;\n        int rows = grid.size();\n        int cols = grid[0].size();\n        \n        queue<pair<int, int>> bfs_q;\n        int max_area = 0;\n        int cur_area = 0; \n        for(int i=0; i<rows; i++) {\n             for(int j=0; j<cols; j++) {\n                 if(grid[i][j] == 1) {\n                     //push all the negibors to the queue.\n                     bfs_q.push(pair{i,j});\n                     //grid[i][j] = -1;\n                     cur_area = 0;\n                     while(!bfs_q.empty()) {\n                         pair<int, int> cur = bfs_q.front();\n                         bfs_q.pop();                         \n                         grid[cur.first][cur.second] = -1;\n                         cur_area++;\n                         if(cur.first-1>=0 && grid[cur.first-1][cur.second] == 1) {//up\n                            bfs_q.push(pair{cur.first-1,cur.second});\n                         }\n                         if(cur.first+1<rows && grid[cur.first+1][cur.second] == 1) {//down\n                            bfs_q.push(pair{cur.first+1,cur.second});\n                         }\n                         if(cur.second-1>=0 && grid[cur.first][cur.second-1] == 1) {//left\n                            bfs_q.push(pair{cur.first,cur.second-1});\n                         }\n                         if(cur.second+1<cols && grid[cur.first][cur.second+1] == 1) {//right\n                            bfs_q.push(pair{cur.first,cur.second+1});\n                         }\n                     }\n                     if(cur_area>max_area)\n                         max_area = cur_area;\n                     cur_area = 0;\n                 }\n                 \n             }\n            \n        }\n        return max_area;\n        \n    }\n};","compare_result":"11011111111111111111111111111111111110111111111111111111111111111011101111111111111111111111001110110011111111111111111111111011111111111111101111111111111110111111111111000011111111111111111111111111101110111111111111111111111100111011001111111111111111111111111110111011111111111111111111110011101100111111111111111111111111111011101111111111111111111111001110110011111111111111111111111100000000111111111111111111111100000000001111111111111111111111111110111011111111111111111111110011101100111111111111111111111111111011101111111111111111111111001110110011111111111111111111111111101110111111111111111100000000000000001111111111111111111111110000000011111111111111100000000000000000110010010000000001000000000000000000000000","title_slug":"max-area-of-island","has_notes":false,"flag_type":1}