{"id":1395980933,"question_id":572,"lang":"cpp","lang_name":"C++","time":"4 months, 2 weeks","timestamp":1726794629,"status":10,"status_display":"Accepted","runtime":"23 ms","url":"/submissions/detail/1395980933/","is_pending":"Not Pending","title":"Subtree of Another Tree","memory":"28.1 MB","code":"/*Given the roots of two binary trees root and subRoot, return true if there is a subtree of root with the \nsame structure and node values of subRoot and false otherwise.\n\nA subtree of a binary tree tree is a tree that consists of a node in tree and all of this node's descendants. \nThe tree tree could also be considered as a subtree of itself.\nThe number of nodes in the root tree is in the range [1, 2000].\nThe number of nodes in the subRoot tree is in the range [1, 1000].\n-104 <= root.val <= 104\n-104 <= subRoot.val <= 104\n*/\n/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    bool isSametree(TreeNode* s, TreeNode* t) {\n        if(!s || !t) { ////if any of the tree is null then there is no need to compare \n            return s == NULL && t == NULL;\n        };\n\n        if(s->val == t->val) { //since both are not null check if they have same value otherwise return false\n            return isSametree(s->left, t->left) && isSametree(s->right, t->right);\n        } else\n            return false;       \n    }\n    bool isSubtree(TreeNode* root, TreeNode* subRoot) {\n        if (!root)\n            return subRoot == NULL;\n        if(isSametree(root, subRoot))\n            return true;\n        else {\n            return isSubtree(root->left, subRoot) || isSubtree(root->right, subRoot);\n        }\n    }\n};","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"subtree-of-another-tree","has_notes":false,"flag_type":1}