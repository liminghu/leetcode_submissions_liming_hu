{"id":392907985,"question_id":200,"lang":"cpp","lang_name":"C++","time":"4 years, 5 months","timestamp":1599588867,"status":10,"status_display":"Accepted","runtime":"28 ms","url":"/submissions/detail/392907985/","is_pending":"Not Pending","title":"Number of Islands","memory":"9.5 MB","code":"class Solution {\npublic:\n    int numIslands(vector<vector<char>>& grid) {\n\t\tif(grid.empty()) return 0;\n\t\tint m = grid.size(); //row\n\t\tint n = grid[0].size(); //column.\n\t\t\n\t\tint ans = 0;\n\t\tfor(int i = 0; i < m; i++) {\n\t\t\tfor (int j = 0; j < n; j++) {\n\t\t\t\tans += grid[i][j] - '0';\n\t\t\t\tdfs(grid, i, j, m, n);\n\t\t\t}\n\t\t}\n\t\treturn ans;\n    }\nprivate:\n\tvoid dfs(vector<vector<char>>& grid, int i, int j, int m, int n) {\n\t\tif( i<0 || j <0 || i>=m || j >=n || grid[i][j] == '0')\n\t\t\treturn;\n\t\tgrid[i][j] = '0'; //visited or '0' by itself.\n\t\tdfs(grid, i-1, j, m, n);\n\t\tdfs(grid, i+1, j, m, n);\n\t\tdfs(grid, i, j-1, m, n);\n\t\tdfs(grid, i, j+1, m, n);\n\t}\n};","compare_result":"11111111111111111111111111111111111111111111111","title_slug":"number-of-islands","has_notes":false,"flag_type":1}