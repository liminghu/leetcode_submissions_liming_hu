{"id":1391452447,"question_id":1060,"lang":"cpp","lang_name":"C++","time":"4 months, 3 weeks","timestamp":1726435403,"status":10,"status_display":"Accepted","runtime":"11 ms","url":"/submissions/detail/1391452447/","is_pending":"Not Pending","title":"Longest Repeating Substring","memory":"12.2 MB","code":"/*\nGiven a string s, return the length of the longest repeating substrings. If no repeating substring exists, return 0.\n1 <= s.length <= 2000\ns consists of lowercase English letters.\n*/\nclass Solution {\n    int BASE = 26;\n    int MOD = 1e9+123;\npublic:\n    int longestRepeatingSubstring(string s) {\n        int lo = 1;\n        int hi = s.length() -1;\n        int mid = 0;\n        while( lo < hi ) {\n            mid = ( lo + hi + 1 ) >> 1;\n            if( hasRepeated(s, mid) )\n                lo = mid;\n            else\n                hi = mid -1;\n        }\n        return hasRepeated(s,lo)? lo: lo - 1;\n\n/*        int sz = s.length();\n        if( sz <= 1 )\n            return 0;\n        int l = 1; int r = sz-1;\n        while( l <= r ) {\n            int mid = (l+r)/2;\n            if( foundRepeatedSub(s,mid) )\n                l = mid + 1;\n            else\n                r = mid -1;\n        }\n        return l-1;*/\n    }\n    bool hasRepeated( string s, int len) {\n        unordered_set<long long> Set;\n        long long hash = 0l;\n        long long pow = 1l;\n        for(int i=0; i < len; i++) { //build the initial rolling hash\n            hash = ( hash * BASE + s[i] - 'a') % MOD;\n            pow = ( pow * BASE ) % MOD; \n        }\n        Set.insert(hash);\n        for(int i = len; i < s.length(); i++) {\n            hash = ( hash * BASE - (s[ i - len ] - 'a') * pow + MOD + s[i] - 'a' ) % MOD;\n            if( Set.find(hash) != Set.end() )\n                return true;\n            Set.insert(hash);\n        }\n        return false;\n\n    }\n /*   bool foundRepeatedSub(string s, int len) {\n        unordered_set<string> seen;\n        for(int i=0; i<=s.length() - len; i++) {\n            string sub = s.substr(i, len);\n            if(seen.find(sub) != seen.end() ) {\n                return true;\n            }\n            seen.insert(sub);\n        }\n        return false;\n    }*/\n};","compare_result":"111111111111111111111111","title_slug":"longest-repeating-substring","has_notes":false,"flag_type":1}