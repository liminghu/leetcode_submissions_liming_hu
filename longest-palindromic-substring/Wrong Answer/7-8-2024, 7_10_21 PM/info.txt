{"id":1314583542,"question_id":5,"lang":"cpp","lang_name":"C++","time":"7Â months","timestamp":1720491021,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/1314583542/","is_pending":"Not Pending","title":"Longest Palindromic Substring","memory":"N/A","code":"class Solution {\npublic:\n    string longestPalindrome(string s) { //Given a string s, return the longest palindromic substring in s.\n                                            //1 <= s.length <= 1000\n                                            //s consist of only digits and English letters.\n        int sz = s.length();\n        int i = 0;\n        int j = sz - 1;\n        if( sz <= 1 )\n            return s;\n        \n        //dp\n        vector<vector<string>> dp(sz+1, vector<string>(sz+1, \"\"));  //dp[i][j]: i:start, j:end. longest Palindrome string.\n        for(int i=0; i<sz; i++) {\n            dp[i][i] = s[i];\n        };\n\n        for(int length=2; length<=sz; length++) {\n            for(int i=0; i+length-1<sz; i++) {\n                if( s[i] == s[i+length-1] && dp[i+1][i+length-2].length() == length - 2 )\n                    dp[i][i+length-1] =s[i] + dp[i+1][i+length-2] + s[i+length-1];\n                else if(dp[i][i+length-2].length() >= dp[i+1][i+length-2].length()) {\n                    dp[i][i+length-1] = dp[i][i+length-2];\n                } else {\n                   dp[i][i+length-1] =  dp[i+1][i+length-2];\n                }\n\n               // dp[i][i+length-1]      dp[i][i+length-2]   dp[i+1][i+length-2]\n            }\n        }\n\n        return dp[0][sz-1];\n\n    }\n\n    bool isValidPalindrome(string s, int i, int j) { //i: start; j:end\n        if( i == j )\n            return true;\n\n        while( i < j ) {\n            if(s[i] != s[j] )\n                return false;\n            i++;\n            j--;\n        }\n        return true;\n\n    }\n};","compare_result":"1111110111101110111111101001101111111111110111101000000101001010011100100010110000000000000000000000000000000000000000000000000000000000000000","title_slug":"longest-palindromic-substring","has_notes":false,"flag_type":1}