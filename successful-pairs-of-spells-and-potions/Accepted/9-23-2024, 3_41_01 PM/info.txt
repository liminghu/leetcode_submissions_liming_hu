{"id":1400101115,"question_id":2392,"lang":"cpp","lang_name":"C++","time":"4 months, 2 weeks","timestamp":1727131261,"status":10,"status_display":"Accepted","runtime":"144 ms","url":"/submissions/detail/1400101115/","is_pending":"Not Pending","title":"Successful Pairs of Spells and Potions","memory":"103.7 MB","code":"/*\nYou are given two positive integer arrays spells and potions, of length n and m respectively, \nwhere spells[i] represents the strength of the ith spell and potions[j] represents the strength\n of the jth potion.\nYou are also given an integer success. A spell and potion pair is considered successful if \nthe product of their strengths is at least success.\nReturn an integer array pairs of length n where pairs[i] is the number of potions that will \nform a successful pair with the ith spell.\nn == spells.length\nm == potions.length\n1 <= n, m <= 105\n1 <= spells[i], potions[i] <= 105\n1 <= success <= 1010\n*/\nclass Solution {\npublic:\n    vector<int> successfulPairs(vector<int>& spells, vector<int>& potions, long long success) {\n        sort(potions.begin(), potions.end()); //m, increasing.\n        int m = potions.size();\n        int maxPosition = potions[m-1];\n        vector<int> rets;\n        for(int i=0; i<spells.size(); i++) {\n            long long minPosition = ceil( (1.0*success)/spells[i] );\n            if(minPosition > maxPosition) {\n                rets.push_back(0);\n                continue;\n            }\n            auto iter = lower_bound(potions.begin(), potions.end(), minPosition);\n            int num = iter-potions.begin();\n            rets.push_back(m-num);\n        };\n        return rets;\n    }\n};","compare_result":"11111111111111111111111111111111111111111111111111111111","title_slug":"successful-pairs-of-spells-and-potions","has_notes":false,"flag_type":1}