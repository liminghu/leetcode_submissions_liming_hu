{"id":1505634023,"question_id":2221,"lang":"cpp","lang_name":"C++","time":"3 weeks, 5 days","timestamp":1736647995,"status":10,"status_display":"Accepted","runtime":"15 ms","url":"/submissions/detail/1505634023/","is_pending":"Not Pending","title":"Check if a Parentheses String Can Be Valid","memory":"30 MB","code":"class Solution {\npublic:\n    bool canBeValid(string s, string locked) {\n        //parentheses string s\n        int n = s.length();\n        //If locked[i] is '1', you cannot change s[i].\n        bool ret = false;\n        if(n%2 ==1)\n            return false;\n        int open = 0;\n        int close = 0;\n        int unpaired = 0;\n        int canchange = 0;\n        for(int i=0; i<n; i++) {\n            if(locked[i]=='0')\n                canchange++;\n            else if(s[i]=='(')   //The chars which are locked and are open brackets.\n                open++;\n            else if(s[i]==')') \n                close++;\n            unpaired = close - open;\n            if(unpaired > canchange) //We need to identify the number of locked brackets which are unpaired, which is equal to number of closed brackets - number of open brackets.\n                return false;\n        }\n        open = 0;\n        close = 0;\n        unpaired = 0;\n        canchange = 0;       \n        for(int i=n-1; i>=0; i--) {\n            if(locked[i]=='0')\n                canchange++;\n            else if(s[i]=='(')   //The chars which are locked and are open brackets.\n                open++;\n            else if(s[i]==')') \n                close++;\n            unpaired = open - close; //unpaired, which is (number of open brackets - number of closed brackets) in this case.\n            if(unpaired > canchange)\n                return false;\n        }\n        return true;\n    }\n};","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"check-if-a-parentheses-string-can-be-valid","has_notes":false,"flag_type":1}