{"id":1362779350,"question_id":1028,"lang":"cpp","lang_name":"C++","time":"5 months, 2 weeks","timestamp":1724181004,"status":10,"status_display":"Accepted","runtime":"25 ms","url":"/submissions/detail/1362779350/","is_pending":"Not Pending","title":"Interval List Intersections","memory":"22.6 MB","code":"/*You are given two lists of closed intervals, firstList and secondList, where firstList[i] = [starti, endi] \nand secondList[j] = [startj, endj]. Each list of intervals is pairwise disjoint and in sorted order.\nReturn the intersection of these two interval lists.\nA closed interval [a, b] (with a <= b) denotes the set of real numbers x with a <= x <= b.\nThe intersection of two closed intervals is a set of real numbers that are either empty or represented as a \nclosed interval. For example, the intersection of [1, 3] and [2, 4] is [2, 3].\n*/\nclass Solution {\npublic:\n    vector<vector<int>> intervalIntersection(vector<vector<int>>& firstList, vector<vector<int>>& secondList) {\n        int i = 0;\n        int j = 0;\n        vector<vector<int>> ans;\n        while( i< firstList.size() && j < secondList.size()) {\n            int start = max(firstList[i][0], secondList[j][0]);\n            int end = min(firstList[i][1], secondList[j][1]);\n\n            if(start<=end) \n                ans.push_back({start,end});\n            \n            if(firstList[i][1] < secondList[j][1])\n                i++;\n            else \n                j++;\n        }\n        return ans;\n    }\n};","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"interval-list-intersections","has_notes":false,"flag_type":1}