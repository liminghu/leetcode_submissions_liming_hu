{"id":401126381,"question_id":239,"lang":"cpp","lang_name":"C++","time":"4 years, 4 months","timestamp":1601160949,"status":10,"status_display":"Accepted","runtime":"1048 ms","url":"/submissions/detail/401126381/","is_pending":"Not Pending","title":"Sliding Window Maximum","memory":"166.7 MB","code":"//BST Monotonic queue\nclass Solution {\npublic:\n  //Brute force: TLE\n/*  vector<int> maxSlidingWindow(vector<int>& nums, int k) {\n\t\tvector<int> ans;\n\t\tfor(int i=k-1; i<nums.size(); i++) {\n\t\t\tans.push_back(*max_element(nums.begin()+i-k+1, nums.begin()+i+1));\n\t\t}\n\t\treturn ans;\n  }*/\n  vector<int> maxSlidingWindow(vector<int>& nums, int k) {\n\tvector<int> ans;\n\tmultiset<int> window;\n\tfor(int i=0; i<nums.size(); i++) {\n\t\twindow.insert(nums[i]);\n\t\tif(i-k+1>=0) {\n\t\t\tans.push_back(*window.rbegin());\n\t\t\twindow.erase(window.equal_range(nums[i-k+1]).first);\n\t\t\t//window.erase(nums[i-k+1]);\n\t\t}\n\t}\n\treturn ans;\n  }\n};","compare_result":"11111111111111111111111111111111111111111111111111111111111","title_slug":"sliding-window-maximum","has_notes":false,"flag_type":1}