{"id":1452287988,"question_id":889,"lang":"cpp","lang_name":"C++","time":"2 months, 3 weeks","timestamp":1731563650,"status":10,"status_display":"Accepted","runtime":"0 ms","url":"/submissions/detail/1452287988/","is_pending":"Not Pending","title":"Buddy Strings","memory":"8.2 MB","code":"class Solution {\npublic:\n    bool buddyStrings(string s, string goal) {\n        if(s.size()!=goal.size())\n            return false;\n        if(s.size()<=1 || goal.size()<=1)\n            return false;\n        if(s==goal) {\n            vector<int> dict(26, 0);\n            for(int i=0; i<s.length(); i++) {\n                dict[s[i]-'a']++;\n                if(dict[s[i]-'a']>=2)\n                    return true;\n            }\n            return false;\n        }\n        int firstDist = 0;\n        char firstChar = 0;\n        int secondDist = 0;\n        char secondChar = 0;\n        for(int i=0; i<s.length(); i++) {\n            if(s[i] == goal[i])\n                continue;\n            if(firstDist==0) {\n                firstDist = s[i] - goal[i];\n                firstChar = s[i];\n            } else if(secondDist==0) {\n                secondDist = s[i] - goal[i];\n                secondChar = s[i];\n                if(firstDist != -secondDist)\n                    return false;\n           } else {\n            return false;\n           }\n        }\n        if(firstDist == 0 || secondDist==0)\n            return false;\n        if(firstChar-firstDist != secondChar || secondChar-secondDist != firstChar)\n            return false;\n        return true;\n    }\n};","compare_result":"111111111111111111111111111111111111111","title_slug":"buddy-strings","has_notes":false,"flag_type":1}