{"id":392967023,"question_id":207,"lang":"cpp","lang_name":"C++","time":"4 years, 5 months","timestamp":1599598830,"status":10,"status_display":"Accepted","runtime":"36 ms","url":"/submissions/detail/392967023/","is_pending":"Not Pending","title":"Course Schedule","memory":"13.6 MB","code":"\nclass Solution {\npublic:\n    bool canFinish(int numCourses, vector<vector<int>>& prerequisites) {\n      //DFS + Graph\n    graph_ = vector<vector<int>>(numCourses);\n    for(const auto& p: prerequisites)\n        graph_[p[0]].push_back(p[1]);\n        prerequisites;\n\t  //unknown: 0; visiting: 1 ,visited:2\n\t  vector<int> v(numCourses, 0);\n\t  \n\t  for(int i =0; i<numCourses; i++)\n\t\t  if( dfs(i, v) ) return false; // there is cycle.\n\t  \n\t  return true;\n    }\nprivate:\n    vector<vector<int>> graph_;\n\tbool dfs(int cur, vector<int>& v) {\n\t\tif(v[cur] == 1) return true;\n\t\tif(v[cur] == 2) return false;\n\t\t\n\t\tv[cur] = 1; //visiting\n\t\t\n\t\tfor(const int t : graph_[cur])\n\t\t\tif(dfs(t, v)) return true;\n\t\t\n\t\tv[cur] = 2; //visited\n\t\t\n\t\treturn false;\n\t\t\n\t}\n};\n","compare_result":"1111111111111111111111111111111111111111111111","title_slug":"course-schedule","has_notes":false,"flag_type":1}