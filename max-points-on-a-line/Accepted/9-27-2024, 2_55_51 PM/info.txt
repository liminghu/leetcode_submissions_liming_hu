{"id":1404356757,"question_id":149,"lang":"cpp","lang_name":"C++","time":"4 months, 1 week","timestamp":1727474151,"status":10,"status_display":"Accepted","runtime":"64 ms","url":"/submissions/detail/1404356757/","is_pending":"Not Pending","title":"Max Points on a Line","memory":"27.8 MB","code":"//Given an array of points where points[i] = [xi, yi] represents a point on the X-Y plane, return the maximum number of points that lie on the same straight line.\n/*\n1 <= points.length <= 300\npoints[i].length == 2\n-104 <= xi, yi <= 104\nAll the points are unique.\n*/\nclass Solution {\npublic:\n    int maxPoints(vector<vector<int>>& points) {\n        int n = points.size();\n        int ans = 0;\n        for(int i=0; i<n; i++) {\n            unordered_map<string, int> count; //key: <py, px> \n            int same_points = 1;\n            int max_points = 0;\n            const auto& p1 = points[i]; \n            for(int j = i+1; j<n; j++) {\n                const auto& p2 = points[j];\n                if(p1[0] == p2[0] && p1[1] == p2[1])\n                    same_points++;\n                else {                    \n                    int cur_count = ++count[getSlope(p1, p2)]; \n                    max_points = max(max_points, cur_count);\n                } \n            }\n            ans = max(ans, same_points+ max_points);\n        }\n        return ans;\n    }\n    string getSlope(vector<int> p1, vector<int> p2) {\n        int dx = p2[0] - p1[0];\n        int dy = p2[1] - p1[1];\n        //horizontal line\n        if(dy == 0) \n            return to_string(p1[1]) + \"_0\";\n        if(dx == 0)\n            return \"0_\" + to_string(p1[0]);\n        int d = gcd(dx, dy);\n        return to_string(dy/d) + \"_\" + to_string(dx/d);\n    };\n    int gcd( int m, int n) {\n        return n==0? m: gcd(n, m%n);\n    }\n};","compare_result":"11111111111111111111111111111111111111111","title_slug":"max-points-on-a-line","has_notes":false,"flag_type":1}