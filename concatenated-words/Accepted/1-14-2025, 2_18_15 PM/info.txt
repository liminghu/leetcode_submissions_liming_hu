{"id":1508805784,"question_id":472,"lang":"cpp","lang_name":"C++","time":"3 weeks, 2 days","timestamp":1736893095,"status":10,"status_display":"Accepted","runtime":"172 ms","url":"/submissions/detail/1508805784/","is_pending":"Not Pending","title":"Concatenated Words","memory":"59.3 MB","code":"class Solution {\npublic:\n    vector<string> findAllConcatenatedWordsInADict(vector<string>& words) {\n        vector<string> rets;\n        unordered_set<string> set;\n        for(string word:words)\n            set.insert(word);\n        for(string word:words) {\n            set.erase(word);\n            if(canBreak(word, set))\n                rets.push_back(word);\n            set.insert(word);\n        }\n        return rets;\n    }\n    bool canBreak(string& word, unordered_set<string>& set) {\n        if(set.size()==0)\n            return false;\n        int n = word.size();\n        if(n==0) return false;\n        vector<bool> dp(n+1, false);\n        dp[0] = true;\n        for(int i=1; i<=n; i++) {\n            for(int j=0; j<i; j++) {\n                if(!dp[j])\n                    continue;\n                if( set.count( word.substr(j, i-j) ) ) {\n                    dp[i] = true;\n                    break;\n                };\n            }\n        } \n        return dp[n];\n    }\n};","compare_result":"1111111111111111111111111111111111111111111","title_slug":"concatenated-words","has_notes":false,"flag_type":1}