{"id":406658047,"question_id":212,"lang":"cpp","lang_name":"C++","time":"4 years, 4 months","timestamp":1602270869,"status":10,"status_display":"Accepted","runtime":"1020 ms","url":"/submissions/detail/406658047/","is_pending":"Not Pending","title":"Word Search II","memory":"16.2 MB","code":"class Solution {\npublic:\n    vector<string> findWords(vector<vector<char>>& board, vector<string>& words) {\n        unordered_set<string> unique_words(words.begin(), words.end()); //unnecessary, word is unique.\n        vector<string> ans;\n        for(const string& word: unique_words) {\n          if(exist(board, word))\n              ans.push_back(word);\n        }\n        return ans;\n        \n    }\nprivate:\n  int w;\n  int h;\n  bool exist(vector<vector<char>>& board, string word) {\n      if(board.size() == 0) return false;\n      h = board.size();\n      w = board[0].size();\n      \n      for(int i=0; i<w; i++)\n          for(int j=0; j<h; j++)\n              if(search(board, word, 0, i, j)) return true;\n      return false;\n  \n  }\n  bool search(vector<vector<char>>& board, const string& word, int d, int x, int y) {\n      if(x<0 || x>=w|| y<0 || y>=h || word[d] != board[y][x]) return false;\n      //found the last char of the word.\n      if(d==word.length() - 1) return true;\n      \n      char cur = board[y][x];\n      board[y][x] = '*';  //used.\n      bool found = search(board, word, d+1, x+1, y) ||\n                   search(board, word, d+1, x-1, y) ||\n                   search(board, word, d+1, x, y+1) ||\n                   search(board, word, d+1, x, y-1);\n      board[y][x] = cur;\n      return found;\n  }\n};","compare_result":"111111111111111111111111111111111111","title_slug":"word-search-ii","has_notes":false,"flag_type":1}