{"id":390672524,"question_id":560,"lang":"cpp","lang_name":"C++","time":"4 years, 5 months","timestamp":1599174805,"status":10,"status_display":"Accepted","runtime":"68 ms","url":"/submissions/detail/390672524/","is_pending":"Not Pending","title":"Subarray Sum Equals K","memory":"22.1 MB","code":"class Solution {\npublic:\n    int subarraySum(vector<int>& nums, int k) {\n       /* const int n = nums.size();\n\t\tvector<int> sums(n+1, 0);\n\t\tfor(int i=1; i<=n; i++) \n\t\t\tsums[i] = sums[i-1] + nums[i-1];\n\t\tint ans = 0;\n\t\tfor(int i=0; i<n; i++)\n\t\t\tfor(int j=i; j<n; j++)\n\t\t\t\tif(sums[j+1]-sums[i]==k) ans++;\n\t\t\t\n\t\treturn ans;*/\n        unordered_map<int, int> count_sums; //key: prefix sum, value: count of sums.\n\t\tcount_sums[0] = 1;\n\t\tint sum =0;\n\t\tint result = 0;\n\t\t\n\t\tfor(int i=0; i<nums.size(); i++) {\n\t\t\tsum += nums[i];\n\t\t\t\n\t\t\tif(count_sums.find(sum-k) != count_sums.end() ) {\n\t\t\t\tresult += count_sums[sum-k];\n\t\t\t};\n\t\t\t\n\t\t\tif (count_sums.find(sum) != count_sums.end() ) {\n\t\t\t\tcount_sums[sum]++;\n\t\t\t} else {\n\t\t\t\tcount_sums[sum]=1;\n\t\t\t}\n\t\t}\n\t\t\n\t\treturn result;\n    }\n};","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"subarray-sum-equals-k","has_notes":false,"flag_type":1}