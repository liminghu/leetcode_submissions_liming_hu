{"id":1478122054,"question_id":604,"lang":"cpp","lang_name":"C++","time":"1 month, 3 weeks","timestamp":1734121036,"status":10,"status_display":"Accepted","runtime":"0 ms","url":"/submissions/detail/1478122054/","is_pending":"Not Pending","title":"Design Compressed String Iterator","memory":"19.9 MB","code":"class StringIterator {\nprivate:\n    int idx = 0;\n    string compressedString;\n    int count = 0;\n    char cur;\npublic:\n    StringIterator(string compressedString) {\n        this->compressedString = compressedString;\n        this->idx = 0;\n        this->count = 0;\n        this->cur = NULL;\n    }\n    \n    char next() {\n        if(!hasNext())\n            return ' ';\n        if(count==0) {\n            cur = compressedString[idx];\n            idx++;\n            while(idx<compressedString.length() && isdigit(compressedString[idx]))\n                count = count*10+compressedString[idx++]-'0';\n        }\n        count--;\n        return cur;\n    }\n    \n    bool hasNext() {\n        return idx<compressedString.length() || count != 0;\n    }\n};\n\n/**\n * Your StringIterator object will be instantiated and called as such:\n * StringIterator* obj = new StringIterator(compressedString);\n * char param_1 = obj->next();\n * bool param_2 = obj->hasNext();\n */","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"design-compressed-string-iterator","has_notes":false,"flag_type":1}