{"id":1519567476,"question_id":447,"lang":"cpp","lang_name":"C++","time":"1 week, 6 days","timestamp":1737768782,"status":10,"status_display":"Accepted","runtime":"344 ms","url":"/submissions/detail/1519567476/","is_pending":"Not Pending","title":"Number of Boomerangs","memory":"158.5 MB","code":"class Solution {\npublic:\n    int numberOfBoomerangs(vector<vector<int>>& points) {\n        //You are given n points in the plane that are all distinct, where points[i] = [xi, yi]\n        int n = points.size();\n        //A boomerang is a tuple of points (i, j, k) such that the distance between i and j equals the distance between i and k (the order of the tuple matters).\n        int res = 0;\n        if(n<=2)\n            return 0;\n        for(int i=0; i<n; i++) {\n            unordered_map<long long, int> group;\n            for(int j=0; j<n; j++) {\n                if(j==i)\n                    continue;\n                int dy = points[i][1] - points[j][1];\n                int dx = points[i][0] - points[j][0];\n                int key = dy*dy+dx*dx;\n                group[key]++;\n            }\n            for(auto& p:group) {\n                if(p.second > 1) {\n                    res += p.second*(p.second-1);\n                }\n            }\n        }\n        return res;\n    }\n};","compare_result":"11111111111111111111111111111111","title_slug":"number-of-boomerangs","has_notes":false,"flag_type":1}