{"id":397203721,"question_id":148,"lang":"cpp","lang_name":"C++","time":"4 years, 4 months","timestamp":1600380880,"status":10,"status_display":"Accepted","runtime":"60 ms","url":"/submissions/detail/397203721/","is_pending":"Not Pending","title":"Sort List","memory":"15.7 MB","code":"/**\n * Definition for singly-linked list.\n * struct ListNode {\n *     int val;\n *     ListNode *next;\n *     ListNode() : val(0), next(nullptr) {}\n *     ListNode(int x) : val(x), next(nullptr) {}\n *     ListNode(int x, ListNode *next) : val(x), next(next) {}\n * };\n */\n\nclass Solution {\npublic:\n    ListNode* sortList(ListNode* head) {\n        if(!head || !head->next) return head;\n        ListNode* slow = head;\n        ListNode* fast = head->next;\n        while(fast && fast->next) {\n          fast = fast->next->next;\n          slow = slow->next;\n        }\n        ListNode* mid = slow->next;\n        slow->next = nullptr;\n        return merge(sortList(head), sortList(mid));\n    }\nprivate:\n  ListNode* merge(ListNode* l1, ListNode* l2) {\n    ListNode dummy(0);\n    ListNode* tail = &dummy;\n    while(l1 && l2) {\n      if(l1->val > l2->val) swap(l1, l2);\n      tail->next = l1;\n      l1 = l1->next;\n      tail = tail->next;\n    }\n    if(l1) tail->next = l1;\n    if(l2) tail->next = l2;\n    return dummy.next;\n  }\n};","compare_result":"1111111111111111","title_slug":"sort-list","has_notes":false,"flag_type":1}