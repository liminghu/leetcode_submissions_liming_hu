{"id":1482442898,"question_id":1694,"lang":"cpp","lang_name":"C++","time":"1 month, 2 weeks","timestamp":1734566717,"status":10,"status_display":"Accepted","runtime":"75 ms","url":"/submissions/detail/1482442898/","is_pending":"Not Pending","title":"Make Sum Divisible by P","memory":"88.3 MB","code":"class Solution {\npublic:\n    int minSubarray(vector<int>& nums, int p) {\n        int n = nums.size();\n        int need = 0;\n        for(int num: nums)\n            need = (need+num) % p;\n        //Find the shortest array with sum % p = need.\n        int cur = 0;\n        unordered_map<int,int> prefix;\n        prefix[0] = -1; //// To handle the case where the whole prefix is the answer\n        int res = n;\n        for(int i=0; i<n; i++) {\n            cur = (cur+nums[i])%p;\n            prefix[cur] = i;\n            int want = (cur-need+p)%p;\n            if(prefix.count(want))\n                res = min(res, i-prefix[want]);\n        }\n        return res<n? res:-1;\n    }\n};","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"make-sum-divisible-by-p","has_notes":false,"flag_type":1}