{"id":1430814015,"question_id":698,"lang":"cpp","lang_name":"C++","time":"3 months, 2 weeks","timestamp":1729628292,"status":10,"status_display":"Accepted","runtime":"15 ms","url":"/submissions/detail/1430814015/","is_pending":"Not Pending","title":"Partition to K Equal Sum Subsets","memory":"11.3 MB","code":"/*\nGiven an integer array nums and an integer k, return true if it is possible to divide this array \ninto k non-empty subsets whose sums are all equal.\n\n Example 1:\nInput: nums = [4,3,2,3,5,2,1], k = 4\nOutput: true\nExplanation: It is possible to divide it into 4 subsets (5), (1, 4), (2,3), (2,3) with equal sums.\n\nExample 2:\nInput: nums = [1,2,3,4], k = 3\nOutput: false\n \nConstraints:\n1 <= k <= nums.length <= 16\n1 <= nums[i] <= 104\nThe frequency of each element is in the range [1, 4].\n*/\nclass Solution {\npublic:\n    bool visited[16];\n    int total;\n    int k;\n    bool canPartitionKSubsets(vector<int>& nums, int k) {\n        this->k = k;\n        int n = nums.size();\n        total = 0;\n        for(int i=0; i<n; i++)\n            total += nums[i];\n        if( total % k !=0 )\n            return false;\n        sort(nums.begin(), nums.end());\n        return dfs(nums, 0, 0, 0); //int cur, int grp, int sum\n    }\n    bool dfs(vector<int>& nums, int cur, int grp, int sum) {\n        if(grp == k)\n            return true;\n        if(sum > total/k)\n            return false;\n        if(sum == total/k)\n            return dfs(nums, 0, grp+1, 0);\n        int last = -1;\n        for(int i=cur; i<nums.size(); i++) {\n            if(visited[i])\n                continue;\n            if(nums[i] == last)\n                continue;\n            visited[i] = true;\n            last = nums[i];\n            if( dfs(nums,i+1, grp, sum+nums[i]))\n                return true;\n            visited[i] = false;\n        }\n        return false;\n    }\n};","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"partition-to-k-equal-sum-subsets","has_notes":false,"flag_type":1}