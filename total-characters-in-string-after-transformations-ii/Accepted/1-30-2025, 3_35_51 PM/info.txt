{"id":1525898207,"question_id":3630,"lang":"cpp","lang_name":"C++","time":"1Â week","timestamp":1738280151,"status":10,"status_display":"Accepted","runtime":"425 ms","url":"/submissions/detail/1525898207/","is_pending":"Not Pending","title":"Total Characters in String After Transformations II","memory":"76.5 MB","code":"class Solution {\n    int M = 1e9+7;\npublic:\n    int lengthAfterTransformations(string s, int t, vector<int>& nums) {\n        vector<int> freq(26, 0);\n        for(char c: s)\n            freq[c-'a']++;\n        vector<vector<long long>> transform(26, vector<long long>(26, 0));\n        for (int i = 0; i < 26; ++i) {\n            for (int j = 1; j <= nums[i]; ++j) {\n                transform[(i+j)%26][i]++; \n            }\n        }\n        vector<vector<long long>> powerTransform = matrixExpo(transform, t);\n        vector<long long> res(26, 0);\n        for(int i=0; i<26; i++) \n            for(int j=0; j<26; j++) \n                res[i] = (res[i] + (powerTransform[i][j] * freq[j])%M) % M;\n        long long sum =0;\n         for(int i=0; i<26; i++) \n            sum = (sum+res[i])%M;\n         return (int)sum;\n    }\n    vector<vector<long long>> multiply(const vector<vector<long long>>& A, const vector<vector<long long>>& B) {\n        vector<vector<long long>> result(26, vector<long long>(26, 0));\n        for (int i = 0; i < 26; ++i) {\n            for (int j = 0; j < 26; ++j) {\n                for (int k = 0; k < 26; ++k) {\n                    result[i][j] = (result[i][j] + (A[i][k] * B[k][j]) % M ) % M;\n                }\n            }\n        }\n        return result;\n    }\n    vector<vector<long long>> matrixExpo(vector<vector<long long>> base, int t) {\n        vector<vector<long long>> result(26, vector<long long>(26, 0));\n        for(int i=0; i<26; i++)\n            result[i][i] = 1;\n        while(t>0) {\n            if(t%2 == 1)\n                result = multiply(result, base);\n            base = multiply(base, base);\n            t /= 2;\n        }\n        return result;\n    }\n};","compare_resulttitle_slug":"total-characters-in-string-after-transformations-ii","has_notes":false,"flag_type":1}