{"id":1265992624,"question_id":283,"lang":"cpp","lang_name":"C++","time":"8 months, 2 weeks","timestamp":1716485321,"status":10,"status_display":"Accepted","runtime":"60 ms","url":"/submissions/detail/1265992624/","is_pending":"Not Pending","title":"Move Zeroes","memory":"21.6 MB","code":"class Solution {\npublic:\n    void moveZeroes(vector<int>& nums) { //time complexity: o(n), space: o(1)\n        //[0,1,0,3,12]\n        if(nums.size() <=1) //[], [0], [2]\n            return;\n        //Input: nums = [0,1,0,3,12]\n        //scan from beginning, if non zero continue. if 0, swap with the closest non zero. unitl the end.\n\n        for(int i=0; i<nums.size()-1; i++) {\n            if(nums[i] != 0)\n                continue;\n            //current elmenet is 0.\n            int j = i+1;\n            for(; j<nums.size(); j++) {\n                if(nums[j] != 0)\n                    break;\n            }\n            if(j==nums.size() && nums[j-1]==0)   //to the end, all zeros.\n                return;\n            //find an element which is non zero.\n            swap(nums[i], nums[j]);\n        }\n\n        return;\n        \n    }\n};","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"move-zeroes","has_notes":false,"flag_type":1}