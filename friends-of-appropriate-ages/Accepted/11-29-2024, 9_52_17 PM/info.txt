{"id":1466273574,"question_id":852,"lang":"cpp","lang_name":"C++","time":"2 months, 1 week","timestamp":1732945937,"status":10,"status_display":"Accepted","runtime":"6 ms","url":"/submissions/detail/1466273574/","is_pending":"Not Pending","title":"Friends Of Appropriate Ages","memory":"41.4 MB","code":"class Solution {\npublic:\n    int numFriendRequests(vector<int>& ages) {\n        unordered_map<int, int> count;\n        for(auto age: ages)\n            count[age]++;\n        int res = 0;\n        for(auto& x:count) {\n            for(auto& y:count) {\n                if( request(x.first, y.first))\n                    res += x.second* (y.second-(x.first==y.first? 1: 0));  //when they are the same age, a person will not send request to himself.\n            }\n        }\n        return res;\n    }\n    bool request(int x, int y) {\n        return !( y<=0.5*x+7 || y>x || y>100 &&  x<100);\n    }\n};","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"friends-of-appropriate-ages","has_notes":false,"flag_type":1}