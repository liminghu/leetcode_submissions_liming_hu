{"id":403255765,"question_id":127,"lang":"cpp","lang_name":"C++","time":"4 years, 4 months","timestamp":1601588138,"status":10,"status_display":"Accepted","runtime":"268 ms","url":"/submissions/detail/403255765/","is_pending":"Not Pending","title":"Word Ladder","memory":"15.3 MB","code":"\n//BFS\nclass Solution {\npublic:\n    int ladderLength(string beginWord, string endWord, vector<string>& wordList) {\n\t\t\tunordered_set<string> wordSet(wordList.begin(), wordList.end());\n\t\t\tif(!wordSet.count(endWord)) return 0;\n\t\t\tunordered_map<string, int> pathCnt{{{beginWord, 1}}};\n\t\t\tqueue<string> q{{beginWord}};\n\t\t\twhile(!q.empty()) {\n\t\t\t\tstring word = q.front(); q.pop();\n\t\t\t\tfor(int i=0; i<word.size(); i++) {\n\t\t\t\t\tstring newWord = word;\n\t\t\t\t\tfor(char ch = 'a'; ch<='z'; ch++) {\n\t\t\t\t\t\tnewWord[i] = ch;\n\t\t\t\t\t\tif(wordSet.count(newWord) && newWord == endWord) \n\t\t\t\t\t\t\treturn pathCnt[word] + 1;\n\t\t\t\t\t\tif(wordSet.count(newWord) && !pathCnt.count(newWord)) {\n\t\t\t\t\t\t\tq.push(newWord);\n\t\t\t\t\t\t\tpathCnt[newWord] = pathCnt[word] + 1;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn 0;\n    }\n};","compare_result":"1111111111111111111111111111111111111111111","title_slug":"word-ladder","has_notes":false,"flag_type":1}