{"id":1337814434,"question_id":3507,"lang":"cpp","lang_name":"C++","time":"6 months, 1 week","timestamp":1722294240,"status":10,"status_display":"Accepted","runtime":"93 ms","url":"/submissions/detail/1337814434/","is_pending":"Not Pending","title":"Find the Count of Numbers Which Are Not Special","memory":"8.3 MB","code":"class Solution {\npublic:\n    int nonSpecialCount(int l, int r) { //1 <= l <= r <= 109\n        /*\n        You are given 2 positive integers l and r. For any number x, all positive divisors of x except x are called the proper divisors of x.\n\n        A number is called special if it has exactly 2 proper divisors. For example:\n\n        The number 4 is special because it has proper divisors 1 and 2.\n        The number 6 is not special because it has proper divisors 1, 2, and 3.\n        Return the count of numbers in the range [l, r] that are not special.\n        */\n     /*   int cnt_special = 0;\n        for(int i=l; i<=r; i++) {\n            if(i<=3)\n                continue;\n            if(isSpecial(i))\n                cnt_special++;\n        }\n        return (r-l)+1-cnt_special;*/\n\n        int num = sqrt(r);\n        int special = 0;\n\n        while (num * num >= l && num * num <= r) {\n            bool flag = true;\n            for (int i = 2; i <= sqrt(num); i++) {\n                if (num % i == 0) {\n                    flag = false;\n                    break;\n                }\n            }\n            if (flag) {\n                special++;\n            }\n            num--;\n        }\n\n        int ans = r - l + 1 - special;\n        if (l == 1) {\n            ans++;\n        }\n        return ans;\n\n    }\n\n /*   bool isSpecial(int num) {\n        int sqt = sqrt(num);\n        bool prime = isPrime(sqt);\n        bool ans = (sqt*sqt == num);\n\n        if(ans == false)\n            return false;\n        if (!prime)\n            return false;\n        return true;\n    }\n    bool isPrime(int number){\n\n        if(number < 2) return false;\n        if(number == 2) return true;\n        if(number % 2 == 0) return false;\n        int sqt = sqrt(number)+1;\n        for(int i=3; i<=sqt; i+=2){\n            if(number % i == 0 ) return false;\n        }\n        return true;\n\n    }*/\n};","compare_resulttitle_slug":"find-the-count-of-numbers-which-are-not-special","has_notes":false,"flag_type":1}