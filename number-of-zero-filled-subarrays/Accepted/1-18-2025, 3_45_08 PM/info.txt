{"id":1513011279,"question_id":2432,"lang":"cpp","lang_name":"C++","time":"2 weeks, 5 days","timestamp":1737243908,"status":10,"status_display":"Accepted","runtime":"0 ms","url":"/submissions/detail/1513011279/","is_pending":"Not Pending","title":"Number of Zero-Filled Subarrays","memory":"111.3 MB","code":"class Solution {\npublic:\n    long long zeroFilledSubarray(vector<int>& nums) {\n        //Given an integer array nums, return the number of subarrays filled with 0.\n        int n = nums.size();\n        long long ret = 0;\n        int i=0;\n        while(i<n) {\n            if(nums[i]!=0) {\n                i++;\n                continue;\n            };\n            int j = i;\n            while(j<n && nums[j]==0) {\n                j++;\n            };\n            ret += (long long)(j-i)*(long long)(j-i+1)/2;\n            i = j;\n        }\n        return ret;\n    }\n};","compare_result":"111111111111111111111111111111111111111111111111","title_slug":"number-of-zero-filled-subarrays","has_notes":false,"flag_type":1}