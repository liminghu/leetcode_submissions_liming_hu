{"id":1408637011,"question_id":1127,"lang":"cpp","lang_name":"C++","time":"4 months, 1 week","timestamp":1727813690,"status":10,"status_display":"Accepted","runtime":"0 ms","url":"/submissions/detail/1408637011/","is_pending":"Not Pending","title":"Last Stone Weight","memory":"9.6 MB","code":"/*\nYou are given an array of integers stones where stones[i] is the weight of the ith stone.\n\nWe are playing a game with the stones. On each turn, we choose the heaviest two stones and smash \nthem together. Suppose the heaviest two stones have weights x and y with x <= y. The result of this smash is:\n\nIf x == y, both stones are destroyed, and\nIf x != y, the stone of weight x is destroyed, and the stone of weight y has new weight y - x.\nAt the end of the game, there is at most one stone left.\n\nReturn the weight of the last remaining stone. If there are no stones left, return 0.\nConstraints:\n\n1 <= stones.length <= 30\n1 <= stones[i] <= 1000\n*/\nclass Solution {\npublic:\n    int lastStoneWeight(vector<int>& stones) {\n        priority_queue<int> pq;\n        for(int i=0; i<stones.size(); i++) {\n            pq.push(stones[i]);\n        }\n        while(!pq.empty() && pq.size() >=2) {\n            int t1 = pq.top();\n            pq.pop();\n            int t2 = pq.top();\n            pq.pop();\n            if(t1!=t2)\n                pq.push(abs(t2-t1));\n        }\n        int res = 0;\n        if(!pq.empty() && pq.size()==1)\n            res = pq.top();\n        return res;\n    }\n};","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"last-stone-weight","has_notes":false,"flag_type":1}