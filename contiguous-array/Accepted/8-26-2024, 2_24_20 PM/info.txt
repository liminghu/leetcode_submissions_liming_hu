{"id":1369425136,"question_id":525,"lang":"cpp","lang_name":"C++","time":"5 months, 2 weeks","timestamp":1724707460,"status":10,"status_display":"Accepted","runtime":"79 ms","url":"/submissions/detail/1369425136/","is_pending":"Not Pending","title":"Contiguous Array","memory":"88.5 MB","code":"//Given a binary array nums, return the maximum length of a contiguous subarray with an equal number of 0 and 1.\nclass Solution {\npublic:\n    int findMaxLength(vector<int>& nums) {\n        //1 <= nums.length <= 105\n        //nums[i] is either 0 or 1.\n        int n = nums.size();\n        unordered_map<int,int> mp; //sum, the earliest index;\n        mp[0] = -1;\n\n        int ret = 0;\n        int presum = 0;\n        for(int i=0; i<n; i++) {\n            if(nums[i]==1)\n                presum += 1;\n            else\n                presum -= 1; //0: -1;\n\n            if(mp.find(presum)!=mp.end()) {\n                ret = max(ret, i-mp[presum]);\n            } else \n                mp[presum] = i;\n        }\n\n        return ret;\n    }\n};","compare_resulttitle_slug":"contiguous-array","has_notes":false,"flag_type":1}