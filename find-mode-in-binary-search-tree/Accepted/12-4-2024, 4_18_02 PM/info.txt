{"id":1470578314,"question_id":501,"lang":"cpp","lang_name":"C++","time":"2Â months","timestamp":1733357882,"status":10,"status_display":"Accepted","runtime":"4 ms","url":"/submissions/detail/1470578314/","is_pending":"Not Pending","title":"Find Mode in Binary Search Tree","memory":"25.6 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    vector<int> findMode(TreeNode* root) {\n        unordered_map<int, int> freq;\n        dfs(root, freq);\n        int maxFreq = 0;\n        for(auto&[key, val]: freq) {\n            maxFreq = max(maxFreq, val);\n        }\n        vector<int> rets;\n        for(auto&[key, val]: freq) {\n            if(val == maxFreq)\n            rets.push_back(key);\n        }\n        return rets;\n    }\n    void dfs(TreeNode* root, unordered_map<int, int>& freq) {\n        if(root==NULL)\n            return;\n        freq[root->val]++;\n        dfs(root->left, freq);\n        dfs(root->right, freq);\n    }\n};","compare_result":"111111111111111111111111","title_slug":"find-mode-in-binary-search-tree","has_notes":false,"flag_type":1}