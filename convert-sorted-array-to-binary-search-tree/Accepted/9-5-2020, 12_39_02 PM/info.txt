{"id":391475520,"question_id":108,"lang":"cpp","lang_name":"C++","time":"4 years, 5 months","timestamp":1599334742,"status":10,"status_display":"Accepted","runtime":"28 ms","url":"/submissions/detail/391475520/","is_pending":"Not Pending","title":"Convert Sorted Array to Binary Search Tree","memory":"25 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n  TreeNode* sortedArrayToBST(vector<int>& nums) {\n\t\treturn build(nums, 0, nums.size()-1);\n  }\n private: \n  TreeNode* build(vector<int>& nums, int left, int right) {\n\tif(left>right) return static_cast<TreeNode*>(nullptr);\n\tint m = left+(right-left)/2;\n\tTreeNode* root = new TreeNode(nums[m]);\n\troot->left = build(nums, left, m-1);\n\troot->right = build(nums, m+1, right);\n\treturn root;\n  }\n};","compare_result":"11111111111111111111111111111111","title_slug":"convert-sorted-array-to-binary-search-tree","has_notes":false,"flag_type":1}