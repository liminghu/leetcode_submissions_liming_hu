{"id":1441124697,"question_id":282,"lang":"cpp","lang_name":"C++","time":"3Â months","timestamp":1730581067,"status":10,"status_display":"Accepted","runtime":"558 ms","url":"/submissions/detail/1441124697/","is_pending":"Not Pending","title":"Expression Add Operators","memory":"92.4 MB","code":"class Solution {\nprivate:\n    vector<string> results;\npublic:\n    vector<string> addOperators(string num, int target) {\n        int curPos = 0;\n        string preStr = \"\";\n        long preVal = 0;\n        long lastVal = 0;\n        dfs(num, (long)target, curPos, preStr, preVal, lastVal);\n        return results;\n    }\n    void dfs(string num, long target, int curPos, string preStr, long preVal, long lastVal) {\n        if(curPos == num.size()) {\n            if(preVal == target) \n                results.push_back(preStr);\n            return;\n        };\n        for(int i=curPos+1; i<=num.size(); i++) {\n            string curStr = num.substr(curPos, i-curPos);\n            long curVal = stol(curStr);\n            if(curStr.size()>1 && curStr[0] == '0')\n                break;\n            if(curPos == 0) {\n                dfs(num, target, i, curStr, curVal, curVal);\n            } else {\n                dfs(num, target, i, preStr+\"+\"+curStr, preVal+curVal, curVal);\n                dfs(num, target, i, preStr+\"-\"+curStr, preVal-curVal, -curVal);\n                dfs(num, target, i, preStr+\"*\"+curStr, preVal-lastVal+lastVal*curVal, lastVal*curVal);\n            }\n        }\n    }\n};","compare_result":"11111111111111111111111","title_slug":"expression-add-operators","has_notes":false,"flag_type":1}