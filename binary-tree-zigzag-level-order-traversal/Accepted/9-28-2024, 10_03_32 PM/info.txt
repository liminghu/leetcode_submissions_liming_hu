{"id":1405734565,"question_id":103,"lang":"cpp","lang_name":"C++","time":"4 months, 1 week","timestamp":1727586212,"status":10,"status_display":"Accepted","runtime":"0 ms","url":"/submissions/detail/1405734565/","is_pending":"Not Pending","title":"Binary Tree Zigzag Level Order Traversal","memory":"13.5 MB","code":"/*\nGiven the root of a binary tree, return the zigzag level order traversal of its nodes' values. (i.e., from left to right, then right to left for the next level and alternate between).\nConstraints:\nThe number of nodes in the tree is in the range [0, 2000].\n-100 <= Node.val <= 100\n*/\n/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    vector<vector<int>> zigzagLevelOrder(TreeNode* root) {\n        vector<vector<int>> ans;\n        if(root==NULL)\n            return ans;\n        deque<TreeNode*> q;\n        q.push_back(root);\n        bool left_right = true;\n        while(!q.empty()) {\n            int size = q.size();\n            vector<int> cur_ans;\n            for(int i=0; i<size; i++) {\n                if(left_right) {\n                    TreeNode* cur = q.front();\n                    cur_ans.push_back(cur->val);\n                    q.pop_front();\n                    if(cur->left)\n                        q.push_back(cur->left);\n                    if(cur->right)\n                        q.push_back(cur->right);\n                } else {\n                   TreeNode* cur = q.back();\n                    cur_ans.push_back(cur->val);\n                    q.pop_back();\n                    if(cur->right)\n                        q.push_front(cur->right);    \n                    if(cur->left)\n                        q.push_front(cur->left);                \n                }\n            }\n            ans.push_back(cur_ans);\n            left_right = !left_right;\n        }\n        return ans;\n    }\n};","compare_result":"111111111111111111111111111111111","title_slug":"binary-tree-zigzag-level-order-traversal","has_notes":false,"flag_type":1}