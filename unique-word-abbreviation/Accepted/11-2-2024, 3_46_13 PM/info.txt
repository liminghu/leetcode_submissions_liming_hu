{"id":1441180356,"question_id":288,"lang":"cpp","lang_name":"C++","time":"3Â months","timestamp":1730587573,"status":10,"status_display":"Accepted","runtime":"60 ms","url":"/submissions/detail/1441180356/","is_pending":"Not Pending","title":"Unique Word Abbreviation","memory":"66.5 MB","code":"class ValidWordAbbr {\nprivate:\n    unordered_map<string, unordered_set<string>> mp;\npublic:\n    ValidWordAbbr(vector<string>& dictionary) {\n        for(int i=0; i<dictionary.size(); i++) {\n            if(dictionary[i].size()<=2)\n                mp[dictionary[i]].insert(dictionary[i]);\n            string abbr;\n            abbr +=dictionary[i][0];\n            int count =dictionary[i].size() - 2;\n            abbr += to_string(count);    \n            abbr += dictionary[i][dictionary[i].size()-1];\n            mp[abbr].insert(dictionary[i]);\n        }\n    }\n    \n    bool isUnique(string word) {\n        string abbr;\n        if(word.size()<=2)\n            abbr = word;\n        else {\n            abbr =word[0];\n            int count =word.size() -2;\n            abbr += to_string(count);    \n            abbr += word[word.size()-1]; \n        }\n        if(mp.find(abbr) == mp.end())\n            return true;\n        else {\n            return mp[abbr].count(word) == mp[abbr].size();\n        }\n        return false;\n    }\n};\n\n/**\n * Your ValidWordAbbr object will be instantiated and called as such:\n * ValidWordAbbr* obj = new ValidWordAbbr(dictionary);\n * bool param_1 = obj->isUnique(word);\n */","compare_result":"1111111111111111111111111111111111111111111111111","title_slug":"unique-word-abbreviation","has_notes":false,"flag_type":1}