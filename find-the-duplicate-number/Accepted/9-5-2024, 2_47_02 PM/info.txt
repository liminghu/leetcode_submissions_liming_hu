{"id":1380453696,"question_id":287,"lang":"cpp","lang_name":"C++","time":"5Â months","timestamp":1725572822,"status":10,"status_display":"Accepted","runtime":"78 ms","url":"/submissions/detail/1380453696/","is_pending":"Not Pending","title":"Find the Duplicate Number","memory":"63.9 MB","code":"/*Given an array of integers nums containing n + 1 integers where each integer is in the range [1, n] inclusive.\nThere is only one repeated number in nums, return this repeated number.\nYou must solve the problem without modifying the array nums and uses only constant extra space.\n1 <= n <= 105\nnums.length == n + 1\n1 <= nums[i] <= n\nAll the integers in nums appear only once except for precisely one integer which appears two or more times.\n*/\n \nclass Solution {\npublic:\n    int findDuplicate(vector<int>& nums) {\n        /*sort(nums.begin(), nums.end());\n        int n = nums.size();\n        for(int i=1; i<n; i++) {\n             if(nums[i] == nums[i-1])\n                return nums[i];\n        };\n        return nums[0];*/\n        int duplicate = -1;\n        for(int i=0; i<nums.size(); i++) {\n            int cur = abs(nums[i]);\n            if(nums[cur] < 0) {\n                duplicate = cur;\n                break;\n            }\n            nums[cur] *= -1;\n        }\n        for(auto& num:nums) {\n            num = abs(num);\n        }\n        return duplicate;\n    }\n};","compare_result":"11111111111111111111111111111111111111111111111111111111111","title_slug":"find-the-duplicate-number","has_notes":false,"flag_type":1}