{"id":1396066723,"question_id":214,"lang":"cpp","lang_name":"C++","time":"4 months, 2 weeks","timestamp":1726803966,"status":10,"status_display":"Accepted","runtime":"3 ms","url":"/submissions/detail/1396066723/","is_pending":"Not Pending","title":"Shortest Palindrome","memory":"11.7 MB","code":"class Solution {\npublic:\n    string shortestPalindrome(string s) {\n        string t = \"#\";\n        for (int i=0; i<s.size(); i++) {            \n            t.push_back(s[i]);\n            t.push_back('#');\n        }\n\n        int n = t.size();\n        vector<int> P(n);\n        int maxCenter = -1, maxRight = -1;\n        int L = 1;\n        for (int i=0; i<n; i++) {\n            int r;\n            if ( i < maxRight) {\n                int j = maxCenter*2 - i;\n                r = min(P[j], maxRight - i);\n            } else\n                r = 0;\n\n            while (i-r>=0 && i+r<n && t[i-r]==t[i+r])\n                r++;\n\n            P[i] = r-1;\n            if (i+P[i]>maxRight) {\n                maxRight = i+P[i];\n                maxCenter = i;\n            }\n\n            if ( i - P[i] == 0 )\n                L = P[i];\n        }\n        \n        string temp = s.substr(L);\n        reverse(temp.begin(), temp.end());\n        return temp + s; \n    }\n};","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"shortest-palindrome","has_notes":false,"flag_type":1}