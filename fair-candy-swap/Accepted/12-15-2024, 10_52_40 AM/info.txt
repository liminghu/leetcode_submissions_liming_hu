{"id":1479638696,"question_id":924,"lang":"cpp","lang_name":"C++","time":"1 month, 3 weeks","timestamp":1734288760,"status":10,"status_display":"Accepted","runtime":"32 ms","url":"/submissions/detail/1479638696/","is_pending":"Not Pending","title":"Fair Candy Swap","memory":"51.9 MB","code":"class Solution {\npublic:\n    vector<int> fairCandySwap(vector<int>& aliceSizes, vector<int>& bobSizes) {\n        //Return an integer array answer where answer[0] is the number of candies in the box that Alice must exchange, and answer[1] is the number of candies in the box that Bob must exchange\n        int sumAlice = 0;\n        int sumBob = 0;\n        for(int c:aliceSizes)\n            sumAlice += c;\n        for(int c:bobSizes)\n            sumBob += c;    \n        int diff = (sumBob-sumAlice)/2;\n        unordered_set<int> setB;\n        for(int c:bobSizes)\n            setB.insert(c);\n        for(int c:aliceSizes) {\n            if(setB.find(c+diff)!=setB.end()) {\n                return {c, c+diff};\n            }\n        }\n        return {};           \n    }\n};","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"fair-candy-swap","has_notes":false,"flag_type":1}