{"id":1361835472,"question_id":162,"lang":"cpp","lang_name":"C++","time":"5 months, 3 weeks","timestamp":1724105502,"status":10,"status_display":"Accepted","runtime":"3 ms","url":"/submissions/detail/1361835472/","is_pending":"Not Pending","title":"Find Peak Element","memory":"11.6 MB","code":"/*A peak element is an element that is strictly greater than its neighbors.\nGiven a 0-indexed integer array nums, find a peak element, and return its index. \nIf the array contains multiple peaks, return the index to any of the peaks.\nYou may imagine that nums[-1] = nums[n] = -∞. In other words, an element is \nalways considered to be strictly greater than a neighbor that is outside the array.\nYou must write an algorithm that runs in O(log n) time.\n*/\nclass Solution {\npublic:\n    int findPeakElement(vector<int>& nums) {\n        /*\n            1 <= nums.length <= 1000\n            -231 <= nums[i] <= 231 - 1\n            nums[i] != nums[i + 1] for all valid i.\n        */\n        int l =0;\n        int r = nums.size() -1;\n        while(l<r) {\n            int mid = (l+r)/2;\n            if(nums[mid] > nums[mid+1])\n                r = mid;\n            else\n                l = mid+1;\n        }\n\n        return l;\n    }\n};","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111","title_slug":"find-peak-element","has_notes":false,"flag_type":1}