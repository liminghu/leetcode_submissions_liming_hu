{"id":1477562390,"question_id":933,"lang":"cpp","lang_name":"C++","time":"1 month, 3 weeks","timestamp":1734068887,"status":10,"status_display":"Accepted","runtime":"0 ms","url":"/submissions/detail/1477562390/","is_pending":"Not Pending","title":"Increasing Order Search Tree","memory":"10.8 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    TreeNode* increasingBST(TreeNode* root) {\n        return increasingBST(root, NULL);\n    }\n    TreeNode* increasingBST(TreeNode* root, TreeNode* next) {//next is its next node in inorder,\n        if(root==NULL)\n            return next;\n        TreeNode* res = increasingBST(root->left, root);\n        root->left = NULL;\n        root->right = increasingBST(root->right, next);\n        return res;\n    }\n};","compare_result":"11111111111111111111111111111111111111","title_slug":"increasing-order-search-tree","has_notes":false,"flag_type":1}