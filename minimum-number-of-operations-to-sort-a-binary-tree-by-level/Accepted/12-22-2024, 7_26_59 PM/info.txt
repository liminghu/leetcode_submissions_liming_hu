{"id":1485913845,"question_id":2558,"lang":"cpp","lang_name":"C++","time":"1 month, 2 weeks","timestamp":1734924419,"status":10,"status_display":"Accepted","runtime":"153 ms","url":"/submissions/detail/1485913845/","is_pending":"Not Pending","title":"Minimum Number of Operations to Sort a Binary Tree by Level","memory":"212.7 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    int minimumOperations(TreeNode* root) {\n        queue<TreeNode*> q;\n        q.push(root);\n        int ret = 0;\n        while(!q.empty()) {\n            int ls = q.size();\n            vector<int> levelValues(ls);\n            for(int i=0; i<ls; i++) {\n                TreeNode* cur = q.front();\n                q.pop();\n                levelValues[i] = cur->val;\n                if(cur->left != NULL)\n                    q.push(cur->left);\n                if(cur->right!=NULL)\n                    q.push(cur->right);\n            }\n            ret += getMinSwaps(levelValues);\n        }\n        return ret;\n    }\n    int getMinSwaps(vector<int>& nums) { //unique.\n        int ret = 0;\n        vector<int> sorted = nums;\n        sort(sorted.begin(), sorted.end());\n        unordered_map<int, int> pos;\n        for(int i=0; i<nums.size(); i++)\n            pos[nums[i]] = i;\n        for(int i=0; i<nums.size(); i++) {\n            if(nums[i]!=sorted[i]) {\n                ret++;\n                int curPos = pos[sorted[i]];\n                pos[nums[i]] = curPos;\n                swap(nums[curPos], nums[i]);\n            }\n        }\n        return ret;\n    }\n};","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"minimum-number-of-operations-to-sort-a-binary-tree-by-level","has_notes":false,"flag_type":1}