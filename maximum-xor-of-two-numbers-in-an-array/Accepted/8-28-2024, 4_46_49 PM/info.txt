{"id":1371667654,"question_id":421,"lang":"cpp","lang_name":"C++","time":"5 months, 1 week","timestamp":1724888809,"status":10,"status_display":"Accepted","runtime":"580 ms","url":"/submissions/detail/1371667654/","is_pending":"Not Pending","title":"Maximum XOR of Two Numbers in an Array","memory":"182.9 MB","code":"//Given an integer array nums, return the maximum result of nums[i] XOR nums[j], where 0 <= i <= j < n.\nclass Solution {\n    class TrieNode {\n        public:\n            TrieNode* children[2]; //0, 1\n    };\n\npublic:\n    int findMaximumXOR(vector<int>& nums) {\n        //1 <= nums.length <= 2 * 105\n        //0 <= nums[i] <= 231 - 1\n        TrieNode* root = new TrieNode();\n        for(auto num:nums) {\n            TrieNode* node = root;\n            for(int k=31; k>=0; k--) {\n                if(node->children[(num>>k)&1] == NULL)\n                    node->children[(num>>k)&1] = new TrieNode();;\n                node = node->children[(num>>k)&1];\n            }\n        }\n\n        int ret = 0;\n         for(auto num:nums) {\n            TrieNode* node = root;\n            int ans = 0;\n            for(int k=31; k>=0; k--) {\n                if(node->children[1-(num>>k)&1] != NULL) {\n                    ans = ans*2 + 1;\n                    node = node->children[1-(num>>k)&1];\n\n                } else {\n                    ans = ans*2;\n                    node = node->children[(num>>k)&1];\n                }\n            }\n            ret = max(ret, ans);\n        }\n        return ret;\n\n    }\n};","compare_result":"111111111111111111111111111111111111111111111","title_slug":"maximum-xor-of-two-numbers-in-an-array","has_notes":false,"flag_type":1}