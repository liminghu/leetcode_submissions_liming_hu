{"id":1300324335,"question_id":1069,"lang":"cpp","lang_name":"C++","time":"7 months, 2 weeks","timestamp":1719359259,"status":10,"status_display":"Accepted","runtime":"0 ms","url":"/submissions/detail/1300324335/","is_pending":"Not Pending","title":"Confusing Number","memory":"7 MB","code":"class Solution {\npublic:\n/*\nA confusing number is a number that when rotated 180 degrees becomes a different number with each digit valid.\n\nWe can rotate digits of a number by 180 degrees to form new digits.\n\nWhen 0, 1, 6, 8, and 9 are rotated 180 degrees, they become 0, 1, 9, 8, and 6 respectively.\nWhen 2, 3, 4, 5, and 7 are rotated 180 degrees, they become invalid.\nNote that after rotating a number, we can ignore leading zeros.\n\nFor example, after rotating 8000, we have 0008 which is considered as just 8.\nGiven an integer n, return true if it is a confusing number, or false otherwise.\n\n */\n    bool confusingNumber(int n) { //0 <= n <= 109\n        string n_str = to_string(n);\n        reverse(n_str.begin(), n_str.end());\n        vector<int> valid(10, -1);\n        valid = {0, 1, -1, -1,-1, -1, 9, -1, 8, 6};\n\n        int confusing_num = 0;\n        for(int i=0; i<n_str.length(); i++) {\n            if(valid[n_str[i]-'0']==-1)\n                return false;\n            else\n                confusing_num = confusing_num*10+valid[n_str[i]-'0'];\n        }\n        return confusing_num != n;\n\n        \n    }\n};","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"confusing-number","has_notes":false,"flag_type":1}